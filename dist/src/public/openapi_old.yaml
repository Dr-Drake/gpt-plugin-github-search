openapi: 3.0.3
info:
  title: GitHub Repositories Search Plugin
  description: A plugin that allows the user to search for GitHub repositories using ChatGPT.
  version: 'v0.0.1'
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
servers:
  - url: https://gpt-plugin-github-search.vercel.app
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  "/search/code":
    get:
      summary: Search code
      description: |-
        Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:

        `q=addClass+in:file+language:js+repo:jquery/jquery`

        This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.

        #### Considerations for code search

        Due to the complexity of searching code, there are a few restrictions on how searches are performed:

        *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.
        *   Only files smaller than 384 KB are searchable.
        *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing
        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.

        This endpoint requires you to authenticate and limits you to 10 requests per minute.
      tags:
      - search
      operationId: search/code
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-code
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          See "[Searching code](https://docs.github.com/search-github/searching-on-github/searching-code)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        deprecated: true
        description: "**This field is deprecated.** Sorts the results of your query.
          Can only be `indexed`, which indicates how recently a file has been indexed
          by the GitHub search infrastructure. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)"
        in: query
        required: false
        schema:
          type: string
          enum:
          - indexed
      - name: order
        description: "**This field is deprecated.** Determines whether the first search
          result returned is the highest number of matches (`desc`) or lowest number
          of matches (`asc`). This parameter is ignored unless you provide `sort`. "
        in: query
        deprecated: true
        required: false
        schema:
          type: string
          enum:
          - desc
          - asc
          default: desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/code-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/code-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: 
  "/search/commits":
    get:
      summary: Search commits
      description: |-
        Find commits via various criteria on the default branch (usually `main`). This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match
        metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:

        `q=repo:octocat/Spoon-Knife+css`
      tags:
      - search
      operationId: search/commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-commits
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          See "[Searching commits](https://docs.github.com/search-github/searching-on-github/searching-commits)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by `author-date` or `committer-date`.
          Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - author-date
          - committer-date
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/commit-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/commit-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: 
  "/search/issues":
    get:
      summary: Search issues and pull requests
      description: |-
        Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted
        search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.

        `q=windows+label:bug+language:python+state:open&sort=created&order=asc`

        This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.

        **Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see "[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests)."
      tags:
      - search
      operationId: search/issues-and-pull-requests
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-issues-and-pull-requests
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          See "[Searching issues and pull requests](https://docs.github.com/search-github/searching-on-github/searching-issues-and-pull-requests)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by the number of `comments`,
          `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`,
          `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort
          results by how recently the items were `created` or `updated`, Default:
          [best match](https://docs.github.com/rest/reference/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - comments
          - reactions
          - reactions-+1
          - reactions--1
          - reactions-smile
          - reactions-thinking_face
          - reactions-heart
          - reactions-tada
          - interactions
          - created
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/issue-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/issue-search-result-item-paginated"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: 
  "/search/labels":
    get:
      summary: Search labels
      description: |-
        Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:

        `q=bug+defect+enhancement&repository_id=64778136`

        The labels that best match the query appear first in the search results.
      tags:
      - search
      operationId: search/labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-labels
      parameters:
      - name: repository_id
        description: The id of the repository.
        in: query
        required: true
        schema:
          type: integer
      - name: q
        description: The search keywords. This endpoint does not accept qualifiers
          in the query. To learn more about the format of the query, see [Constructing
          a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by when the label was `created`
          or `updated`. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/label-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/label-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: 
  "/search/repositories":
    get:
      summary: Search repositories
      description: |-
        Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:

        `q=tetris+language:assembly&sort=stars&order=desc`

        This query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.
      tags:
      - search
      operationId: search/repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-repositories
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          See "[Searching for repositories](https://docs.github.com/articles/searching-for-repositories/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `stars`, `forks`,
          or `help-wanted-issues` or how recently the items were `updated`. Default:
          [best match](https://docs.github.com/rest/reference/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - stars
          - forks
          - help-wanted-issues
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/repo-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/repo-search-result-item-paginated"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: 
  "/search/topics":
    get:
      summary: Search topics
      description: |-
        Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination). See "[Searching topics](https://docs.github.com/articles/searching-topics/)" for a detailed list of qualifiers.

        When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:

        `q=ruby+is:featured`

        This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
      tags:
      - search
      operationId: search/topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-topics
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/topic-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/topic-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: 
  "/search/users":
    get:
      summary: Search users
      description: |-
        Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for users, you can get text match metadata for the issue **login**, public **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).

        For example, if you're looking for a list of popular users, you might try this query:

        `q=tom+repos:%3E42+followers:%3E1000`

        This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.
      tags:
      - search
      operationId: search/users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/search#search-users
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).
          See "[Searching users](https://docs.github.com/search-github/searching-on-github/searching-users)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `followers` or
          `repositories`, or when the person `joined` GitHub. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - followers
          - repositories
          - joined
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      "$ref": "#/components/schemas/user-search-result-item"
              examples:
                default:
                  "$ref": "#/components/examples/user-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '503':
          "$ref": "#/components/responses/service_unavailable"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory:
components:
  schemas:
    root:
      type: object
      properties:
        current_user_url:
          type: string
          format: uri-template
        current_user_authorizations_html_url:
          type: string
          format: uri-template
        authorizations_url:
          type: string
          format: uri-template
        code_search_url:
          type: string
          format: uri-template
        commit_search_url:
          type: string
          format: uri-template
        emails_url:
          type: string
          format: uri-template
        emojis_url:
          type: string
          format: uri-template
        events_url:
          type: string
          format: uri-template
        feeds_url:
          type: string
          format: uri-template
        followers_url:
          type: string
          format: uri-template
        following_url:
          type: string
          format: uri-template
        gists_url:
          type: string
          format: uri-template
        hub_url:
          type: string
          format: uri-template
        issue_search_url:
          type: string
          format: uri-template
        issues_url:
          type: string
          format: uri-template
        keys_url:
          type: string
          format: uri-template
        label_search_url:
          type: string
          format: uri-template
        notifications_url:
          type: string
          format: uri-template
        organization_url:
          type: string
          format: uri-template
        organization_repositories_url:
          type: string
          format: uri-template
        organization_teams_url:
          type: string
          format: uri-template
        public_gists_url:
          type: string
          format: uri-template
        rate_limit_url:
          type: string
          format: uri-template
        repository_url:
          type: string
          format: uri-template
        repository_search_url:
          type: string
          format: uri-template
        current_user_repositories_url:
          type: string
          format: uri-template
        starred_url:
          type: string
          format: uri-template
        starred_gists_url:
          type: string
          format: uri-template
        topic_search_url:
          type: string
          format: uri-template
        user_url:
          type: string
          format: uri-template
        user_organizations_url:
          type: string
          format: uri-template
        user_repositories_url:
          type: string
          format: uri-template
        user_search_url:
          type: string
          format: uri-template
      required:
      - current_user_url
      - current_user_authorizations_html_url
      - authorizations_url
      - code_search_url
      - commit_search_url
      - emails_url
      - emojis_url
      - events_url
      - feeds_url
      - followers_url
      - following_url
      - gists_url
      - hub_url
      - issue_search_url
      - issues_url
      - keys_url
      - label_search_url
      - notifications_url
      - organization_url
      - organization_repositories_url
      - organization_teams_url
      - public_gists_url
      - rate_limit_url
      - repository_url
      - repository_search_url
      - current_user_repositories_url
      - starred_url
      - starred_gists_url
      - user_url
      - user_organizations_url
      - user_repositories_url
      - user_search_url
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to specific
        repositories. They come with granular permissions and built-in webhooks. GitHub
        apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
            RSA PRIVATE KEY-----\n"'
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    webhook-config-url:
      type: string
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
    webhook-config-content-type:
      type: string
      description: The media type used to serialize the payloads. Supported values
        include `json` and `form`. The default is `form`.
      example: '"json"'
    webhook-config-secret:
      type: string
      description: If provided, the `secret` will be used as the `key` to generate
        the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
    webhook-config-insecure-ssl:
      oneOf:
      - type: string
        description: Determines whether the SSL certificate of the host for `url`
          will be verified when delivering payloads. Supported values include `0`
          (verification is performed) and `1` (verification is not performed). The
          default is `0`. **We strongly recommend not setting this to `1` as you are
          subject to man-in-the-middle and other attacks.**
        example: '"0"'
      - type: number
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          "$ref": "#/components/schemas/webhook-config-url"
        content_type:
          "$ref": "#/components/schemas/webhook-config-content-type"
        secret:
          "$ref": "#/components/schemas/webhook-config-secret"
        insecure_ssl:
          "$ref": "#/components/schemas/webhook-config-insecure-ssl"
    hook-delivery-item:
      title: Simple webhook delivery
      description: Delivery made by a webhook, without request and response information.
      type: object
      properties:
        id:
          description: Unique identifier of the webhook delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries
            for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the webhook delivery occurred.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the webhook delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Describes the response returned after attempting the delivery.
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this
            event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries
            for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this
            event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
      - request
      - response
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    integration-installation-request:
      title: Integration Installation Request
      description: Request to install an integration on a target
      type: object
      properties:
        id:
          description: Unique identifier of the request installation.
          type: integer
          example: 42
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        account:
          anyOf:
          - "$ref": "#/components/schemas/simple-user"
          - "$ref": "#/components/schemas/enterprise"
        requester:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2022-07-08T16:18:44-04:00'
      required:
      - id
      - account
      - requester
      - created_at
    app-permissions:
      title: App Permissions
      type: object
      description: The permissions granted to the user-to-server access token.
      properties:
        actions:
          type: string
          description: The level of permission to grant the access token for GitHub
            Actions workflows, workflow runs, and artifacts.
          enum:
          - read
          - write
        administration:
          type: string
          description: The level of permission to grant the access token for repository
            creation, deletion, settings, teams, and collaborators creation.
          enum:
          - read
          - write
        checks:
          type: string
          description: The level of permission to grant the access token for checks
            on code.
          enum:
          - read
          - write
        contents:
          type: string
          description: The level of permission to grant the access token for repository
            contents, commits, branches, downloads, releases, and merges.
          enum:
          - read
          - write
        deployments:
          type: string
          description: The level of permission to grant the access token for deployments
            and deployment statuses.
          enum:
          - read
          - write
        environments:
          type: string
          description: The level of permission to grant the access token for managing
            repository environments.
          enum:
          - read
          - write
        issues:
          type: string
          description: The level of permission to grant the access token for issues
            and related comments, assignees, labels, and milestones.
          enum:
          - read
          - write
        metadata:
          type: string
          description: The level of permission to grant the access token to search
            repositories, list collaborators, and access repository metadata.
          enum:
          - read
          - write
        packages:
          type: string
          description: The level of permission to grant the access token for packages
            published to GitHub Packages.
          enum:
          - read
          - write
        pages:
          type: string
          description: The level of permission to grant the access token to retrieve
            Pages statuses, configuration, and builds, as well as create new builds.
          enum:
          - read
          - write
        pull_requests:
          type: string
          description: The level of permission to grant the access token for pull
            requests and related comments, assignees, labels, milestones, and merges.
          enum:
          - read
          - write
        repository_hooks:
          type: string
          description: The level of permission to grant the access token to manage
            the post-receive hooks for a repository.
          enum:
          - read
          - write
        repository_projects:
          type: string
          description: The level of permission to grant the access token to manage
            repository projects, columns, and cards.
          enum:
          - read
          - write
          - admin
        secret_scanning_alerts:
          type: string
          description: The level of permission to grant the access token to view and
            manage secret scanning alerts.
          enum:
          - read
          - write
        secrets:
          type: string
          description: The level of permission to grant the access token to manage
            repository secrets.
          enum:
          - read
          - write
        security_events:
          type: string
          description: The level of permission to grant the access token to view and
            manage security events like code scanning alerts.
          enum:
          - read
          - write
        single_file:
          type: string
          description: The level of permission to grant the access token to manage
            just a single file.
          enum:
          - read
          - write
        statuses:
          type: string
          description: The level of permission to grant the access token for commit
            statuses.
          enum:
          - read
          - write
        vulnerability_alerts:
          type: string
          description: The level of permission to grant the access token to manage
            Dependabot alerts.
          enum:
          - read
          - write
        workflows:
          type: string
          description: The level of permission to grant the access token to update
            GitHub Actions workflow files.
          enum:
          - write
        members:
          type: string
          description: The level of permission to grant the access token for organization
            teams and members.
          enum:
          - read
          - write
        organization_administration:
          type: string
          description: The level of permission to grant the access token to manage
            access to an organization.
          enum:
          - read
          - write
        organization_custom_roles:
          type: string
          description: The level of permission to grant the access token for custom
            repository roles management. This property is in beta and is subject to
            change.
          enum:
          - read
          - write
        organization_announcement_banners:
          type: string
          description: The level of permission to grant the access token to view and
            manage announcement banners for an organization.
          enum:
          - read
          - write
        organization_hooks:
          type: string
          description: The level of permission to grant the access token to manage
            the post-receive hooks for an organization.
          enum:
          - read
          - write
        organization_personal_access_tokens:
          type: string
          description: The level of permission to grant the access token for viewing
            and managing fine-grained personal access token requests to an organization.
          enum:
          - read
          - write
        organization_personal_access_token_requests:
          type: string
          description: The level of permission to grant the access token for viewing
            and managing fine-grained personal access tokens that have been approved
            by an organization.
          enum:
          - read
          - write
        organization_plan:
          type: string
          description: The level of permission to grant the access token for viewing
            an organization's plan.
          enum:
          - read
        organization_projects:
          type: string
          description: The level of permission to grant the access token to manage
            organization projects and projects beta (where available).
          enum:
          - read
          - write
          - admin
        organization_packages:
          type: string
          description: The level of permission to grant the access token for organization
            packages published to GitHub Packages.
          enum:
          - read
          - write
        organization_secrets:
          type: string
          description: The level of permission to grant the access token to manage
            organization secrets.
          enum:
          - read
          - write
        organization_self_hosted_runners:
          type: string
          description: The level of permission to grant the access token to view and
            manage GitHub Actions self-hosted runners available to an organization.
          enum:
          - read
          - write
        organization_user_blocking:
          type: string
          description: The level of permission to grant the access token to view and
            manage users blocked by the organization.
          enum:
          - read
          - write
        team_discussions:
          type: string
          description: The level of permission to grant the access token to manage
            team discussions and related comments.
          enum:
          - read
          - write
      example:
        contents: read
        issues: read
        deployments: write
        single_file: read
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
          - "$ref": "#/components/schemas/simple-user"
          - "$ref": "#/components/schemas/enterprise"
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        target_id:
          description: The ID of the user or organization this token is being scoped
            to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          "$ref": "#/components/schemas/app-permissions"
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - ".github/issue_TEMPLATE.md"
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
      - id
      - app_id
      - app_slug
      - target_id
      - target_type
      - single_file_name
      - repository_selection
      - access_tokens_url
      - html_url
      - repositories_url
      - events
      - account
      - permissions
      - created_at
      - updated_at
      - suspended_by
      - suspended_at
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      nullable: true
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            use_squash_pr_title_as_default:
              type: boolean
            squash_merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - COMMIT_OR_PR_TITLE
              description: |-
                The default value for a squash merge commit title:

                - `PR_TITLE` - default to the pull request's title.
                - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
            squash_merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - COMMIT_MESSAGES
              - BLANK
              description: |-
                The default value for a squash merge commit message:

                - `PR_BODY` - default to the pull request's body.
                - `COMMIT_MESSAGES` - default to the branch's commit messages.
                - `BLANK` - default to a blank commit message.
            merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - MERGE_MESSAGE
              description: |-
                The default value for a merge commit title.

                - `PR_TITLE` - default to the pull request's title.
                - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
            merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - PR_TITLE
              - BLANK
              description: |-
                The default value for a merge commit message.

                - `PR_TITLE` - default to the pull request's title.
                - `PR_BODY` - default to the pull request's body.
                - `BLANK` - default to a blank commit message.
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its
            base branch can always be updated even if it is not required to be up
            to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title
            as default. **This property has been deprecated. Please use `squash_merge_commit_title`
            instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

            - `PR_TITLE` - default to the pull request's title.
            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    installation-token:
      title: Installation Token
      description: Authentication token for a GitHub App installed on a user or org.
      type: object
      properties:
        token:
          type: string
        expires_at:
          type: string
        permissions:
          "$ref": "#/components/schemas/app-permissions"
        repository_selection:
          type: string
          enum:
          - all
          - selected
        repositories:
          type: array
          items:
            "$ref": "#/components/schemas/repository"
        single_file:
          type: string
          example: README.md
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - ".github/issue_TEMPLATE.md"
      required:
      - token
      - expires_at
    nullable-scoped-installation:
      title: Scoped Installation
      type: object
      properties:
        permissions:
          "$ref": "#/components/schemas/app-permissions"
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - ".github/issue_TEMPLATE.md"
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        account:
          "$ref": "#/components/schemas/simple-user"
      required:
      - permissions
      - repository_selection
      - single_file_name
      - repositories_url
      - account
      nullable: true
    authorization:
      title: Authorization
      description: The authorization for an OAuth app, GitHub App, or a Personal Access
        Token.
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          nullable: true
        token:
          type: string
        token_last_eight:
          type: string
          nullable: true
        hashed_token:
          type: string
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - client_id
          - name
          - url
        note:
          type: string
          nullable: true
        note_url:
          type: string
          format: uri
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        fingerprint:
          type: string
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        installation:
          "$ref": "#/components/schemas/nullable-scoped-installation"
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
      - app
      - id
      - note
      - note_url
      - scopes
      - token
      - hashed_token
      - token_last_eight
      - fingerprint
      - url
      - created_at
      - updated_at
      - expires_at
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    alert-number:
      type: integer
      description: The security alert number.
      readOnly: true
    dependabot-alert-package:
      type: object
      description: Details for the vulnerable package.
      readOnly: true
      properties:
        ecosystem:
          type: string
          description: The package's language or package management ecosystem.
          readOnly: true
        name:
          type: string
          description: The unique package name within its ecosystem.
          readOnly: true
      required:
      - ecosystem
      - name
      additionalProperties: false
    dependabot-alert-security-vulnerability:
      type: object
      description: Details pertaining to one vulnerable version range for the advisory.
      readOnly: true
      properties:
        package:
          "$ref": "#/components/schemas/dependabot-alert-package"
        severity:
          type: string
          description: The severity of the vulnerability.
          readOnly: true
          enum:
          - low
          - medium
          - high
          - critical
        vulnerable_version_range:
          type: string
          description: Conditions that identify vulnerable versions of this vulnerability's
            package.
          readOnly: true
        first_patched_version:
          type: object
          description: Details pertaining to the package version that patches this
            vulnerability.
          readOnly: true
          nullable: true
          properties:
            identifier:
              type: string
              description: The package version that patches this vulnerability.
              readOnly: true
          required:
          - identifier
          additionalProperties: false
      required:
      - package
      - severity
      - vulnerable_version_range
      - first_patched_version
      additionalProperties: false
    dependabot-alert-security-advisory:
      type: object
      description: Details for the GitHub Security Advisory.
      readOnly: true
      properties:
        ghsa_id:
          type: string
          description: The unique GitHub Security Advisory ID assigned to the advisory.
          readOnly: true
        cve_id:
          type: string
          description: The unique CVE ID assigned to the advisory.
          readOnly: true
          nullable: true
        summary:
          type: string
          description: A short, plain text summary of the advisory.
          readOnly: true
          maxLength: 1024
        description:
          type: string
          description: A long-form Markdown-supported description of the advisory.
          readOnly: true
        vulnerabilities:
          type: array
          description: Vulnerable version range information for the advisory.
          readOnly: true
          items:
            "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
        severity:
          type: string
          description: The severity of the advisory.
          readOnly: true
          enum:
          - low
          - medium
          - high
          - critical
        cvss:
          type: object
          description: Details for the advisory pertaining to the Common Vulnerability
            Scoring System.
          readOnly: true
          properties:
            score:
              type: number
              description: The overall CVSS score of the advisory.
              minimum: 0
              maximum: 10
              readOnly: true
            vector_string:
              type: string
              description: The full CVSS vector string for the advisory.
              readOnly: true
              nullable: true
          required:
          - score
          - vector_string
          additionalProperties: false
        cwes:
          type: array
          description: Details for the advisory pertaining to Common Weakness Enumeration.
          readOnly: true
          items:
            type: object
            description: A CWE weakness assigned to the advisory.
            readOnly: true
            properties:
              cwe_id:
                type: string
                description: The unique CWE ID.
                readOnly: true
              name:
                type: string
                description: The short, plain text name of the CWE.
                readOnly: true
            required:
            - cwe_id
            - name
            additionalProperties: false
        identifiers:
          type: array
          description: Values that identify this advisory among security information
            sources.
          readOnly: true
          items:
            type: object
            description: An advisory identifier.
            readOnly: true
            properties:
              type:
                type: string
                description: The type of advisory identifier.
                readOnly: true
                enum:
                - CVE
                - GHSA
              value:
                type: string
                description: The value of the advisory identifer.
                readOnly: true
            required:
            - value
            - type
            additionalProperties: false
        references:
          type: array
          description: Links to additional advisory information.
          readOnly: true
          items:
            type: object
            description: A link to additional advisory information.
            readOnly: true
            properties:
              url:
                type: string
                description: The URL of the reference.
                format: uri
                readOnly: true
            required:
            - url
            additionalProperties: false
        published_at:
          type: string
          description: 'The time that the advisory was published in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          format: date-time
          readOnly: true
        updated_at:
          type: string
          description: 'The time that the advisory was last modified in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          format: date-time
          readOnly: true
        withdrawn_at:
          type: string
          description: 'The time that the advisory was withdrawn in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          format: date-time
          readOnly: true
          nullable: true
      required:
      - ghsa_id
      - cve_id
      - summary
      - description
      - vulnerabilities
      - severity
      - cvss
      - cwes
      - identifiers
      - references
      - published_at
      - updated_at
      - withdrawn_at
      additionalProperties: false
    alert-url:
      type: string
      description: The REST API URL of the alert resource.
      format: uri
      readOnly: true
    alert-html-url:
      type: string
      description: The GitHub URL of the alert resource.
      format: uri
      readOnly: true
    alert-created-at:
      type: string
      description: 'The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    alert-updated-at:
      type: string
      description: 'The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    alert-dismissed-at:
      type: string
      description: 'The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    alert-fixed-at:
      type: string
      description: 'The time that the alert was no longer detected and was considered
        fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    alert-auto-dismissed-at:
      type: string
      description: 'The time that the alert was auto-dismissed in ISO 8601 format:
        `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    simple-repository:
      title: Simple Repository
      description: A GitHub repository.
      type: object
      properties:
        id:
          type: integer
          example: 1296269
          description: A unique identifier of the repository.
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          description: The GraphQL identifier of the repository.
        name:
          type: string
          example: Hello-World
          description: The name of the repository.
        full_name:
          type: string
          example: octocat/Hello-World
          description: The full, globally unique, name of the repository.
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
          description: Whether the repository is private.
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
          description: The URL to view the repository on GitHub.com.
        description:
          type: string
          example: This your first repo!
          nullable: true
          description: The repository description.
        fork:
          type: boolean
          description: Whether the repository is a fork.
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
          description: The URL to get more information about the repository from the
            GitHub API.
        archive_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          description: A template for the API URL to download the repository as an
            archive.
        assignees_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          description: A template for the API URL to list the available assignees
            for issues in the repository.
        blobs_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          description: A template for the API URL to create or retrieve a raw Git
            blob in the repository.
        branches_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          description: A template for the API URL to get information about branches
            in the repository.
        collaborators_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          description: A template for the API URL to get information about collaborators
            of the repository.
        comments_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          description: A template for the API URL to get information about comments
            on the repository.
        commits_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          description: A template for the API URL to get information about commits
            on the repository.
        compare_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          description: A template for the API URL to compare two commits or refs.
        contents_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          description: A template for the API URL to get the contents of the repository.
        contributors_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contributors
          description: A template for the API URL to list the contributors to the
            repository.
        deployments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/deployments
          description: The API URL to list the deployments of the repository.
        downloads_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/downloads
          description: The API URL to list the downloads on the repository.
        events_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/events
          description: The API URL to list the events of the repository.
        forks_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/forks
          description: The API URL to list the forks of the repository.
        git_commits_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          description: A template for the API URL to get information about Git commits
            of the repository.
        git_refs_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          description: A template for the API URL to get information about Git refs
            of the repository.
        git_tags_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          description: A template for the API URL to get information about Git tags
            of the repository.
        issue_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          description: A template for the API URL to get information about issue comments
            on the repository.
        issue_events_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          description: A template for the API URL to get information about issue events
            on the repository.
        issues_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          description: A template for the API URL to get information about issues
            on the repository.
        keys_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          description: A template for the API URL to get information about deploy
            keys on the repository.
        labels_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          description: A template for the API URL to get information about labels
            of the repository.
        languages_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/languages
          description: The API URL to get information about the languages of the repository.
        merges_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/merges
          description: The API URL to merge branches in the repository.
        milestones_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          description: A template for the API URL to get information about milestones
            of the repository.
        notifications_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          description: A template for the API URL to get information about notifications
            on the repository.
        pulls_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          description: A template for the API URL to get information about pull requests
            on the repository.
        releases_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          description: A template for the API URL to get information about releases
            on the repository.
        stargazers_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/stargazers
          description: The API URL to list the stargazers on the repository.
        statuses_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          description: A template for the API URL to get information about statuses
            of a commit.
        subscribers_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/subscribers
          description: The API URL to list the subscribers on the repository.
        subscription_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/subscription
          description: The API URL to subscribe to notifications for this repository.
        tags_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/tags
          description: The API URL to get information about tags on the repository.
        teams_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/teams
          description: The API URL to list the teams on the repository.
        trees_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          description: A template for the API URL to create or retrieve a raw Git
            tree of the repository.
        hooks_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks
          description: The API URL to list the hooks on the repository.
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    dependabot-alert-with-repository:
      type: object
      description: A Dependabot alert.
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        state:
          type: string
          description: The state of the Dependabot alert.
          readOnly: true
          enum:
          - auto_dismissed
          - dismissed
          - fixed
          - open
        dependency:
          type: object
          description: Details for the vulnerable dependency.
          readOnly: true
          properties:
            package:
              "$ref": "#/components/schemas/dependabot-alert-package"
            manifest_path:
              type: string
              description: The full path to the dependency manifest file, relative
                to the root of the repository.
              readOnly: true
            scope:
              type: string
              description: The execution scope of the vulnerable dependency.
              readOnly: true
              nullable: true
              enum:
              - development
              - runtime
        security_advisory:
          "$ref": "#/components/schemas/dependabot-alert-security-advisory"
        security_vulnerability:
          "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_reason:
          type: string
          description: The reason that the alert was dismissed.
          nullable: true
          enum:
          - fix_started
          - inaccurate
          - no_bandwidth
          - not_used
          - tolerable_risk
        dismissed_comment:
          type: string
          description: An optional comment associated with the alert's dismissal.
          nullable: true
          maxLength: 280
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        auto_dismissed_at:
          "$ref": "#/components/schemas/alert-auto-dismissed-at"
        repository:
          "$ref": "#/components/schemas/simple-repository"
      required:
      - number
      - state
      - dependency
      - security_advisory
      - security_vulnerability
      - url
      - html_url
      - created_at
      - updated_at
      - dismissed_at
      - dismissed_by
      - dismissed_reason
      - dismissed_comment
      - fixed_at
      - repository
      additionalProperties: false
    nullable-alert-updated-at:
      type: string
      description: 'The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    secret-scanning-alert-state:
      description: Sets the state of the secret scanning alert. You must provide `resolution`
        when you set the state to `resolved`.
      type: string
      enum:
      - open
      - resolved
    secret-scanning-alert-resolution:
      type: string
      description: "**Required when the `state` is `resolved`.** The reason for resolving
        the alert."
      nullable: true
      enum:
      - false_positive
      - wont_fix
      - revoked
      - used_in_tests
    organization-secret-scanning-alert:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/nullable-alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        locations_url:
          type: string
          format: uri
          description: The REST API URL of the code locations for this alert.
        state:
          "$ref": "#/components/schemas/secret-scanning-alert-state"
        resolution:
          "$ref": "#/components/schemas/secret-scanning-alert-resolution"
        resolved_at:
          type: string
          format: date-time
          description: 'The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolved_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        secret_type:
          type: string
          description: The type of secret that secret scanning detected.
        secret_type_display_name:
          type: string
          description: |-
            User-friendly name for the detected secret, matching the `secret_type`.
            For a list of built-in patterns, see "[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)."
        secret:
          type: string
          description: The secret that was detected.
        repository:
          "$ref": "#/components/schemas/simple-repository"
        push_protection_bypassed:
          type: boolean
          description: Whether push protection was bypassed for the detected secret.
          nullable: true
        push_protection_bypassed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        push_protection_bypassed_at:
          type: string
          format: date-time
          description: 'The time that push protection was bypassed in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolution_comment:
          type: string
          description: The comment that was optionally added when this alert was closed
          nullable: true
    actor:
      title: Actor
      description: Actor
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        display_login:
          type: string
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - login
      - gravatar_id
      - url
      - avatar_url
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
      nullable: true
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to specific
        repositories. They come with granular permissions and built-in webhooks. GitHub
        apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END
            RSA PRIVATE KEY-----\n"'
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
      nullable: true
    author-association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
      - COLLABORATOR
      - CONTRIBUTOR
      - FIRST_TIMER
      - FIRST_TIME_CONTRIBUTOR
      - MANNEQUIN
      - MEMBER
      - NONE
      - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        "+1":
          type: integer
        "-1":
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - "+1"
      - "-1"
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      type: object
      properties:
        id:
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        state_reason:
          description: The reason for the current state
          example: not_planned
          type: string
          nullable: true
          enum:
          - completed
          - reopened
          - not_planned
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try
            and create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        labels:
          description: Labels to associate with this issue; pass one or more label
            names to replace the set of labels on this issue; send an empty array
            to clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
          - bug
          - registration
          type: array
          items:
            oneOf:
            - type: string
            - type: object
              properties:
                id:
                  type: integer
                  format: int64
                node_id:
                  type: string
                url:
                  type: string
                  format: uri
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                color:
                  type: string
                  nullable: true
                default:
                  type: boolean
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/repository"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        author_association:
          "$ref": "#/components/schemas/author-association"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
    issue-comment:
      title: Issue Comment
      description: Comments provide a way for people to collaborate on an issue.
      type: object
      properties:
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          "$ref": "#/components/schemas/author-association"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - id
      - node_id
      - html_url
      - issue_url
      - author_association
      - user
      - url
      - created_at
      - updated_at
    event:
      title: Event
      description: Event
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          nullable: true
        actor:
          "$ref": "#/components/schemas/actor"
        repo:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - id
          - name
          - url
        org:
          "$ref": "#/components/schemas/actor"
        payload:
          type: object
          properties:
            action:
              type: string
            issue:
              "$ref": "#/components/schemas/issue"
            comment:
              "$ref": "#/components/schemas/issue-comment"
            pages:
              type: array
              items:
                type: object
                properties:
                  page_name:
                    type: string
                  title:
                    type: string
                  summary:
                    type: string
                    nullable: true
                  action:
                    type: string
                  sha:
                    type: string
                  html_url:
                    type: string
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
      required:
      - id
      - type
      - actor
      - repo
      - payload
      - public
      - created_at
    link-with-type:
      title: Link With Type
      description: Hypermedia Link with Type
      type: object
      properties:
        href:
          type: string
        type:
          type: string
      required:
      - href
      - type
    feed:
      title: Feed
      description: Feed
      type: object
      properties:
        timeline_url:
          type: string
          example: https://github.com/timeline
        user_url:
          type: string
          example: https://github.com/{user}
        current_user_public_url:
          type: string
          example: https://github.com/octocat
        current_user_url:
          type: string
          example: https://github.com/octocat.private?token=abc123
        current_user_actor_url:
          type: string
          example: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url:
          type: string
          example: https://github.com/octocat-org
        current_user_organization_urls:
          type: array
          example:
          - https://github.com/organizations/github/octocat.private.atom?token=abc123
          items:
            type: string
            format: uri
        security_advisories_url:
          type: string
          example: https://github.com/security-advisories
        repository_discussions_url:
          type: string
          example: https://github.com/{user}/{repo}/discussions
          description: A feed of discussions for a given repository.
        repository_discussions_category_url:
          type: string
          example: https://github.com/{user}/{repo}/discussions/categories/{category}
          description: A feed of discussions for a given repository and category.
        _links:
          type: object
          properties:
            timeline:
              "$ref": "#/components/schemas/link-with-type"
            user:
              "$ref": "#/components/schemas/link-with-type"
            security_advisories:
              "$ref": "#/components/schemas/link-with-type"
            current_user:
              "$ref": "#/components/schemas/link-with-type"
            current_user_public:
              "$ref": "#/components/schemas/link-with-type"
            current_user_actor:
              "$ref": "#/components/schemas/link-with-type"
            current_user_organization:
              "$ref": "#/components/schemas/link-with-type"
            current_user_organizations:
              type: array
              items:
                "$ref": "#/components/schemas/link-with-type"
            repository_discussions:
              "$ref": "#/components/schemas/link-with-type"
            repository_discussions_category:
              "$ref": "#/components/schemas/link-with-type"
          required:
          - timeline
          - user
      required:
      - _links
      - timeline_url
      - user_url
    base-gist:
      title: Base Gist
      description: Base Gist
      type: object
      properties:
        url:
          type: string
          format: uri
        forks_url:
          type: string
          format: uri
        commits_url:
          type: string
          format: uri
        id:
          type: string
        node_id:
          type: string
        git_pull_url:
          type: string
          format: uri
        git_push_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        files:
          type: object
          additionalProperties:
            type: object
            properties:
              filename:
                type: string
              type:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        comments:
          type: integer
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        comments_url:
          type: string
          format: uri
        owner:
          "$ref": "#/components/schemas/simple-user"
        truncated:
          type: boolean
        forks:
          type: array
          items: {}
        history:
          type: array
          items: {}
      required:
      - id
      - node_id
      - url
      - forks_url
      - commits_url
      - git_pull_url
      - git_push_url
      - html_url
      - comments_url
      - public
      - description
      - comments
      - user
      - files
      - created_at
      - updated_at
    public-user:
      title: Public User
      description: Public User
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        name:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          nullable: true
        twitter_username:
          type: string
          nullable: true
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        private_gists:
          type: integer
          example: 1
        total_private_repos:
          type: integer
          example: 2
        owned_private_repos:
          type: integer
          example: 2
        disk_usage:
          type: integer
          example: 1
        collaborators:
          type: integer
          example: 3
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - bio
      - blog
      - company
      - email
      - followers
      - following
      - hireable
      - location
      - name
      - public_gists
      - public_repos
      - created_at
      - updated_at
      additionalProperties: false
    gist-history:
      title: Gist History
      description: Gist History
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        version:
          type: string
        committed_at:
          type: string
          format: date-time
        change_status:
          type: object
          properties:
            total:
              type: integer
            additions:
              type: integer
            deletions:
              type: integer
        url:
          type: string
          format: uri
    gist-simple:
      title: Gist Simple
      description: Gist Simple
      type: object
      properties:
        forks:
          deprecated: true
          nullable: true
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              url:
                type: string
                format: uri
              user:
                "$ref": "#/components/schemas/public-user"
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
        history:
          deprecated: true
          nullable: true
          type: array
          items:
            "$ref": "#/components/schemas/gist-history"
        fork_of:
          nullable: true
          title: Gist
          description: Gist
          type: object
          properties:
            url:
              type: string
              format: uri
            forks_url:
              type: string
              format: uri
            commits_url:
              type: string
              format: uri
            id:
              type: string
            node_id:
              type: string
            git_pull_url:
              type: string
              format: uri
            git_push_url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            files:
              type: object
              additionalProperties:
                type: object
                properties:
                  filename:
                    type: string
                  type:
                    type: string
                  language:
                    type: string
                  raw_url:
                    type: string
                  size:
                    type: integer
            public:
              type: boolean
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            description:
              type: string
              nullable: true
            comments:
              type: integer
            user:
              "$ref": "#/components/schemas/nullable-simple-user"
            comments_url:
              type: string
              format: uri
            owner:
              "$ref": "#/components/schemas/nullable-simple-user"
            truncated:
              type: boolean
            forks:
              type: array
              items: {}
            history:
              type: array
              items: {}
          required:
          - id
          - node_id
          - url
          - forks_url
          - commits_url
          - git_pull_url
          - git_push_url
          - html_url
          - comments_url
          - public
          - description
          - comments
          - user
          - files
          - created_at
          - updated_at
        url:
          type: string
        forks_url:
          type: string
        commits_url:
          type: string
        id:
          type: string
        node_id:
          type: string
        git_pull_url:
          type: string
        git_push_url:
          type: string
        html_url:
          type: string
        files:
          type: object
          additionalProperties:
            nullable: true
            type: object
            properties:
              filename:
                type: string
              type:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
              truncated:
                type: boolean
              content:
                type: string
        public:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
        description:
          type: string
          nullable: true
        comments:
          type: integer
        user:
          type: string
          nullable: true
        comments_url:
          type: string
        owner:
          "$ref": "#/components/schemas/simple-user"
        truncated:
          type: boolean
    gist-comment:
      title: Gist Comment
      description: A comment made to a gist.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOkdpc3RDb21tZW50MQ==
        url:
          type: string
          format: uri
          example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body:
          description: The comment text.
          type: string
          maxLength: 65535
          example: Body of the attachment
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-18T23:23:56Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-18T23:23:56Z'
        author_association:
          "$ref": "#/components/schemas/author-association"
      required:
      - url
      - id
      - node_id
      - user
      - body
      - author_association
      - created_at
      - updated_at
    gist-commit:
      title: Gist Commit
      description: Gist Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
        version:
          type: string
          example: 57a7f021a713b1c5a6a199b54cc514735d2d462f
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        change_status:
          type: object
          properties:
            total:
              type: integer
            additions:
              type: integer
            deletions:
              type: integer
        committed_at:
          type: string
          format: date-time
          example: '2010-04-14T02:15:15Z'
      required:
      - url
      - user
      - version
      - committed_at
      - change_status
    gitignore-template:
      title: Gitignore Template
      description: Gitignore Template
      type: object
      properties:
        name:
          type: string
          example: C
        source:
          type: string
          example: |
            # Object files
            *.o

            # Libraries
            *.lib
            *.a

            # Shared objects (inc. Windows DLLs)
            *.dll
            *.so
            *.so.*
            *.dylib

            # Executables
            *.exe
            *.out
            *.app
      required:
      - name
      - source
    license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
    license:
      title: License
      description: License
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        spdx_id:
          type: string
          example: MIT
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/licenses/mit
          nullable: true
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
          example: http://choosealicense.com/licenses/mit/
        description:
          type: string
          example: A permissive license that is short and to the point. It lets people
            do anything with your code with proper attribution and without warranty.
        implementation:
          type: string
          example: Create a text file (typically named LICENSE or LICENSE.txt) in
            the root of your source code and copy the text of the license into the
            file. Replace [year] with the current year and [fullname] with the name
            (or names) of the copyright holders.
        permissions:
          type: array
          example:
          - commercial-use
          - modifications
          - distribution
          - sublicense
          - private-use
          items:
            type: string
        conditions:
          type: array
          example:
          - include-copyright
          items:
            type: string
        limitations:
          type: array
          example:
          - no-liability
          items:
            type: string
        body:
          type: string
          example: |2


            The MIT License (MIT)

            Copyright (c) [year] [fullname]

            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the "Software"), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the following conditions:

            The above copyright notice and this permission notice shall be included in all
            copies or substantial portions of the Software.

            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
            IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
            FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
            AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
            LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
            OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
            SOFTWARE.
        featured:
          type: boolean
          example: true
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      - html_url
      - description
      - implementation
      - permissions
      - conditions
      - limitations
      - body
      - featured
    marketplace-listing-plan:
      title: Marketplace Listing Plan
      description: Marketplace Listing Plan
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/marketplace_listing/plans/1313
        accounts_url:
          type: string
          format: uri
          example: https://api.github.com/marketplace_listing/plans/1313/accounts
        id:
          type: integer
          example: 1313
        number:
          type: integer
          example: 3
        name:
          type: string
          example: Pro
        description:
          type: string
          example: A professional-grade CI solution
        monthly_price_in_cents:
          type: integer
          example: 1099
        yearly_price_in_cents:
          type: integer
          example: 11870
        price_model:
          type: string
          enum:
          - FREE
          - FLAT_RATE
          - PER_UNIT
          example: FLAT_RATE
        has_free_trial:
          type: boolean
          example: true
        unit_name:
          type: string
          nullable: true
        state:
          type: string
          example: published
        bullets:
          type: array
          items:
            type: string
          example:
          - Up to 25 private repositories
          - 11 concurrent builds
      required:
      - url
      - accounts_url
      - id
      - number
      - name
      - description
      - has_free_trial
      - price_model
      - unit_name
      - monthly_price_in_cents
      - state
      - yearly_price_in_cents
      - bullets
    marketplace-purchase:
      title: Marketplace Purchase
      description: Marketplace Purchase
      type: object
      properties:
        url:
          type: string
        type:
          type: string
        id:
          type: integer
        login:
          type: string
        organization_billing_email:
          type: string
        email:
          type: string
          nullable: true
        marketplace_pending_change:
          type: object
          properties:
            is_installed:
              type: boolean
            effective_date:
              type: string
            unit_count:
              type: integer
              nullable: true
            id:
              type: integer
            plan:
              "$ref": "#/components/schemas/marketplace-listing-plan"
          nullable: true
        marketplace_purchase:
          type: object
          properties:
            billing_cycle:
              type: string
            next_billing_date:
              type: string
              nullable: true
            is_installed:
              type: boolean
            unit_count:
              type: integer
              nullable: true
            on_free_trial:
              type: boolean
            free_trial_ends_on:
              type: string
              nullable: true
            updated_at:
              type: string
            plan:
              "$ref": "#/components/schemas/marketplace-listing-plan"
      required:
      - url
      - id
      - type
      - login
      - marketplace_purchase
    api-overview:
      title: Api Overview
      description: Api Overview
      type: object
      properties:
        verifiable_password_authentication:
          type: boolean
          example: true
        ssh_key_fingerprints:
          type: object
          properties:
            SHA256_RSA:
              type: string
            SHA256_DSA:
              type: string
            SHA256_ECDSA:
              type: string
            SHA256_ED25519:
              type: string
        ssh_keys:
          type: array
          items:
            type: string
          example:
          - ssh-ed25519 ABCDEFGHIJKLMNOPQRSTUVWXYZ
        hooks:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        web:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        api:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        git:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        packages:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        pages:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        importer:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        actions:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        dependabot:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
      required:
      - verifiable_password_authentication
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    thread:
      title: Thread
      description: Thread
      type: object
      properties:
        id:
          type: string
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        subject:
          type: object
          properties:
            title:
              type: string
            url:
              type: string
            latest_comment_url:
              type: string
            type:
              type: string
          required:
          - title
          - url
          - latest_comment_url
          - type
        reason:
          type: string
        unread:
          type: boolean
        updated_at:
          type: string
        last_read_at:
          type: string
          nullable: true
        url:
          type: string
        subscription_url:
          type: string
          example: https://api.github.com/notifications/threads/2/subscription
      required:
      - id
      - unread
      - reason
      - updated_at
      - last_read_at
      - subject
      - repository
      - url
      - subscription_url
    thread-subscription:
      title: Thread Subscription
      description: Thread Subscription
      type: object
      properties:
        subscribed:
          type: boolean
          example: true
        ignored:
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-10-06T21:34:12Z'
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1/subscription
        thread_url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/1
      required:
      - created_at
      - ignored
      - reason
      - url
      - subscribed
    organization-simple:
      title: Organization Simple
      description: A GitHub organization.
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
    organization-programmatic-access-grant-request:
      title: Simple Organization Programmatic Access Grant Request
      description: Minimal representation of an organization programmatic access grant
        request for enumerations
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the request for access via fine-grained
            personal access token. The `pat_request_id` used to review PAT requests.
        reason:
          type: string
          nullable: true
          description: Reason for requesting access.
        owner:
          "$ref": "#/components/schemas/simple-user"
        repository_selection:
          type: string
          enum:
          - none
          - all
          - subset
          description: Type of repository selection requested.
        repositories_url:
          type: string
          description: URL to the list of repositories requested to be accessed via
            fine-grained personal access token. Should only be followed when `repository_selection`
            is `subset`.
        permissions:
          type: object
          description: Permissions requested, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        created_at:
          type: string
          description: Date and time when the request for access was created.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has
            expired.
        token_expires_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token expires.
        token_last_used_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token was last used for authentication.
      required:
      - id
      - reason
      - owner
      - repository_selection
      - repositories_url
      - permissions
      - created_at
      - token_expired
      - token_expires_at
      - token_last_used_at
    organization-programmatic-access-grant:
      title: Organization Programmatic Access Grant
      description: Minimal representation of an organization programmatic access grant
        for enumerations
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the fine-grained personal access token.
            The `pat_id` used to get details about an approved fine-grained personal
            access token.
        owner:
          "$ref": "#/components/schemas/simple-user"
        repository_selection:
          type: string
          enum:
          - none
          - all
          - subset
          description: Type of repository selection requested.
        repositories_url:
          type: string
          description: URL to the list of repositories the fine-grained personal access
            token can access. Only follow when `repository_selection` is `subset`.
        permissions:
          type: object
          description: Permissions requested, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        access_granted_at:
          type: string
          description: Date and time when the fine-grained personal access token was
            approved to access the organization.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has
            expired.
        token_expires_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token expires.
        token_last_used_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token was last used for authentication.
      required:
      - id
      - owner
      - repository_selection
      - repositories_url
      - permissions
      - access_granted_at
      - token_expired
      - token_expires_at
      - token_last_used_at
    organization-full:
      title: Organization Full
      description: Organization Full
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        updated_at:
          type: string
          format: date-time
        advanced_security_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        dependabot_alerts_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether GitHub Advanced Security is automatically enabled for new repositories and repositories transferred to
            this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        dependabot_security_updates_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether dependabot security updates are automatically enabled for new repositories and repositories transferred
            to this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        dependency_graph_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether dependency graph is automatically enabled for new repositories and repositories transferred to this
            organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        secret_scanning_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether secret scanning is automatically enabled for new repositories and repositories transferred to this
            organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        secret_scanning_push_protection_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether secret scanning push protection is automatically enabled for new repositories and repositories
            transferred to this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        secret_scanning_push_protection_custom_link_enabled:
          type: boolean
          example: false
          description: Whether a custom link is shown to contributors who are blocked
            from pushing a secret by push protection.
        secret_scanning_push_protection_custom_link:
          type: string
          example: https://github.com/test-org/test-repo/blob/main/README.md
          nullable: true
          description: An optional URL string to display to contributors who are blocked
            from pushing a secret.
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
    actions-cache-usage-org-enterprise:
      type: object
      properties:
        total_active_caches_count:
          type: integer
          description: The count of active caches across all repositories of an enterprise
            or an organization.
        total_active_caches_size_in_bytes:
          type: integer
          description: The total size in bytes of all active cache items across all
            repositories of an enterprise or an organization.
      required:
      - total_active_caches_count
      - total_active_caches_size_in_bytes
    actions-cache-usage-by-repository:
      title: Actions Cache Usage by repository
      description: GitHub Actions Cache Usage by repository.
      type: object
      properties:
        full_name:
          description: The repository owner and name for the cache usage being shown.
          type: string
          example: octo-org/Hello-World
        active_caches_size_in_bytes:
          description: The sum of the size in bytes of all the active cache items
            in the repository.
          type: integer
          example: 2322142
        active_caches_count:
          description: The number of active caches in the repository.
          type: integer
          example: 3
      required:
      - full_name
      - active_caches_size_in_bytes
      - active_caches_count
    oidc-custom-sub:
      title: Actions OIDC Subject customization
      description: Actions OIDC Subject customization
      type: object
      properties:
        include_claim_keys:
          description: Array of unique strings. Each claim key can only contain alphanumeric
            characters and underscores.
          type: array
          items:
            type: string
      required:
      - include_claim_keys
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    enabled-repositories:
      type: string
      description: The policy that controls the repositories in the organization that
        are allowed to run GitHub Actions.
      enum:
      - all
      - none
      - selected
    allowed-actions:
      type: string
      description: The permissions policy that controls the actions and reusable workflows
        that are allowed to run.
      enum:
      - all
      - local_only
      - selected
    selected-actions-url:
      type: string
      description: The API URL to use to get or set the actions and reusable workflows
        that are allowed to run, when `allowed_actions` is set to `selected`.
    actions-organization-permissions:
      type: object
      properties:
        enabled_repositories:
          "$ref": "#/components/schemas/enabled-repositories"
        selected_repositories_url:
          type: string
          description: The API URL to use to get or set the selected repositories
            that are allowed to run GitHub Actions, when `enabled_repositories` is
            set to `selected`.
        allowed_actions:
          "$ref": "#/components/schemas/allowed-actions"
        selected_actions_url:
          "$ref": "#/components/schemas/selected-actions-url"
      required:
      - enabled_repositories
    selected-actions:
      type: object
      properties:
        github_owned_allowed:
          type: boolean
          description: Whether GitHub-owned actions are allowed. For example, this
            includes the actions in the `actions` organization.
        verified_allowed:
          type: boolean
          description: Whether actions from GitHub Marketplace verified creators are
            allowed. Set to `true` to allow all actions by GitHub Marketplace verified
            creators.
        patterns_allowed:
          type: array
          description: |-
            Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.

            **Note**: The `patterns_allowed` setting only applies to public repositories.
          items:
            type: string
    actions-default-workflow-permissions:
      type: string
      description: The default workflow permissions granted to the GITHUB_TOKEN when
        running workflows.
      enum:
      - read
      - write
    actions-can-approve-pull-request-reviews:
      type: boolean
      description: Whether GitHub Actions can approve pull requests. Enabling this
        can be a security risk.
    actions-get-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          "$ref": "#/components/schemas/actions-default-workflow-permissions"
        can_approve_pull_request_reviews:
          "$ref": "#/components/schemas/actions-can-approve-pull-request-reviews"
      required:
      - default_workflow_permissions
      - can_approve_pull_request_reviews
    actions-set-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          "$ref": "#/components/schemas/actions-default-workflow-permissions"
        can_approve_pull_request_reviews:
          "$ref": "#/components/schemas/actions-can-approve-pull-request-reviews"
    required-workflow:
      type: object
      properties:
        id:
          description: Unique identifier for a required workflow
          type: number
        name:
          description: Name present in the workflow file
          type: string
        path:
          description: Path of the workflow file
          type: string
        scope:
          description: Scope of the required workflow
          enum:
          - all
          - selected
          type: string
        ref:
          description: Ref at which the workflow file will be selected
          type: string
        state:
          description: State of the required workflow
          enum:
          - active
          - deleted
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/actions/required_workflows/1/repositories
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        repository:
          "$ref": "#/components/schemas/minimal-repository"
      required:
      - id
      - name
      - path
      - scope
      - ref
      - state
      - created_at
      - updated_at
      - repository
    runner-label:
      title: Self hosted runner label
      description: A label for a self hosted runner
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the label.
        name:
          type: string
          description: Name of the label.
        type:
          type: string
          description: The type of label. Read-only labels are applied automatically
            when the runner is configured.
          enum:
          - read-only
          - custom
      required:
      - name
    runner:
      title: Self hosted runners
      description: A self hosted runner
      type: object
      properties:
        id:
          description: The id of the runner.
          type: integer
          example: 5
        runner_group_id:
          description: The id of the runner group.
          type: integer
          example: 1
        name:
          description: The name of the runner.
          type: string
          example: iMac
        os:
          description: The Operating System of the runner.
          type: string
          example: macos
        status:
          description: The status of the runner.
          type: string
          example: online
        busy:
          type: boolean
        labels:
          type: array
          items:
            "$ref": "#/components/schemas/runner-label"
      required:
      - id
      - name
      - os
      - status
      - busy
      - labels
    runner-application:
      title: Runner Application
      description: Runner Application
      type: object
      properties:
        os:
          type: string
        architecture:
          type: string
        download_url:
          type: string
        filename:
          type: string
        temp_download_token:
          description: A short lived bearer token used to download the runner, if
            needed.
          type: string
        sha256_checksum:
          type: string
      required:
      - os
      - architecture
      - download_url
      - filename
    authentication-token:
      title: Authentication Token
      description: Authentication Token
      type: object
      properties:
        token:
          description: The token used for authentication
          type: string
          example: v1.1f699f1069f60xxx
        expires_at:
          description: The time this token expires
          type: string
          format: date-time
          example: '2016-07-11T22:14:10Z'
        permissions:
          type: object
          example:
            issues: read
            deployments: write
        repositories:
          description: The repositories this token has access to
          type: array
          items:
            "$ref": "#/components/schemas/repository"
        single_file:
          type: string
          example: config.yaml
          nullable: true
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
      required:
      - token
      - expires_at
    organization-actions-secret:
      title: Actions Secret for an Organization
      description: Secrets for GitHub Actions for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/secrets/my_secret/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
    actions-public-key:
      title: ActionsPublicKey
      description: The public key used for setting Actions Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
      required:
      - key_id
      - key
    organization-actions-variable:
      title: Actions Variable for an Organization
      description: Organization variable for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: The date and time at which the variable was created, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          example: '2019-01-24T22:45:36.000Z'
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the variable was last updated, in
            ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          example: '2019-01-24T22:45:36.000Z'
          type: string
          format: date-time
        visibility:
          description: Visibility of a variable
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/variables/USERNAME/repositories
      required:
      - name
      - value
      - created_at
      - updated_at
      - visibility
    code-scanning-analysis-tool-name:
      type: string
      description: The name of the tool used to generate the code scanning analysis.
    code-scanning-analysis-tool-guid:
      nullable: true
      type: string
      description: The GUID of the tool used to generate the code scanning analysis,
        if provided in the uploaded SARIF data.
    code-scanning-alert-state:
      type: string
      description: State of a code scanning alert.
      enum:
      - open
      - closed
      - dismissed
      - fixed
    code-scanning-alert-severity:
      type: string
      description: Severity of a code scanning alert.
      enum:
      - critical
      - high
      - medium
      - low
      - warning
      - note
      - error
    alert-instances-url:
      type: string
      description: The REST API URL for fetching the list of instances for an alert.
      format: uri
      readOnly: true
    code-scanning-alert-dismissed-reason:
      type: string
      description: "**Required when the state is dismissed.** The reason for dismissing
        or closing the alert."
      nullable: true
      enum:
      - 
      - false positive
      - won't fix
      - used in tests
    code-scanning-alert-dismissed-comment:
      type: string
      description: The dismissal comment associated with the dismissal of the alert.
      nullable: true
      maxLength: 280
    code-scanning-alert-rule:
      type: object
      properties:
        id:
          nullable: true
          type: string
          description: A unique identifier for the rule used to detect the alert.
        name:
          type: string
          description: The name of the rule used to detect the alert.
        severity:
          nullable: true
          type: string
          description: The severity of the alert.
          enum:
          - none
          - note
          - warning
          - error
        security_severity_level:
          nullable: true
          type: string
          description: The security severity of the alert.
          enum:
          - low
          - medium
          - high
          - critical
        description:
          type: string
          description: A short description of the rule used to detect the alert.
        full_description:
          type: string
          description: description of the rule used to detect the alert.
        tags:
          nullable: true
          type: array
          description: A set of tags applicable for the rule.
          items:
            type: string
        help:
          nullable: true
          type: string
          description: Detailed documentation for the rule as GitHub Flavored Markdown.
        help_uri:
          nullable: true
          type: string
          description: A link to the documentation for the rule used to detect the
            alert.
    code-scanning-analysis-tool-version:
      nullable: true
      type: string
      description: The version of the tool used to generate the code scanning analysis.
    code-scanning-analysis-tool:
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
        version:
          "$ref": "#/components/schemas/code-scanning-analysis-tool-version"
        guid:
          "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
    code-scanning-ref:
      type: string
      description: |-
        The full Git reference, formatted as `refs/heads/<branch name>`,
        `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
    code-scanning-analysis-analysis-key:
      type: string
      description: Identifies the configuration under which the analysis was executed.
        For example, in GitHub Actions this includes the workflow filename and job
        name.
    code-scanning-alert-environment:
      type: string
      description: Identifies the variable values associated with the environment
        in which the analysis that generated this alert instance was performed, such
        as the language that was analyzed.
    code-scanning-analysis-category:
      type: string
      description: Identifies the configuration under which the analysis was executed.
        Used to distinguish between multiple analyses for the same tool and commit,
        but performed on different languages or different parts of the code.
    code-scanning-alert-location:
      type: object
      description: Describe a region within a file for the alert.
      properties:
        path:
          type: string
        start_line:
          type: integer
        end_line:
          type: integer
        start_column:
          type: integer
        end_column:
          type: integer
    code-scanning-alert-classification:
      type: string
      description: A classification of the file. For example to identify it as generated.
      nullable: true
      enum:
      - source
      - generated
      - test
      - library
    code-scanning-alert-instance:
      type: object
      properties:
        ref:
          "$ref": "#/components/schemas/code-scanning-ref"
        analysis_key:
          "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
        environment:
          "$ref": "#/components/schemas/code-scanning-alert-environment"
        category:
          "$ref": "#/components/schemas/code-scanning-analysis-category"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        commit_sha:
          type: string
        message:
          type: object
          properties:
            text:
              type: string
        location:
          "$ref": "#/components/schemas/code-scanning-alert-location"
        html_url:
          type: string
        classifications:
          type: array
          description: |-
            Classifications that have been applied to the file that triggered the alert.
            For example identifying it as documentation, or a generated file.
          items:
            "$ref": "#/components/schemas/code-scanning-alert-classification"
    code-scanning-organization-alert-items:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        instances_url:
          "$ref": "#/components/schemas/alert-instances-url"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_reason:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
        dismissed_comment:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
        rule:
          "$ref": "#/components/schemas/code-scanning-alert-rule"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        most_recent_instance:
          "$ref": "#/components/schemas/code-scanning-alert-instance"
        repository:
          "$ref": "#/components/schemas/simple-repository"
      required:
      - number
      - created_at
      - url
      - html_url
      - instances_url
      - state
      - dismissed_by
      - dismissed_at
      - dismissed_reason
      - rule
      - tool
      - most_recent_instance
      - repository
    nullable-codespace-machine:
      type: object
      title: Codespace machine
      description: A description of the machine powering a codespace.
      properties:
        name:
          type: string
          description: The name of the machine.
          example: standardLinux
        display_name:
          type: string
          description: The display name of the machine includes cores, memory, and
            storage.
          example: 4 cores, 8 GB RAM, 64 GB storage
        operating_system:
          type: string
          description: The operating system of the machine.
          example: linux
        storage_in_bytes:
          type: integer
          description: How much storage is available to the codespace.
          example: 68719476736
        memory_in_bytes:
          type: integer
          description: How much memory is available to the codespace.
          example: 8589934592
        cpus:
          type: integer
          description: How many cores are available to the codespace.
          example: 4
        prebuild_availability:
          type: string
          description: Whether a prebuild is currently available when creating a codespace
            for this machine and repository. If a branch was not specified as a ref,
            the default branch will be assumed. Value will be "null" if prebuilds
            are not supported or prebuild availability could not be determined. Value
            will be "none" if no prebuild is available. Latest values "ready" and
            "in_progress" indicate the prebuild availability status.
          example: ready
          enum:
          - none
          - ready
          - in_progress
          nullable: true
      required:
      - name
      - display_name
      - operating_system
      - storage_in_bytes
      - memory_in_bytes
      - cpus
      - prebuild_availability
      nullable: true
    codespace:
      type: object
      title: Codespace
      description: A codespace.
      properties:
        id:
          type: integer
          example: 1
        name:
          description: Automatically generated name of this codespace.
          type: string
          example: monalisa-octocat-hello-world-g4wpq6h95q
        display_name:
          description: Display name for this codespace.
          type: string
          example: bookish space pancake
          nullable: true
        environment_id:
          description: UUID identifying this codespace's environment.
          type: string
          example: 26a7c758-7299-4a73-b978-5a92a7ae98a0
          nullable: true
        owner:
          "$ref": "#/components/schemas/simple-user"
        billable_owner:
          "$ref": "#/components/schemas/simple-user"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        machine:
          "$ref": "#/components/schemas/nullable-codespace-machine"
        devcontainer_path:
          description: Path to devcontainer.json from repo root used to create Codespace.
          type: string
          example: ".devcontainer/example/devcontainer.json"
          nullable: true
        prebuild:
          description: Whether the codespace was created from a prebuild.
          type: boolean
          example: false
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        last_used_at:
          description: Last known time this codespace was started.
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        state:
          description: State of this codespace.
          enum:
          - Unknown
          - Created
          - Queued
          - Provisioning
          - Available
          - Awaiting
          - Unavailable
          - Deleted
          - Moved
          - Shutdown
          - Archived
          - Starting
          - ShuttingDown
          - Failed
          - Exporting
          - Updating
          - Rebuilding
          example: Available
          type: string
        url:
          description: API URL for this codespace.
          type: string
          format: uri
        git_status:
          description: Details about the codespace's git repository.
          type: object
          properties:
            ahead:
              description: The number of commits the local repository is ahead of
                the remote.
              type: integer
              example: 0
            behind:
              description: The number of commits the local repository is behind the
                remote.
              type: integer
              example: 0
            has_unpushed_changes:
              description: Whether the local repository has unpushed changes.
              type: boolean
            has_uncommitted_changes:
              description: Whether the local repository has uncommitted changes.
              type: boolean
            ref:
              description: The current branch (or SHA if in detached HEAD state) of
                the local repository.
              type: string
              example: main
        location:
          description: The initally assigned location of a new codespace.
          enum:
          - EastUs
          - SouthEastAsia
          - WestEurope
          - WestUs2
          example: WestUs2
          type: string
        idle_timeout_minutes:
          description: The number of minutes of inactivity after which this codespace
            will be automatically stopped.
          type: integer
          example: 60
          nullable: true
        web_url:
          description: URL to access this codespace on the web.
          type: string
          format: uri
        machines_url:
          description: API URL to access available alternate machine types for this
            codespace.
          type: string
          format: uri
        start_url:
          description: API URL to start this codespace.
          type: string
          format: uri
        stop_url:
          description: API URL to stop this codespace.
          type: string
          format: uri
        publish_url:
          description: API URL to publish this codespace to a new repository.
          type: string
          format: uri
          nullable: true
        pulls_url:
          description: API URL for the Pull Request associated with this codespace,
            if any.
          type: string
          format: uri
          nullable: true
        recent_folders:
          type: array
          items:
            type: string
        runtime_constraints:
          type: object
          properties:
            allowed_port_privacy_settings:
              description: The privacy settings a user can select from when forwarding
                a port.
              type: array
              items:
                type: string
              nullable: true
        pending_operation:
          description: Whether or not a codespace has a pending async operation. This
            would mean that the codespace is temporarily unavailable. The only thing
            that you can do with a codespace in this state is delete it.
          type: boolean
          nullable: true
        pending_operation_disabled_reason:
          description: Text to show user when codespace is disabled by a pending operation
          type: string
          nullable: true
        idle_timeout_notice:
          description: Text to show user when codespace idle timeout minutes has been
            overriden by an organization policy
          type: string
          nullable: true
        retention_period_minutes:
          description: Duration in minutes after codespace has gone idle in which
            it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
          type: integer
          example: 60
          nullable: true
        retention_expires_at:
          description: When a codespace will be auto-deleted based on the "retention_period_minutes"
            and "last_used_at"
          type: string
          format: date-time
          example: '2011-01-26T20:01:12Z'
          nullable: true
        last_known_stop_notice:
          description: The text to display to a user when a codespace has been stopped
            for a potentially actionable reason.
          type: string
          example: you've used 100% of your spending limit for Codespaces
          nullable: true
      required:
      - id
      - name
      - environment_id
      - owner
      - billable_owner
      - repository
      - machine
      - prebuild
      - created_at
      - updated_at
      - last_used_at
      - state
      - url
      - git_status
      - location
      - idle_timeout_minutes
      - web_url
      - machines_url
      - start_url
      - stop_url
      - pulls_url
      - recent_folders
    codespaces-org-secret:
      title: Codespaces Secret
      description: Secrets for a GitHub Codespace.
      type: object
      properties:
        name:
          description: The name of the secret
          example: SECRET_NAME
          type: string
        created_at:
          description: The date and time at which the secret was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the secret was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        visibility:
          description: The type of repositories in the organization that the secret
            is visible to
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          description: The API URL at which the list of repositories this secret is
            visible to can be retrieved
          type: string
          format: uri
          example: https://api.github.com/orgs/ORGANIZATION/codespaces/secrets/SECRET_NAME/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
    codespaces-public-key:
      title: CodespacesPublicKey
      description: The public key used for setting Codespaces secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
      required:
      - key_id
      - key
    organization-dependabot-secret:
      title: Dependabot Secret for an Organization
      description: Secrets for GitHub Dependabot for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/dependabot/secrets/my_secret/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
    dependabot-public-key:
      title: DependabotPublicKey
      description: The public key used for setting Dependabot Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
      required:
      - key_id
      - key
    nullable-minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      nullable: true
    package:
      title: Package
      description: A software package
      type: object
      properties:
        id:
          description: Unique identifier of the package.
          type: integer
          example: 1
        name:
          description: The name of the package.
          type: string
          example: super-linter
        package_type:
          type: string
          example: docker
          enum:
          - npm
          - maven
          - rubygems
          - docker
          - nuget
          - container
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter
        html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/package/super-linter
        version_count:
          description: The number of versions of the package.
          type: integer
          example: 1
        visibility:
          type: string
          example: private
          enum:
          - private
          - public
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        repository:
          "$ref": "#/components/schemas/nullable-minimal-repository"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
      - package_type
      - visibility
      - url
      - html_url
      - version_count
      - created_at
      - updated_at
    organization-invitation:
      title: Organization Invitation
      description: Organization Invitation
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
        created_at:
          type: string
        failed_at:
          type: string
          nullable: true
        failed_reason:
          type: string
          nullable: true
        inviter:
          "$ref": "#/components/schemas/simple-user"
        team_count:
          type: integer
        node_id:
          type: string
          example: '"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x"'
        invitation_teams_url:
          type: string
          example: '"https://api.github.com/organizations/16/invitations/1/teams"'
        invitation_source:
          type: string
          example: '"member"'
      required:
      - id
      - login
      - email
      - role
      - created_at
      - inviter
      - team_count
      - invitation_teams_url
      - node_id
    org-hook:
      title: Org Hook
      description: Org Hook
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name:
          type: string
          example: web
        events:
          type: array
          example:
          - push
          - pull_request
          items:
            type: string
        active:
          type: boolean
          example: true
        config:
          type: object
          properties:
            url:
              type: string
              example: '"http://example.com/2"'
            insecure_ssl:
              type: string
              example: '"0"'
            content_type:
              type: string
              example: '"form"'
            secret:
              type: string
              example: '"********"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        type:
          type: string
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
    interaction-group:
      type: string
      description: The type of GitHub user that can comment, open issues, or create
        pull requests while the interaction limit is in effect.
      example: collaborators_only
      enum:
      - existing_users
      - contributors_only
      - collaborators_only
    interaction-limit-response:
      title: Interaction Limits
      description: Interaction limit settings.
      type: object
      properties:
        limit:
          "$ref": "#/components/schemas/interaction-group"
        origin:
          type: string
          example: repository
        expires_at:
          type: string
          format: date-time
          example: '2018-08-17T04:18:39Z'
      required:
      - limit
      - origin
      - expires_at
    interaction-expiry:
      type: string
      description: 'The duration of the interaction restriction. Default: `one_day`.'
      example: one_month
      enum:
      - one_day
      - three_days
      - one_week
      - one_month
      - six_months
    interaction-limit:
      title: Interaction Restrictions
      description: Limit interactions to a specific type of user for a specified duration
      type: object
      properties:
        limit:
          "$ref": "#/components/schemas/interaction-group"
        expiry:
          "$ref": "#/components/schemas/interaction-expiry"
      required:
      - limit
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          "$ref": "#/components/schemas/nullable-team-simple"
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    org-membership:
      title: Org Membership
      description: Org Membership
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/memberships/defunkt
        state:
          type: string
          description: The state of the member in the organization. The `pending`
            state indicates the user has not yet accepted an invitation.
          example: active
          enum:
          - active
          - pending
        role:
          type: string
          description: The user's membership type in the organization.
          example: admin
          enum:
          - admin
          - member
          - billing_manager
        organization_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat
        organization:
          "$ref": "#/components/schemas/organization-simple"
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        permissions:
          type: object
          properties:
            can_create_repository:
              type: boolean
          required:
          - can_create_repository
      required:
      - state
      - role
      - organization_url
      - url
      - organization
      - user
    migration:
      title: Migration
      description: A migration.
      type: object
      properties:
        id:
          type: integer
          example: 79
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        guid:
          type: string
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state:
          type: string
          example: pending
        lock_repositories:
          type: boolean
          example: true
        exclude_metadata:
          type: boolean
        exclude_git_data:
          type: boolean
        exclude_attachments:
          type: boolean
        exclude_releases:
          type: boolean
        exclude_owner_projects:
          type: boolean
        org_metadata_only:
          type: boolean
        repositories:
          type: array
          description: The repositories included in the migration. Only returned for
            export migrations.
          items:
            "$ref": "#/components/schemas/repository"
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octo-org/migrations/79
        created_at:
          type: string
          format: date-time
          example: '2015-07-06T15:33:38-07:00'
        updated_at:
          type: string
          format: date-time
          example: '2015-07-06T15:33:38-07:00'
        node_id:
          type: string
        archive_url:
          type: string
          format: uri
        exclude:
          description: 'Exclude related items from being returned in the response
            in order to improve performance of the request. The array can include
            any of: `"repositories"`.'
          type: array
          items:
            description: 'Allowed values that can be passed to the exclude parameter.
              The array can include any of: `"repositories"`.'
            type: string
      required:
      - id
      - node_id
      - owner
      - guid
      - state
      - lock_repositories
      - exclude_metadata
      - exclude_git_data
      - exclude_attachments
      - exclude_releases
      - exclude_owner_projects
      - org_metadata_only
      - repositories
      - url
      - created_at
      - updated_at
    package-version:
      title: Package Version
      description: A version of a software package
      type: object
      properties:
        id:
          description: Unique identifier of the package version.
          type: integer
          example: 1
        name:
          description: The name of the package version.
          type: string
          example: latest
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter/versions/786068
        package_html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/package/super-linter
        html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/super-linter/786068
        license:
          type: string
          example: MIT
        description:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        deleted_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        metadata:
          type: object
          title: Package Version Metadata
          properties:
            package_type:
              type: string
              example: docker
              enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
            container:
              type: object
              title: Container Metadata
              properties:
                tags:
                  type: array
                  items:
                    type: string
              required:
              - tags
            docker:
              type: object
              title: Docker Metadata
              properties:
                tag:
                  type: array
                  items:
                    type: string
              required:
              - tags
          required:
          - package_type
      required:
      - id
      - name
      - url
      - package_html_url
      - created_at
      - updated_at
    project:
      title: Project
      description: Projects are a way to organize columns and cards of work.
      type: object
      properties:
        owner_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604
        html_url:
          type: string
          format: uri
          example: https://github.com/api-playground/projects-test/projects/12
        columns_url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604/columns
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDc6UHJvamVjdDEwMDI2MDQ=
        name:
          description: Name of the project
          example: Week One Sprint
          type: string
        body:
          description: Body of the project
          example: This project represents the sprint of the first week in January
          type: string
          nullable: true
        number:
          type: integer
          example: 1
        state:
          description: State of the project; either 'open' or 'closed'
          example: open
          type: string
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        organization_permission:
          description: The baseline permission that all organization members have
            on this project. Only present if owner is an organization.
          type: string
          enum:
          - read
          - write
          - admin
          - none
        private:
          description: Whether or not this project can be seen by everyone. Only present
            if owner is an organization.
          type: boolean
      required:
      - id
      - node_id
      - number
      - name
      - body
      - state
      - url
      - html_url
      - owner_url
      - creator
      - columns_url
      - created_at
      - updated_at
    repository-rule-enforcement:
      type: string
      description: The enforcement level of the ruleset. `evaluate` allows admins
        to test rules before enforcing them. Admins can view insights on the Rule
        Insights page (`evaluate` is only available with GitHub Enterprise).
      enum:
      - disabled
      - active
      - evaluate
    repository-ruleset-bypass-actor:
      title: Repository Ruleset Bypass Actor
      type: object
      description: An actor that can bypass rules in a ruleset
      properties:
        actor_id:
          type: integer
          description: The ID of the actor that can bypass a ruleset
        actor_type:
          type: string
          enum:
          - Team
          - Integration
          description: The type of actor that can bypass a ruleset
    repository-ruleset-conditions:
      title: Repository ruleset conditions for ref names
      type: object
      description: Parameters for a repository ruleset ref name condition
      properties:
        ref_name:
          type: object
          properties:
            include:
              type: array
              description: Array of ref names or patterns to include. One of these
                patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH`
                to include the default branch or `~ALL` to include all branches.
              items:
                type: string
            exclude:
              type: array
              description: Array of ref names or patterns to exclude. The condition
                will not pass if any of these patterns match.
              items:
                type: string
    repository-ruleset-conditions-repository-name-target:
      title: Repository ruleset conditions for repository names
      type: object
      description: Parameters for a repository name condition
      properties:
        repository_name:
          type: object
          properties:
            include:
              type: array
              description: Array of repository names or patterns to include. One of
                these patterns must match for the condition to pass. Also accepts
                `~ALL` to include all repositories.
              items:
                type: string
            exclude:
              type: array
              description: Array of repository names or patterns to exclude. The condition
                will not pass if any of these patterns match.
              items:
                type: string
            protected:
              type: boolean
              description: Whether renaming of target repositories is prevented.
    org-ruleset-conditions:
      title: Organization ruleset conditions
      type: object
      description: Conditions for a organization ruleset
      allOf:
      - "$ref": "#/components/schemas/repository-ruleset-conditions"
      - "$ref": "#/components/schemas/repository-ruleset-conditions-repository-name-target"
    repository-rule-creation:
      title: creation
      description: Parameters to be used for the creation rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - creation
    repository-rule-update:
      title: update
      description: Parameters to be used for the update rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - update
        parameters:
          type: object
          properties:
            update_allows_fetch_and_merge:
              type: boolean
              description: Branch can pull changes from its upstream repository
          required:
          - update_allows_fetch_and_merge
    repository-rule-deletion:
      title: deletion
      description: Parameters to be used for the deletion rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - deletion
    repository-rule-required-linear-history:
      title: required_linear_history
      description: Parameters to be used for the required_linear_history rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_linear_history
    repository-rule-required-deployments:
      title: required_deployments
      description: Parameters to be used for the required_deployments rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_deployments
        parameters:
          type: object
          properties:
            required_deployment_environments:
              type: array
              description: The environments that must be successfully deployed to
                before branches can be merged.
              items:
                type: string
          required:
          - required_deployment_environments
    repository-rule-required-signatures:
      title: required_signatures
      description: Parameters to be used for the required_signatures rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_signatures
    repository-rule-pull-request:
      title: pull_request
      description: Parameters to be used for the pull_request rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - pull_request
        parameters:
          type: object
          properties:
            dismiss_stale_reviews_on_push:
              type: boolean
              description: New, reviewable commits pushed will dismiss previous pull
                request review approvals.
            require_code_owner_review:
              type: boolean
              description: Require an approving review in pull requests that modify
                files that have a designated code owner.
            require_last_push_approval:
              type: boolean
              description: Whether the most recent reviewable push must be approved
                by someone other than the person who pushed it.
            required_approving_review_count:
              type: integer
              description: The number of approving reviews that are required before
                a pull request can be merged.
              minimum: 0
              maximum: 10
            required_review_thread_resolution:
              type: boolean
              description: All conversations on code must be resolved before a pull
                request can be merged.
          required:
          - dismiss_stale_reviews_on_push
          - require_code_owner_review
          - require_last_push_approval
          - required_approving_review_count
          - required_review_thread_resolution
    repository-rule-params-status-check-configuration:
      title: StatusCheckConfiguration
      description: Required status check
      type: object
      properties:
        context:
          type: string
          description: The status check context name that must be present on the commit.
        integration_id:
          type: integer
          description: The optional integration ID that this status check must originate
            from.
      required:
      - context
    repository-rule-required-status-checks:
      title: required_status_checks
      description: Parameters to be used for the required_status_checks rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_status_checks
        parameters:
          type: object
          properties:
            required_status_checks:
              type: array
              description: Status checks that are required.
              items:
                "$ref": "#/components/schemas/repository-rule-params-status-check-configuration"
            strict_required_status_checks_policy:
              type: boolean
              description: Whether pull requests targeting a matching branch must
                be tested with the latest code. This setting will not take effect
                unless at least one status check is enabled.
          required:
          - required_status_checks
          - strict_required_status_checks_policy
    repository-rule-non-fast-forward:
      title: non_fast_forward
      description: Parameters to be used for the non_fast_forward rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - non_fast_forward
    repository-rule-commit-message-pattern:
      title: commit_message_pattern
      description: Parameters to be used for the commit_message_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - commit_message_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-commit-author-email-pattern:
      title: commit_author_email_pattern
      description: Parameters to be used for the commit_author_email_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - commit_author_email_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-committer-email-pattern:
      title: committer_email_pattern
      description: Parameters to be used for the committer_email_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - committer_email_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-branch-name-pattern:
      title: branch_name_pattern
      description: Parameters to be used for the branch_name_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - branch_name_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-tag-name-pattern:
      title: tag_name_pattern
      description: Parameters to be used for the tag_name_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - tag_name_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule:
      title: Repository Rule
      type: object
      description: A repository rule.
      oneOf:
      - "$ref": "#/components/schemas/repository-rule-creation"
      - "$ref": "#/components/schemas/repository-rule-update"
      - "$ref": "#/components/schemas/repository-rule-deletion"
      - "$ref": "#/components/schemas/repository-rule-required-linear-history"
      - "$ref": "#/components/schemas/repository-rule-required-deployments"
      - "$ref": "#/components/schemas/repository-rule-required-signatures"
      - "$ref": "#/components/schemas/repository-rule-pull-request"
      - "$ref": "#/components/schemas/repository-rule-required-status-checks"
      - "$ref": "#/components/schemas/repository-rule-non-fast-forward"
      - "$ref": "#/components/schemas/repository-rule-commit-message-pattern"
      - "$ref": "#/components/schemas/repository-rule-commit-author-email-pattern"
      - "$ref": "#/components/schemas/repository-rule-committer-email-pattern"
      - "$ref": "#/components/schemas/repository-rule-branch-name-pattern"
      - "$ref": "#/components/schemas/repository-rule-tag-name-pattern"
    repository-ruleset:
      title: Repository ruleset
      type: object
      description: A set of rules to apply when specified conditions are met.
      required:
      - id
      - name
      - source
      - enforcement
      properties:
        id:
          type: integer
          description: The ID of the ruleset
        name:
          type: string
          description: The name of the ruleset
        target:
          type: string
          description: The target of the ruleset
          enum:
          - branch
          - tag
        source_type:
          type: string
          description: The type of the source of the ruleset
          enum:
          - Repository
          - Organization
        source:
          type: string
          description: The name of the source
        enforcement:
          "$ref": "#/components/schemas/repository-rule-enforcement"
        bypass_mode:
          type: string
          description: The permission level required to bypass this ruleset. "repository"
            allows those with bypass permission at the repository level to bypass.
            "organization" allows those with bypass permission at the organization
            level to bypass. "none" prevents anyone from bypassing.
          enum:
          - none
          - repository
          - organization
        bypass_actors:
          type: array
          description: The actors that can bypass the rules in this ruleset
          items:
            "$ref": "#/components/schemas/repository-ruleset-bypass-actor"
        node_id:
          type: string
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  description: The URL of the ruleset
        conditions:
          anyOf:
          - "$ref": "#/components/schemas/repository-ruleset-conditions"
          - "$ref": "#/components/schemas/org-ruleset-conditions"
        rules:
          type: array
          items:
            "$ref": "#/components/schemas/repository-rule"
    team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
    actions-billing-usage:
      type: object
      properties:
        total_minutes_used:
          type: integer
          description: The sum of the free and paid GitHub Actions minutes used.
        total_paid_minutes_used:
          type: integer
          description: The total paid GitHub Actions minutes used.
        included_minutes:
          type: integer
          description: The amount of free GitHub Actions minutes available.
        minutes_used_breakdown:
          type: object
          properties:
            UBUNTU:
              type: integer
              description: Total minutes used on Ubuntu runner machines.
            MACOS:
              type: integer
              description: Total minutes used on macOS runner machines.
            WINDOWS:
              type: integer
              description: Total minutes used on Windows runner machines.
            ubuntu_4_core:
              type: integer
              description: Total minutes used on Ubuntu 4 core runner machines.
            ubuntu_8_core:
              type: integer
              description: Total minutes used on Ubuntu 8 core runner machines.
            ubuntu_16_core:
              type: integer
              description: Total minutes used on Ubuntu 16 core runner machines.
            ubuntu_32_core:
              type: integer
              description: Total minutes used on Ubuntu 32 core runner machines.
            ubuntu_64_core:
              type: integer
              description: Total minutes used on Ubuntu 64 core runner machines.
            windows_4_core:
              type: integer
              description: Total minutes used on Windows 4 core runner machines.
            windows_8_core:
              type: integer
              description: Total minutes used on Windows 8 core runner machines.
            windows_16_core:
              type: integer
              description: Total minutes used on Windows 16 core runner machines.
            windows_32_core:
              type: integer
              description: Total minutes used on Windows 32 core runner machines.
            windows_64_core:
              type: integer
              description: Total minutes used on Windows 64 core runner machines.
            macos_12_core:
              type: integer
              description: Total minutes used on macOS 12 core runner machines.
            total:
              type: integer
              description: Total minutes used on all runner machines.
      required:
      - total_minutes_used
      - total_paid_minutes_used
      - included_minutes
      - minutes_used_breakdown
    packages-billing-usage:
      type: object
      properties:
        total_gigabytes_bandwidth_used:
          type: integer
          description: Sum of the free and paid storage space (GB) for GitHuub Packages.
        total_paid_gigabytes_bandwidth_used:
          type: integer
          description: Total paid storage space (GB) for GitHuub Packages.
        included_gigabytes_bandwidth:
          type: integer
          description: Free storage space (GB) for GitHub Packages.
      required:
      - total_gigabytes_bandwidth_used
      - total_paid_gigabytes_bandwidth_used
      - included_gigabytes_bandwidth
    combined-billing-usage:
      type: object
      properties:
        days_left_in_billing_cycle:
          type: integer
          description: Numbers of days left in billing cycle.
        estimated_paid_storage_for_month:
          type: integer
          description: Estimated storage space (GB) used in billing cycle.
        estimated_storage_for_month:
          type: integer
          description: Estimated sum of free and paid storage space (GB) used in billing
            cycle.
      required:
      - days_left_in_billing_cycle
      - estimated_paid_storage_for_month
      - estimated_storage_for_month
    team-organization:
      title: Team Organization
      description: Team Organization
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        updated_at:
          type: string
          format: date-time
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
    team-full:
      title: Full Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          example: 42
          type: integer
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        name:
          description: Name of the team
          example: Developers
          type: string
        slug:
          type: string
          example: justice-league
        description:
          type: string
          example: A great team.
          nullable: true
        privacy:
          description: The level of privacy this team should have
          type: string
          enum:
          - closed
          - secret
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          enum:
          - notifications_enabled
          - notifications_disabled
          example: notifications_enabled
        permission:
          description: Permission that the team will have for its repositories
          example: push
          type: string
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        parent:
          "$ref": "#/components/schemas/nullable-team-simple"
        members_count:
          type: integer
          example: 3
        repos_count:
          type: integer
          example: 10
        created_at:
          type: string
          format: date-time
          example: '2017-07-14T16:53:42Z'
        updated_at:
          type: string
          format: date-time
          example: '2017-08-17T12:37:15Z'
        organization:
          "$ref": "#/components/schemas/team-organization"
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - created_at
      - updated_at
      - members_count
      - repos_count
      - organization
    team-discussion:
      title: Team Discussion
      description: A team discussion is a persistent record of a free-form conversation
        within a team.
      type: object
      properties:
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          description: The main text of the discussion.
          example: Please suggest improvements to our workflow in comments.
          type: string
        body_html:
          type: string
          example: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version:
          description: The current version of the body content. If provided, this
            update operation will be rejected if the given version does not match
            the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        comments_count:
          type: integer
          example: 0
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1/comments
        created_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id:
          type: string
          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number:
          description: The unique sequence number of a team discussion.
          example: 42
          type: integer
        pinned:
          description: Whether or not this discussion should be pinned for easy retrieval.
          example: true
          type: boolean
        private:
          description: Whether or not this discussion should be restricted to team
            members and organization administrators.
          example: true
          type: boolean
        team_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027
        title:
          description: The title of the discussion.
          example: How can we improve our workflow?
          type: string
        updated_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - author
      - body
      - body_html
      - body_version
      - comments_count
      - comments_url
      - created_at
      - last_edited_at
      - html_url
      - pinned
      - private
      - node_id
      - number
      - team_url
      - title
      - updated_at
      - url
    team-discussion-comment:
      title: Team Discussion Comment
      description: A reply to a discussion within a team.
      type: object
      properties:
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          description: The main text of the comment.
          example: I agree with this suggestion.
          type: string
        body_html:
          type: string
          example: "<p>Do you like apples?</p>"
        body_version:
          description: The current version of the body content. If provided, this
            update operation will be rejected if the given version does not match
            the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        created_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        discussion_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id:
          type: string
          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number:
          description: The unique sequence number of a team discussion comment.
          example: 42
          type: integer
        updated_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - author
      - body
      - body_html
      - body_version
      - created_at
      - last_edited_at
      - discussion_url
      - html_url
      - node_id
      - number
      - updated_at
      - url
    reaction:
      title: Reaction
      description: Reactions to conversations provide a way to help people express
        their feelings more simply and effectively.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDg6UmVhY3Rpb24x
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        content:
          description: The reaction to use
          example: heart
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
        created_at:
          type: string
          format: date-time
          example: '2016-05-20T20:09:31Z'
      required:
      - id
      - node_id
      - user
      - content
      - created_at
    team-membership:
      title: Team Membership
      description: Team Membership
      type: object
      properties:
        url:
          type: string
          format: uri
        role:
          description: The role of the user in the team.
          enum:
          - member
          - maintainer
          default: member
          example: member
          type: string
        state:
          description: The state of the user's membership in the team.
          type: string
          enum:
          - active
          - pending
      required:
      - role
      - state
      - url
    team-project:
      title: Team Project
      description: A team's access to a project.
      type: object
      properties:
        owner_url:
          type: string
        url:
          type: string
        html_url:
          type: string
        columns_url:
          type: string
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        body:
          type: string
          nullable: true
        number:
          type: integer
        state:
          type: string
        creator:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
        updated_at:
          type: string
        organization_permission:
          description: The organization permission for this project. Only present
            when owner is an organization.
          type: string
        private:
          description: Whether the project is private or not. Only present when owner
            is an organization.
          type: boolean
        permissions:
          type: object
          properties:
            read:
              type: boolean
            write:
              type: boolean
            admin:
              type: boolean
          required:
          - read
          - write
          - admin
      required:
      - owner_url
      - url
      - html_url
      - columns_url
      - id
      - node_id
      - name
      - body
      - number
      - state
      - creator
      - created_at
      - updated_at
      - permissions
    nullable-repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            use_squash_pr_title_as_default:
              type: boolean
            squash_merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - COMMIT_OR_PR_TITLE
              description: |-
                The default value for a squash merge commit title:

                - `PR_TITLE` - default to the pull request's title.
                - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
            squash_merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - COMMIT_MESSAGES
              - BLANK
              description: |-
                The default value for a squash merge commit message:

                - `PR_BODY` - default to the pull request's body.
                - `COMMIT_MESSAGES` - default to the branch's commit messages.
                - `BLANK` - default to a blank commit message.
            merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - MERGE_MESSAGE
              description: |-
                The default value for a merge commit title.

                - `PR_TITLE` - default to the pull request's title.
                - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
            merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - PR_TITLE
              - BLANK
              description: |-
                The default value for a merge commit message.

                - `PR_TITLE` - default to the pull request's title.
                - `PR_BODY` - default to the pull request's body.
                - `BLANK` - default to a blank commit message.
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its
            base branch can always be updated even if it is not required to be up
            to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title
            as default. **This property has been deprecated. Please use `squash_merge_commit_title`
            instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

            - `PR_TITLE` - default to the pull request's title.
            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      nullable: true
    team-repository:
      title: Team Repository
      description: A team's access to a repository.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        role_name:
          type: string
          example: admin
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          "$ref": "#/components/schemas/nullable-repository"
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          default: false
          type: boolean
          example: false
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
          example: false
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    project-card:
      title: Project Card
      description: Project cards represent a scope of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/cards/1478
        id:
          description: The project card's ID
          example: 42
          type: integer
        node_id:
          type: string
          example: MDExOlByb2plY3RDYXJkMTQ3OA==
        note:
          type: string
          example: Add payload for delete Project column
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:21:06Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:20:22Z'
        archived:
          description: Whether or not the card is archived
          example: false
          type: boolean
        column_name:
          type: string
        project_id:
          type: string
        column_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        content_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
      required:
      - id
      - node_id
      - note
      - url
      - column_url
      - project_url
      - creator
      - created_at
      - updated_at
    project-column:
      title: Project Column
      description: Project columns contain cards of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
        cards_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367/cards
        id:
          description: The unique identifier of the project column
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name:
          description: Name of the project column
          example: Remaining tasks
          type: string
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:18:44Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:22:28Z'
      required:
      - id
      - node_id
      - url
      - project_url
      - cards_url
      - name
      - created_at
      - updated_at
    project-collaborator-permission:
      title: Project Collaborator Permission
      description: Project Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - permission
      - user
    rate-limit:
      title: Rate Limit
      type: object
      properties:
        limit:
          type: integer
        remaining:
          type: integer
        reset:
          type: integer
        used:
          type: integer
      required:
      - limit
      - remaining
      - reset
      - used
    rate-limit-overview:
      title: Rate Limit Overview
      description: Rate Limit Overview
      type: object
      properties:
        resources:
          type: object
          properties:
            core:
              "$ref": "#/components/schemas/rate-limit"
            graphql:
              "$ref": "#/components/schemas/rate-limit"
            search:
              "$ref": "#/components/schemas/rate-limit"
            source_import:
              "$ref": "#/components/schemas/rate-limit"
            integration_manifest:
              "$ref": "#/components/schemas/rate-limit"
            code_scanning_upload:
              "$ref": "#/components/schemas/rate-limit"
            actions_runner_registration:
              "$ref": "#/components/schemas/rate-limit"
            scim:
              "$ref": "#/components/schemas/rate-limit"
            dependency_snapshots:
              "$ref": "#/components/schemas/rate-limit"
          required:
          - core
          - search
        rate:
          "$ref": "#/components/schemas/rate-limit"
      required:
      - rate
      - resources
    repo-required-workflow:
      title: Required workflow
      description: A GitHub Actions required workflow
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDg6V29ya2Zsb3cxMg==
        name:
          type: string
          example: Required CI
        path:
          type: string
          example: ".github/workflows/required_ci.yaml"
        state:
          type: string
          example: active
          enum:
          - active
          - deleted
        source_repository:
          "$ref": "#/components/schemas/minimal-repository"
        created_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        url:
          type: string
          example: https://api.github.com/repos/sample-org/sample-repo/actions/required_workflows/5
        html_url:
          type: string
          example: https://github.com/sample-org/source-repo/blob/main/.github/workflows/required_ci.yaml
        badge_url:
          type: string
          example: https://github.com/sample-org/sample-repo/workflows/required/sample-org/source-repo/.github/workflows/required_ci.yaml/badge.svg
      required:
      - id
      - node_id
      - name
      - path
      - state
      - source_repository
      - url
      - html_url
      - badge_url
      - created_at
      - updated_at
    workflow-usage:
      title: Workflow Usage
      description: Workflow Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              properties:
                total_ms:
                  type: integer
            MACOS:
              type: object
              properties:
                total_ms:
                  type: integer
            WINDOWS:
              type: object
              properties:
                total_ms:
                  type: integer
      required:
      - billable
    code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
      - url
      - key
      - name
      - html_url
    full-repository:
      title: Full Repository
      description: Full Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
          example:
          - octocat
          - atom
          - electron
          - API
        has_issues:
          type: boolean
          example: true
        has_projects:
          type: boolean
          example: true
        has_wiki:
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
          example: true
        has_discussions:
          type: boolean
          example: true
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
          example: public
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - pull
          - push
        allow_rebase_merge:
          type: boolean
          example: true
        template_repository:
          "$ref": "#/components/schemas/nullable-repository"
        temp_clone_token:
          type: string
          nullable: true
        allow_squash_merge:
          type: boolean
          example: true
        allow_auto_merge:
          type: boolean
          example: false
        delete_branch_on_merge:
          type: boolean
          example: false
        allow_merge_commit:
          type: boolean
          example: true
        allow_update_branch:
          type: boolean
          example: true
        use_squash_pr_title_as_default:
          type: boolean
          example: false
        squash_merge_commit_title:
          type: string
          example: PR_TITLE
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          example: PR_BODY
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          example: PR_TITLE
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

              - `PR_TITLE` - default to the pull request's title.
              - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          example: PR_BODY
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_forking:
          type: boolean
          example: true
        web_commit_signoff_required:
          type: boolean
          example: false
        subscribers_count:
          type: integer
          example: 42
        network_count:
          type: integer
          example: 0
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        parent:
          "$ref": "#/components/schemas/repository"
        source:
          "$ref": "#/components/schemas/repository"
        forks:
          type: integer
        master_branch:
          type: string
        open_issues:
          type: integer
        watchers:
          type: integer
        anonymous_access_enabled:
          description: Whether anonymous git access is allowed.
          default: true
          type: boolean
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct-simple"
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - has_discussions
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - network_count
      - subscribers_count
    artifact:
      title: Artifact
      description: An artifact
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        name:
          description: The name of the artifact.
          type: string
          example: AdventureWorks.Framework
        size_in_bytes:
          description: The size in bytes of the artifact.
          type: integer
          example: 12345
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5
        archive_download_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip
        expired:
          description: Whether or not the artifact has expired.
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        workflow_run:
          type: object
          nullable: true
          properties:
            id:
              example: 10
              type: integer
            repository_id:
              example: 42
              type: integer
            head_repository_id:
              example: 42
              type: integer
            head_branch:
              example: main
              type: string
            head_sha:
              example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
              type: string
      required:
      - id
      - node_id
      - name
      - size_in_bytes
      - url
      - archive_download_url
      - expired
      - created_at
      - expires_at
      - updated_at
    actions-cache-list:
      title: Repository actions caches
      description: Repository actions caches
      type: object
      properties:
        total_count:
          description: Total number of caches
          type: integer
          example: 2
        actions_caches:
          description: Array of caches
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 2
              ref:
                type: string
                example: refs/heads/main
              key:
                type: string
                example: Linux-node-958aff96db2d75d67787d1e634ae70b659de937b
              version:
                type: string
                example: 73885106f58cc52a7df9ec4d4a5622a5614813162cb516c759a30af6bf56e6f0
              last_accessed_at:
                type: string
                format: date-time
                example: '2019-01-24T22:45:36.000Z'
              created_at:
                type: string
                format: date-time
                example: '2019-01-24T22:45:36.000Z'
              size_in_bytes:
                type: integer
                example: 1024
      required:
      - total_count
      - actions_caches
    job:
      title: Job
      description: Information of a job execution in a workflow run
      type: object
      properties:
        id:
          description: The id of the job.
          example: 21
          type: integer
        run_id:
          description: The id of the associated workflow run.
          example: 5
          type: integer
        run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        run_attempt:
          type: integer
          description: Attempt number of the associated workflow run, 1 for first
            attempt and higher if the workflow was re-run.
          example: 1
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        head_sha:
          description: The SHA of the commit that is being run.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/jobs/21
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        status:
          description: The phase of the lifecycle that the job is currently in.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
        conclusion:
          description: The outcome of the job.
          example: success
          type: string
          nullable: true
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
        created_at:
          description: The time that the job created, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
        started_at:
          description: The time that the job started, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
        completed_at:
          description: The time that the job finished, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
          nullable: true
        name:
          description: The name of the job.
          example: test-coverage
          type: string
        steps:
          description: Steps in this job.
          type: array
          items:
            type: object
            required:
            - name
            - status
            - conclusion
            - number
            properties:
              status:
                description: The phase of the lifecycle that the job is currently
                  in.
                example: queued
                type: string
                enum:
                - queued
                - in_progress
                - completed
              conclusion:
                description: The outcome of the job.
                example: success
                type: string
                nullable: true
              name:
                description: The name of the job.
                example: test-coverage
                type: string
              number:
                type: integer
                example: 1
              started_at:
                description: The time that the step started, in ISO 8601 format.
                example: '2019-08-08T08:00:00-07:00'
                format: date-time
                type: string
                nullable: true
              completed_at:
                description: The time that the job finished, in ISO 8601 format.
                example: '2019-08-08T08:00:00-07:00'
                format: date-time
                type: string
                nullable: true
        check_run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        labels:
          type: array
          items:
            type: string
          description: Labels for the workflow job. Specified by the "runs_on" attribute
            in the action's workflow file.
          example:
          - self-hosted
          - foo
          - bar
        runner_id:
          type: integer
          nullable: true
          example: 1
          description: The ID of the runner to which this job has been assigned. (If
            a runner hasn't yet been assigned, this will be null.)
        runner_name:
          type: string
          nullable: true
          example: my runner
          description: The name of the runner to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        runner_group_id:
          type: integer
          nullable: true
          example: 2
          description: The ID of the runner group to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        runner_group_name:
          type: string
          nullable: true
          example: my runner group
          description: The name of the runner group to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        workflow_name:
          type: string
          description: The name of the workflow.
          nullable: true
          example: Build
        head_branch:
          type: string
          description: The name of the current branch.
          nullable: true
          example: main
      required:
      - id
      - node_id
      - run_id
      - run_url
      - head_sha
      - workflow_name
      - head_branch
      - name
      - url
      - html_url
      - status
      - conclusion
      - started_at
      - completed_at
      - check_run_url
      - labels
      - runner_id
      - runner_name
      - runner_group_id
      - runner_group_name
      - created_at
    oidc-custom-sub-repo:
      title: Actions OIDC subject customization for a repository
      description: Actions OIDC subject customization for a repository
      type: object
      properties:
        use_default:
          description: Whether to use the default template or not. If `true`, the
            `include_claim_keys` field is ignored.
          type: boolean
        include_claim_keys:
          description: Array of unique strings. Each claim key can only contain alphanumeric
            characters and underscores.
          type: array
          items:
            type: string
      required:
      - use_default
    actions-secret:
      title: Actions Secret
      description: Set secrets for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - name
      - created_at
      - updated_at
    actions-variable:
      title: Actions Variable
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: The date and time at which the variable was created, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
          example: '2019-01-24T22:45:36.000Z'
        updated_at:
          description: The date and time at which the variable was last updated, in
            ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
          example: '2019-01-24T22:45:36.000Z'
      required:
      - name
      - value
      - created_at
      - updated_at
    actions-enabled:
      type: boolean
      description: Whether GitHub Actions is enabled on the repository.
    actions-repository-permissions:
      type: object
      properties:
        enabled:
          "$ref": "#/components/schemas/actions-enabled"
        allowed_actions:
          "$ref": "#/components/schemas/allowed-actions"
        selected_actions_url:
          "$ref": "#/components/schemas/selected-actions-url"
      required:
      - enabled
    actions-workflow-access-to-repository:
      type: object
      properties:
        access_level:
          type: string
          description: |-
            Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the
            repository.

            `none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repos only. `organization` level access allows sharing across the organization.
          enum:
          - none
          - user
          - organization
      required:
      - access_level
    referenced-workflow:
      title: Referenced workflow
      description: A workflow referenced/reused by the initial caller workflow
      type: object
      properties:
        path:
          type: string
        sha:
          type: string
        ref:
          type: string
      required:
      - path
      - sha
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
      required:
      - id
      - number
      - url
      - head
      - base
    nullable-simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree_id:
          type: string
          description: SHA for the commit's tree
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        timestamp:
          description: Timestamp of the commit
          example: '2014-08-09T08:02:04+12:00'
          format: date-time
          type: string
        author:
          type: object
          description: Information about the Git author
          properties:
            name:
              description: Name of the commit's author
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's author
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
        committer:
          type: object
          description: Information about the Git committer
          properties:
            name:
              description: Name of the commit's committer
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's committer
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
      required:
      - id
      - tree_id
      - message
      - timestamp
      - author
      - committer
      nullable: true
    workflow-run:
      title: Workflow Run
      description: An invocation of a workflow
      type: object
      properties:
        id:
          type: integer
          description: The ID of the workflow run.
          example: 5
        name:
          type: string
          description: The name of the workflow run.
          nullable: true
          example: Build
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        check_suite_id:
          type: integer
          description: The ID of the associated check suite.
          example: 42
        check_suite_node_id:
          type: string
          description: The node ID of the associated check suite.
          example: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch:
          type: string
          nullable: true
          example: master
        head_sha:
          description: The SHA of the head commit that points to the version of the
            workflow being run.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        path:
          description: The full path of the workflow
          example: octocat/octo-repo/.github/workflows/ci.yml@main
          type: string
        run_number:
          type: integer
          description: The auto incrementing run number for the workflow run.
          example: 106
        run_attempt:
          type: integer
          description: Attempt number of the run, 1 for first attempt and higher if
            the workflow was re-run.
          example: 1
        referenced_workflows:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/referenced-workflow"
        event:
          type: string
          example: push
        status:
          type: string
          nullable: true
          example: completed
        conclusion:
          type: string
          nullable: true
          example: neutral
        workflow_id:
          type: integer
          description: The ID of the parent workflow.
          example: 5
        url:
          type: string
          description: The URL to the workflow run.
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        html_url:
          type: string
          example: https://github.com/github/hello-world/suites/4
        pull_requests:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        actor:
          "$ref": "#/components/schemas/simple-user"
        triggering_actor:
          "$ref": "#/components/schemas/simple-user"
        run_started_at:
          type: string
          format: date-time
          description: The start time of the latest run. Resets on re-run.
        jobs_url:
          description: The URL to the jobs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
        logs_url:
          description: The URL to download the logs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/logs
        check_suite_url:
          description: The URL to the associated check suite.
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/12
        artifacts_url:
          description: The URL to the artifacts for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
        cancel_url:
          description: The URL to cancel the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
        rerun_url:
          description: The URL to rerun the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
        previous_attempt_url:
          nullable: true
          description: The URL to the previous attempted run of this workflow, if
            one exists.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
        workflow_url:
          description: The URL to the workflow.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
        head_commit:
          "$ref": "#/components/schemas/nullable-simple-commit"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        head_repository:
          "$ref": "#/components/schemas/minimal-repository"
        head_repository_id:
          type: integer
          example: 5
        display_title:
          type: string
          example: Simple Workflow
          description: The event-specific title associated with the run or the run-name
            if set, or the value of `run-name` if it is set in the workflow.
      required:
      - id
      - node_id
      - head_branch
      - run_number
      - display_title
      - event
      - status
      - conclusion
      - head_sha
      - path
      - workflow_id
      - url
      - html_url
      - created_at
      - updated_at
      - head_commit
      - head_repository
      - repository
      - jobs_url
      - logs_url
      - check_suite_url
      - cancel_url
      - rerun_url
      - artifacts_url
      - workflow_url
      - pull_requests
    environment-approvals:
      title: Environment Approval
      description: An entry in the reviews log for environment deployments
      type: object
      properties:
        environments:
          description: The list of environments that were approved or rejected
          type: array
          items:
            type: object
            properties:
              id:
                description: The id of the environment.
                example: 56780428
                type: integer
              node_id:
                type: string
                example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
              name:
                description: The name of the environment.
                example: staging
                type: string
              url:
                type: string
                example: https://api.github.com/repos/github/hello-world/environments/staging
              html_url:
                type: string
                example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
              created_at:
                description: The time that the environment was created, in ISO 8601
                  format.
                example: '2020-11-23T22:00:40Z'
                format: date-time
                type: string
              updated_at:
                description: The time that the environment was last updated, in ISO
                  8601 format.
                example: '2020-11-23T22:00:40Z'
                format: date-time
                type: string
        state:
          description: Whether deployment to the environment(s) was approved or rejected
            or pending (with comments)
          enum:
          - approved
          - rejected
          - pending
          example: approved
          type: string
        user:
          "$ref": "#/components/schemas/simple-user"
        comment:
          type: string
          description: The comment submitted with the deployment review
          example: Ship it!
      required:
      - environments
      - state
      - user
      - comment
    review-custom-gates-comment-required:
      type: object
      properties:
        environment_name:
          type: string
          description: The name of the environment to approve or reject.
        comment:
          type: string
          description: Comment associated with the pending deployment protection rule.
            **Required when state is not provided.**
      required:
      - environment_name
      - comment
    review-custom-gates-state-required:
      type: object
      properties:
        environment_name:
          type: string
          description: The name of the environment to approve or reject.
        state:
          type: string
          description: Whether to approve or reject deployment to the specified environments.
          enum:
          - approved
          - rejected
        comment:
          type: string
          description: Optional comment to include with the review.
      required:
      - environment_name
      - state
    deployment-reviewer-type:
      type: string
      description: The type of reviewer.
      enum:
      - User
      - Team
      example: User
    pending-deployment:
      title: Pending Deployment
      description: Details of a deployment that is waiting for protection rules to
        pass
      type: object
      properties:
        environment:
          type: object
          properties:
            id:
              description: The id of the environment.
              example: 56780428
              type: integer
            node_id:
              type: string
              example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
            name:
              description: The name of the environment.
              example: staging
              type: string
            url:
              type: string
              example: https://api.github.com/repos/github/hello-world/environments/staging
            html_url:
              type: string
              example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        wait_timer:
          type: integer
          description: The set duration of the wait timer
          example: 30
        wait_timer_started_at:
          description: The time that the wait timer began.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
          nullable: true
        current_user_can_approve:
          description: Whether the currently authenticated user can approve the deployment
          type: boolean
          example: true
        reviewers:
          type: array
          description: The people or teams that may approve jobs that reference the
            environment. You can list up to six users or teams as reviewers. The reviewers
            must have at least read access to the repository. Only one of the required
            reviewers needs to approve the job for it to proceed.
          items:
            type: object
            properties:
              type:
                "$ref": "#/components/schemas/deployment-reviewer-type"
              reviewer:
                anyOf:
                - "$ref": "#/components/schemas/simple-user"
                - "$ref": "#/components/schemas/team"
      required:
      - environment
      - wait_timer
      - wait_timer_started_at
      - current_user_can_approve
      - reviewers
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          oneOf:
          - type: object
            additionalProperties: true
          - type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist
            at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly
            interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - sha
      - ref
      - task
      - environment
      - creator
      - payload
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    workflow-run-usage:
      title: Workflow Run Usage
      description: Workflow Run Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              required:
              - total_ms
              - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                    - job_id
                    - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            MACOS:
              type: object
              required:
              - total_ms
              - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                    - job_id
                    - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            WINDOWS:
              type: object
              required:
              - total_ms
              - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                    - job_id
                    - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
        run_duration_ms:
          type: integer
      required:
      - billable
    workflow:
      title: Workflow
      description: A GitHub Actions workflow
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDg6V29ya2Zsb3cxMg==
        name:
          type: string
          example: CI
        path:
          type: string
          example: ruby.yaml
        state:
          type: string
          example: active
          enum:
          - active
          - deleted
          - disabled_fork
          - disabled_inactivity
          - disabled_manually
        created_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        url:
          type: string
          example: https://api.github.com/repos/actions/setup-ruby/workflows/5
        html_url:
          type: string
          example: https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml
        badge_url:
          type: string
          example: https://github.com/actions/setup-ruby/workflows/CI/badge.svg
        deleted_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
      required:
      - id
      - node_id
      - name
      - path
      - state
      - url
      - html_url
      - badge_url
      - created_at
      - updated_at
    autolink:
      title: Autolink reference
      description: An autolink reference.
      type: object
      properties:
        id:
          type: integer
          example: 3
        key_prefix:
          description: The prefix of a key that is linkified.
          example: TICKET-
          type: string
        url_template:
          description: A template for the target URL that is generated if a key was
            found.
          example: https://example.com/TICKET?query=<num>
          type: string
        is_alphanumeric:
          description: Whether this autolink reference matches alphanumeric characters.
            If false, this autolink reference only matches numeric characters.
          example: true
          type: boolean
      required:
      - id
      - key_prefix
      - url_template
      - is_alphanumeric
    protected-branch-required-status-check:
      title: Protected Branch Required Status Check
      description: Protected Branch Required Status Check
      type: object
      properties:
        url:
          type: string
        enforcement_level:
          type: string
        contexts:
          type: array
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
              app_id:
                type: integer
                nullable: true
            required:
            - context
            - app_id
        contexts_url:
          type: string
        strict:
          type: boolean
      required:
      - contexts
      - checks
    protected-branch-admin-enforced:
      title: Protected Branch Admin Enforced
      description: Protected Branch Admin Enforced
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled:
          type: boolean
          example: true
      required:
      - url
      - enabled
    protected-branch-pull-request-review:
      title: Protected Branch Pull Request Review
      description: Protected Branch Pull Request Review
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
        dismissal_restrictions:
          type: object
          properties:
            users:
              description: The list of users with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/simple-user"
            teams:
              description: The list of teams with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/team"
            apps:
              description: The list of apps with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/integration"
            url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"'
            users_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"'
            teams_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"'
        bypass_pull_request_allowances:
          type: object
          description: Allow specific users, teams, or apps to bypass pull request
            requirements.
          properties:
            users:
              description: The list of users allowed to bypass pull request requirements.
              type: array
              items:
                "$ref": "#/components/schemas/simple-user"
            teams:
              description: The list of teams allowed to bypass pull request requirements.
              type: array
              items:
                "$ref": "#/components/schemas/team"
            apps:
              description: The list of apps allowed to bypass pull request requirements.
              type: array
              items:
                "$ref": "#/components/schemas/integration"
        dismiss_stale_reviews:
          type: boolean
          example: true
        require_code_owner_reviews:
          type: boolean
          example: true
        required_approving_review_count:
          type: integer
          minimum: 0
          maximum: 6
          example: 2
        require_last_push_approval:
          description: Whether the most recent push must be approved by someone other
            than the person who pushed it.
          type: boolean
          example: true
          default: false
      required:
      - dismiss_stale_reviews
      - require_code_owner_reviews
    branch-restriction-policy:
      title: Branch Restriction Policy
      description: Branch Restriction Policy
      type: object
      properties:
        url:
          type: string
          format: uri
        users_url:
          type: string
          format: uri
        teams_url:
          type: string
          format: uri
        apps_url:
          type: string
          format: uri
        users:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
              node_id:
                type: string
              avatar_url:
                type: string
              gravatar_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              starred_url:
                type: string
              subscriptions_url:
                type: string
              organizations_url:
                type: string
              repos_url:
                type: string
              events_url:
                type: string
              received_events_url:
                type: string
              type:
                type: string
              site_admin:
                type: boolean
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              name:
                type: string
              slug:
                type: string
              description:
                type: string
                nullable: true
              privacy:
                type: string
              notification_setting:
                type: string
              permission:
                type: string
              members_url:
                type: string
              repositories_url:
                type: string
              parent:
                type: string
                nullable: true
        apps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                type: string
              node_id:
                type: string
              owner:
                type: object
                properties:
                  login:
                    type: string
                  id:
                    type: integer
                  node_id:
                    type: string
                  url:
                    type: string
                  repos_url:
                    type: string
                  events_url:
                    type: string
                  hooks_url:
                    type: string
                  issues_url:
                    type: string
                  members_url:
                    type: string
                  public_members_url:
                    type: string
                  avatar_url:
                    type: string
                  description:
                    type: string
                  gravatar_id:
                    type: string
                    example: '""'
                  html_url:
                    type: string
                    example: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                  followers_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"'
                  following_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"'
                  gists_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"'
                  starred_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"'
                  subscriptions_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"'
                  organizations_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"'
                  received_events_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"'
                  type:
                    type: string
                    example: '"Organization"'
                  site_admin:
                    type: boolean
                    example: false
              name:
                type: string
              description:
                type: string
              external_url:
                type: string
              html_url:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              permissions:
                type: object
                properties:
                  metadata:
                    type: string
                  contents:
                    type: string
                  issues:
                    type: string
                  single_file:
                    type: string
              events:
                type: array
                items:
                  type: string
      required:
      - url
      - users_url
      - teams_url
      - apps_url
      - users
      - teams
      - apps
    branch-protection:
      title: Branch Protection
      description: Branch Protection
      type: object
      properties:
        url:
          type: string
        enabled:
          type: boolean
        required_status_checks:
          "$ref": "#/components/schemas/protected-branch-required-status-check"
        enforce_admins:
          "$ref": "#/components/schemas/protected-branch-admin-enforced"
        required_pull_request_reviews:
          "$ref": "#/components/schemas/protected-branch-pull-request-review"
        restrictions:
          "$ref": "#/components/schemas/branch-restriction-policy"
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
        block_creations:
          type: object
          properties:
            enabled:
              type: boolean
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
        name:
          type: string
          example: '"branch/with/protection"'
        protection_url:
          type: string
          example: '"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"'
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        lock_branch:
          type: object
          description: Whether to set the branch as read-only. If this is true, users
            will not be able to push to the branch.
          properties:
            enabled:
              default: false
              type: boolean
        allow_fork_syncing:
          type: object
          description: Whether users can pull changes from upstream when the branch
            is locked. Set to `true` to allow fork syncing. Set to `false` to prevent
            fork syncing.
          properties:
            enabled:
              default: false
              type: boolean
    short-branch:
      title: Short Branch
      description: Short Branch
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        protected:
          type: boolean
        protection:
          "$ref": "#/components/schemas/branch-protection"
        protection_url:
          type: string
          format: uri
      required:
      - name
      - commit
      - protected
    nullable-git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
      nullable: true
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
      required:
      - verified
      - reason
      - payload
      - signature
    diff-entry:
      title: Diff Entry
      description: Diff Entry
      type: object
      properties:
        sha:
          type: string
          example: bbcd538c8e72b8c175046e27cc8f907076331401
        filename:
          type: string
          example: file1.txt
        status:
          type: string
          enum:
          - added
          - removed
          - modified
          - renamed
          - copied
          - changed
          - unchanged
          example: added
        additions:
          type: integer
          example: 103
        deletions:
          type: integer
          example: 21
        changes:
          type: integer
          example: 124
        blob_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch:
          type: string
          example: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
        previous_filename:
          type: string
          example: file.txt
      required:
      - additions
      - blob_url
      - changes
      - contents_url
      - deletions
      - filename
      - raw_url
      - sha
      - status
    commit:
      title: Commit
      description: Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id:
          type: string
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              "$ref": "#/components/schemas/nullable-git-user"
            committer:
              "$ref": "#/components/schemas/nullable-git-user"
            message:
              type: string
              example: Fix all the bugs
            comment_count:
              type: integer
              example: 0
            tree:
              type: object
              properties:
                sha:
                  type: string
                  example: 827efc6d56897b048c772eb4087f854f46256132
                url:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
              required:
              - sha
              - url
            verification:
              "$ref": "#/components/schemas/verification"
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        committer:
          "$ref": "#/components/schemas/nullable-simple-user"
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
              url:
                type: string
                format: uri
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              html_url:
                type: string
                format: uri
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            required:
            - sha
            - url
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        files:
          type: array
          items:
            "$ref": "#/components/schemas/diff-entry"
      required:
      - url
      - sha
      - node_id
      - html_url
      - comments_url
      - commit
      - author
      - committer
      - parents
    branch-with-protection:
      title: Branch With Protection
      description: Branch With Protection
      type: object
      properties:
        name:
          type: string
        commit:
          "$ref": "#/components/schemas/commit"
        _links:
          type: object
          properties:
            html:
              type: string
            self:
              type: string
              format: uri
          required:
          - html
          - self
        protected:
          type: boolean
        protection:
          "$ref": "#/components/schemas/branch-protection"
        protection_url:
          type: string
          format: uri
        pattern:
          type: string
          example: '"mas*"'
        required_approving_review_count:
          type: integer
          example: 1
      required:
      - name
      - commit
      - _links
      - protection
      - protected
      - protection_url
    status-check-policy:
      title: Status Check Policy
      description: Status Check Policy
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict:
          type: boolean
          example: true
        contexts:
          type: array
          example:
          - continuous-integration/travis-ci
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
                example: continuous-integration/travis-ci
              app_id:
                type: integer
                nullable: true
            required:
            - context
            - app_id
        contexts_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
      required:
      - url
      - contexts_url
      - strict
      - contexts
      - checks
    protected-branch:
      title: Protected Branch
      description: Branch protections protect branches
      type: object
      properties:
        url:
          type: string
          format: uri
        required_status_checks:
          "$ref": "#/components/schemas/status-check-policy"
        required_pull_request_reviews:
          type: object
          properties:
            url:
              type: string
              format: uri
            dismiss_stale_reviews:
              type: boolean
            require_code_owner_reviews:
              type: boolean
            required_approving_review_count:
              type: integer
            require_last_push_approval:
              description: Whether the most recent push must be approved by someone
                other than the person who pushed it.
              type: boolean
              default: false
            dismissal_restrictions:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                users_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                users:
                  type: array
                  items:
                    "$ref": "#/components/schemas/simple-user"
                teams:
                  type: array
                  items:
                    "$ref": "#/components/schemas/team"
                apps:
                  type: array
                  items:
                    "$ref": "#/components/schemas/integration"
              required:
              - url
              - users_url
              - teams_url
              - users
              - teams
            bypass_pull_request_allowances:
              type: object
              properties:
                users:
                  type: array
                  items:
                    "$ref": "#/components/schemas/simple-user"
                teams:
                  type: array
                  items:
                    "$ref": "#/components/schemas/team"
                apps:
                  type: array
                  items:
                    "$ref": "#/components/schemas/integration"
              required:
              - users
              - teams
          required:
          - url
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        enforce_admins:
          type: object
          properties:
            url:
              type: string
              format: uri
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - url
          - enabled
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        restrictions:
          "$ref": "#/components/schemas/branch-restriction-policy"
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
        block_creations:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        lock_branch:
          type: object
          description: Whether to set the branch as read-only. If this is true, users
            will not be able to push to the branch.
          properties:
            enabled:
              default: false
              type: boolean
          additionalProperties: false
        allow_fork_syncing:
          type: object
          description: Whether users can pull changes from upstream when the branch
            is locked. Set to `true` to allow fork syncing. Set to `false` to prevent
            fork syncing.
          properties:
            enabled:
              default: false
              type: boolean
          additionalProperties: false
      required:
      - url
    deployment-simple:
      title: Deployment
      description: A deployment created as the result of an Actions check run from
        a workflow that references an environment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist
            at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly
            interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - task
      - environment
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    check-run:
      title: CheckRun
      description: A check performed on the code of a given code change
      type: object
      properties:
        id:
          description: The id of the check.
          example: 21
          type: integer
        head_sha:
          description: The SHA of the commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        external_id:
          type: string
          example: '42'
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        details_url:
          type: string
          example: https://example.com
          nullable: true
        status:
          description: The phase of the lifecycle that the check is currently in.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
        conclusion:
          type: string
          example: neutral
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          nullable: true
        started_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        completed_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        output:
          type: object
          properties:
            title:
              type: string
              nullable: true
            summary:
              type: string
              nullable: true
            text:
              type: string
              nullable: true
            annotations_count:
              type: integer
            annotations_url:
              type: string
              format: uri
          required:
          - title
          - summary
          - text
          - annotations_count
          - annotations_url
        name:
          description: The name of the check.
          example: test-coverage
          type: string
        check_suite:
          type: object
          properties:
            id:
              type: integer
          required:
          - id
          nullable: true
        app:
          "$ref": "#/components/schemas/nullable-integration"
        pull_requests:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        deployment:
          "$ref": "#/components/schemas/deployment-simple"
      required:
      - id
      - node_id
      - head_sha
      - name
      - url
      - html_url
      - details_url
      - status
      - conclusion
      - started_at
      - completed_at
      - external_id
      - check_suite
      - output
      - app
      - pull_requests
    check-annotation:
      title: Check Annotation
      description: Check Annotation
      type: object
      properties:
        path:
          type: string
          example: README.md
        start_line:
          type: integer
          example: 2
        end_line:
          type: integer
          example: 2
        start_column:
          type: integer
          example: 5
          nullable: true
        end_column:
          type: integer
          example: 10
          nullable: true
        annotation_level:
          type: string
          example: warning
          nullable: true
        title:
          type: string
          example: Spell Checker
          nullable: true
        message:
          type: string
          example: Check your spelling for 'banaas'.
          nullable: true
        raw_details:
          type: string
          example: Do you mean 'bananas' or 'banana'?
          nullable: true
        blob_href:
          type: string
      required:
      - path
      - blob_href
      - start_line
      - end_line
      - start_column
      - end_column
      - annotation_level
      - title
      - message
      - raw_details
    simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree_id:
          type: string
          description: SHA for the commit's tree
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        timestamp:
          description: Timestamp of the commit
          example: '2014-08-09T08:02:04+12:00'
          format: date-time
          type: string
        author:
          type: object
          description: Information about the Git author
          properties:
            name:
              description: Name of the commit's author
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's author
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
        committer:
          type: object
          description: Information about the Git committer
          properties:
            name:
              description: Name of the commit's committer
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's committer
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
      required:
      - id
      - tree_id
      - message
      - timestamp
      - author
      - committer
    check-suite:
      title: CheckSuite
      description: A suite of checks performed on the code of a given code change
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        head_branch:
          type: string
          example: master
          nullable: true
        head_sha:
          description: The SHA of the head commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        status:
          type: string
          example: completed
          enum:
          - queued
          - in_progress
          - completed
          nullable: true
        conclusion:
          type: string
          example: neutral
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          - startup_failure
          - stale
          - 
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/5
          nullable: true
        before:
          type: string
          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          nullable: true
        after:
          type: string
          example: d6fde92930d4715a2b49857d24b940956b26d2d3
          nullable: true
        pull_requests:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
          nullable: true
        app:
          "$ref": "#/components/schemas/nullable-integration"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        head_commit:
          "$ref": "#/components/schemas/simple-commit"
        latest_check_runs_count:
          type: integer
        check_runs_url:
          type: string
        rerequestable:
          type: boolean
        runs_rerequestable:
          type: boolean
      required:
      - id
      - node_id
      - head_branch
      - status
      - conclusion
      - head_sha
      - url
      - before
      - after
      - created_at
      - updated_at
      - app
      - head_commit
      - repository
      - latest_check_runs_count
      - check_runs_url
      - pull_requests
    check-suite-preference:
      title: Check Suite Preference
      description: Check suite configuration preferences for a repository.
      type: object
      required:
      - preferences
      - repository
      properties:
        preferences:
          type: object
          properties:
            auto_trigger_checks:
              type: array
              items:
                type: object
                properties:
                  app_id:
                    type: integer
                  setting:
                    type: boolean
                required:
                - app_id
                - setting
        repository:
          "$ref": "#/components/schemas/minimal-repository"
    code-scanning-alert-rule-summary:
      type: object
      properties:
        id:
          nullable: true
          type: string
          description: A unique identifier for the rule used to detect the alert.
        name:
          type: string
          description: The name of the rule used to detect the alert.
        tags:
          nullable: true
          type: array
          description: A set of tags applicable for the rule.
          items:
            type: string
        severity:
          nullable: true
          type: string
          description: The severity of the alert.
          enum:
          - none
          - note
          - warning
          - error
        description:
          type: string
          description: A short description of the rule used to detect the alert.
    code-scanning-alert-items:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        instances_url:
          "$ref": "#/components/schemas/alert-instances-url"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_reason:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
        dismissed_comment:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
        rule:
          "$ref": "#/components/schemas/code-scanning-alert-rule-summary"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        most_recent_instance:
          "$ref": "#/components/schemas/code-scanning-alert-instance"
      required:
      - number
      - created_at
      - url
      - html_url
      - instances_url
      - state
      - dismissed_by
      - dismissed_at
      - dismissed_reason
      - rule
      - tool
      - most_recent_instance
    code-scanning-alert:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        instances_url:
          "$ref": "#/components/schemas/alert-instances-url"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_reason:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
        dismissed_comment:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
        rule:
          "$ref": "#/components/schemas/code-scanning-alert-rule"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        most_recent_instance:
          "$ref": "#/components/schemas/code-scanning-alert-instance"
      required:
      - number
      - created_at
      - url
      - html_url
      - instances_url
      - state
      - dismissed_by
      - dismissed_at
      - dismissed_reason
      - rule
      - tool
      - most_recent_instance
    code-scanning-alert-set-state:
      description: Sets the state of the code scanning alert. You must provide `dismissed_reason`
        when you set the state to `dismissed`.
      type: string
      enum:
      - open
      - dismissed
    code-scanning-analysis-sarif-id:
      type: string
      description: An identifier for the upload.
      example: 6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53
    code-scanning-analysis-commit-sha:
      description: The SHA of the commit to which the analysis you are uploading relates.
      type: string
      minLength: 40
      maxLength: 40
      pattern: "^[0-9a-fA-F]+$"
    code-scanning-analysis-environment:
      type: string
      description: Identifies the variable values associated with the environment
        in which this analysis was performed.
    code-scanning-analysis-created-at:
      type: string
      description: 'The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    code-scanning-analysis-url:
      type: string
      description: The REST API URL of the analysis resource.
      format: uri
      readOnly: true
    code-scanning-analysis:
      type: object
      properties:
        ref:
          "$ref": "#/components/schemas/code-scanning-ref"
        commit_sha:
          "$ref": "#/components/schemas/code-scanning-analysis-commit-sha"
        analysis_key:
          "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
        environment:
          "$ref": "#/components/schemas/code-scanning-analysis-environment"
        category:
          "$ref": "#/components/schemas/code-scanning-analysis-category"
        error:
          type: string
          example: error reading field xyz
        created_at:
          "$ref": "#/components/schemas/code-scanning-analysis-created-at"
        results_count:
          type: integer
          description: The total number of results in the analysis.
        rules_count:
          type: integer
          description: The total number of rules used in the analysis.
        id:
          type: integer
          description: Unique identifier for this analysis.
        url:
          "$ref": "#/components/schemas/code-scanning-analysis-url"
        sarif_id:
          "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        deletable:
          type: boolean
        warning:
          type: string
          description: Warning generated when processing the analysis
          example: 123 results were ignored
      required:
      - ref
      - commit_sha
      - analysis_key
      - environment
      - error
      - created_at
      - results_count
      - rules_count
      - id
      - url
      - sarif_id
      - tool
      - deletable
      - warning
    code-scanning-analysis-deletion:
      title: Analysis deletion
      description: Successful deletion of a code scanning analysis
      type: object
      properties:
        next_analysis_url:
          type: string
          description: Next deletable analysis in chain, without last analysis deletion
            confirmation
          format: uri
          readOnly: true
          nullable: true
        confirm_delete_url:
          type: string
          description: Next deletable analysis in chain, with last analysis deletion
            confirmation
          format: uri
          readOnly: true
          nullable: true
      required:
      - next_analysis_url
      - confirm_delete_url
    code-scanning-codeql-database:
      title: CodeQL Database
      description: A CodeQL database.
      type: object
      properties:
        id:
          type: integer
          description: The ID of the CodeQL database.
        name:
          type: string
          description: The name of the CodeQL database.
        language:
          type: string
          description: The language of the CodeQL database.
        uploader:
          "$ref": "#/components/schemas/simple-user"
        content_type:
          type: string
          description: The MIME type of the CodeQL database file.
        size:
          type: integer
          description: The size of the CodeQL database file in bytes.
        created_at:
          type: string
          format: date-time
          description: The date and time at which the CodeQL database was created,
            in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
        updated_at:
          type: string
          format: date-time
          description: The date and time at which the CodeQL database was last updated,
            in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
        url:
          type: string
          format: uri
          description: The URL at which to download the CodeQL database. The `Accept`
            header must be set to the value of the `content_type` property.
      required:
      - id
      - name
      - language
      - uploader
      - content_type
      - size
      - created_at
      - updated_at
      - url
    code-scanning-default-setup:
      description: Configuration for code scanning default setup.
      type: object
      properties:
        state:
          description: Code scanning default setup has been configured or not.
          type: string
          enum:
          - configured
          - not-configured
        languages:
          description: Languages to be analysed.
          type: array
          items:
            type: string
            enum:
            - c
            - cpp
            - csharp
            - go
            - java
            - javascript
            - kotlin
            - python
            - ruby
            - typescript
        query_suite:
          description: CodeQL query suite to be used.
          type: string
          enum:
          - default
          - extended
        updated_at:
          description: Timestamp of latest configuration update.
          nullable: true
          type: string
          format: date-time
          example: '2023-12-06T14:20:20.000Z'
    code-scanning-default-setup-update:
      description: Configuration for code scanning default setup.
      type: object
      properties:
        state:
          description: Whether code scanning default setup has been configured or
            not.
          type: string
          enum:
          - configured
          - not-configured
        query_suite:
          description: CodeQL query suite to be used.
          type: string
          enum:
          - default
          - extended
      required:
      - state
    code-scanning-default-setup-update-response:
      description: |-
        You can use `run_url` to track the status of the run. This includes a property status and conclusion.
        You should not rely on this always being an actions workflow run object.
      type: object
      properties:
        run_id:
          description: ID of the corresponding run.
          type: integer
        run_url:
          description: URL of the corresponding run.
          type: string
    code-scanning-analysis-sarif-file:
      description: A Base64 string representing the SARIF file to upload. You must
        first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html)
        and then translate the contents of the file into a Base64 encoding string.
        For more information, see "[SARIF support for code scanning](https://docs.github.com/code-security/secure-coding/sarif-support-for-code-scanning)."
      type: string
    code-scanning-sarifs-receipt:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
        url:
          type: string
          description: The REST API URL for checking the status of the upload.
          format: uri
          readOnly: true
    code-scanning-sarifs-status:
      type: object
      properties:
        processing_status:
          type: string
          enum:
          - pending
          - complete
          - failed
          description: "`pending` files have not yet been processed, while `complete`
            means results from the SARIF have been stored. `failed` files have either
            not been processed at all, or could only be partially processed."
        analyses_url:
          type: string
          description: The REST API URL for getting the analyses associated with the
            upload.
          format: uri
          readOnly: true
          nullable: true
        errors:
          type: array
          items:
            type: string
          description: Any errors that ocurred during processing of the delivery.
          readOnly: true
          nullable: true
    codeowners-errors:
      title: CODEOWNERS errors
      description: A list of errors found in a repo's CODEOWNERS file
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              line:
                description: The line number where this errors occurs.
                type: integer
                example: 7
              column:
                description: The column number where this errors occurs.
                type: integer
                example: 3
              source:
                description: The contents of the line where the error occurs.
                type: string
                example: "* user"
              kind:
                description: The type of error.
                type: string
                example: Invalid owner
              suggestion:
                description: Suggested action to fix the error. This will usually
                  be `null`, but is provided for some common errors.
                type: string
                nullable: true
                example: The pattern `/` will never match anything, did you mean `*`
                  instead?
              message:
                description: A human-readable description of the error, combining
                  information from multiple fields, laid out for display in a monospaced
                  typeface (for example, a command-line setting).
                type: string
                example: |-
                  Invalid owner on line 7:

                    * user
                      ^
              path:
                description: The path of the file where the error occured.
                type: string
                example: ".github/CODEOWNERS"
            required:
            - line
            - column
            - kind
            - message
            - path
      required:
      - errors
    codespace-machine:
      type: object
      title: Codespace machine
      description: A description of the machine powering a codespace.
      properties:
        name:
          type: string
          description: The name of the machine.
          example: standardLinux
        display_name:
          type: string
          description: The display name of the machine includes cores, memory, and
            storage.
          example: 4 cores, 8 GB RAM, 64 GB storage
        operating_system:
          type: string
          description: The operating system of the machine.
          example: linux
        storage_in_bytes:
          type: integer
          description: How much storage is available to the codespace.
          example: 68719476736
        memory_in_bytes:
          type: integer
          description: How much memory is available to the codespace.
          example: 8589934592
        cpus:
          type: integer
          description: How many cores are available to the codespace.
          example: 4
        prebuild_availability:
          type: string
          description: Whether a prebuild is currently available when creating a codespace
            for this machine and repository. If a branch was not specified as a ref,
            the default branch will be assumed. Value will be "null" if prebuilds
            are not supported or prebuild availability could not be determined. Value
            will be "none" if no prebuild is available. Latest values "ready" and
            "in_progress" indicate the prebuild availability status.
          example: ready
          enum:
          - none
          - ready
          - in_progress
          nullable: true
      required:
      - name
      - display_name
      - operating_system
      - storage_in_bytes
      - memory_in_bytes
      - cpus
      - prebuild_availability
    repo-codespaces-secret:
      title: Codespaces Secret
      description: Set repository secrets for GitHub Codespaces.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - name
      - created_at
      - updated_at
    collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
        role_name:
          type: string
          example: admin
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - role_name
    repository-invitation:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        id:
          description: Unique identifier of the repository invitation.
          example: 42
          type: integer
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        invitee:
          "$ref": "#/components/schemas/nullable-simple-user"
        inviter:
          "$ref": "#/components/schemas/nullable-simple-user"
        permissions:
          description: The permission associated with the invitation.
          example: read
          type: string
          enum:
          - read
          - write
          - admin
          - triage
          - maintain
        created_at:
          type: string
          format: date-time
          example: '2016-06-13T14:52:50-05:00'
        expired:
          description: Whether or not the invitation has expired
          type: boolean
        url:
          description: URL for the repository invitation
          example: https://api.github.com/user/repository-invitations/1
          type: string
        html_url:
          type: string
          example: https://github.com/octocat/Hello-World/invitations
        node_id:
          type: string
      required:
      - id
      - node_id
      - permissions
      - inviter
      - invitee
      - repository
      - url
      - html_url
      - created_at
    nullable-collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
        role_name:
          type: string
          example: admin
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - role_name
      nullable: true
    repository-collaborator-permission:
      title: Repository Collaborator Permission
      description: Repository Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        role_name:
          type: string
          example: admin
        user:
          "$ref": "#/components/schemas/nullable-collaborator"
      required:
      - permission
      - role_name
      - user
    commit-comment:
      title: Commit Comment
      description: Commit Comment
      type: object
      properties:
        html_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        body:
          type: string
        path:
          type: string
          nullable: true
        position:
          type: integer
          nullable: true
        line:
          type: integer
          nullable: true
        commit_id:
          type: string
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          "$ref": "#/components/schemas/author-association"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - url
      - html_url
      - id
      - node_id
      - user
      - position
      - line
      - path
      - commit_id
      - body
      - author_association
      - created_at
      - updated_at
    branch-short:
      title: Branch Short
      description: Branch Short
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
          required:
          - sha
          - url
        protected:
          type: boolean
      required:
      - name
      - commit
      - protected
    link:
      title: Link
      description: Hypermedia Link
      type: object
      properties:
        href:
          type: string
      required:
      - href
    auto-merge:
      title: Auto merge
      description: The status of auto merging a pull request.
      type: object
      properties:
        enabled_by:
          "$ref": "#/components/schemas/simple-user"
        merge_method:
          type: string
          description: The merge method to use.
          enum:
          - merge
          - squash
          - rebase
        commit_title:
          type: string
          description: Title for the merge commit message.
        commit_message:
          type: string
          description: Commit message for the merge commit.
      required:
      - enabled_by
      - merge_method
      - commit_title
      - commit_message
      nullable: true
    pull-request-simple:
      title: Pull Request Simple
      description: Pull Request Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        locked:
          type: boolean
          example: true
        title:
          type: string
          example: new-feature
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_reviewers:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_teams:
          type: array
          items:
            "$ref": "#/components/schemas/team"
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              "$ref": "#/components/schemas/repository"
            sha:
              type: string
            user:
              "$ref": "#/components/schemas/nullable-simple-user"
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              "$ref": "#/components/schemas/repository"
            sha:
              type: string
            user:
              "$ref": "#/components/schemas/nullable-simple-user"
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              "$ref": "#/components/schemas/link"
            commits:
              "$ref": "#/components/schemas/link"
            statuses:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            issue:
              "$ref": "#/components/schemas/link"
            review_comments:
              "$ref": "#/components/schemas/link"
            review_comment:
              "$ref": "#/components/schemas/link"
            self:
              "$ref": "#/components/schemas/link"
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          "$ref": "#/components/schemas/author-association"
        auto_merge:
          "$ref": "#/components/schemas/auto-merge"
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
    simple-commit-status:
      title: Simple Commit Status
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        context:
          type: string
        target_url:
          type: string
          format: uri
          nullable: true
        required:
          type: boolean
          nullable: true
        avatar_url:
          type: string
          nullable: true
          format: uri
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - description
      - id
      - node_id
      - state
      - context
      - target_url
      - avatar_url
      - url
      - created_at
      - updated_at
    combined-commit-status:
      title: Combined Commit Status
      description: Combined Commit Status
      type: object
      properties:
        state:
          type: string
        statuses:
          type: array
          items:
            "$ref": "#/components/schemas/simple-commit-status"
        sha:
          type: string
        total_count:
          type: integer
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        commit_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
      required:
      - state
      - sha
      - total_count
      - statuses
      - repository
      - commit_url
      - url
    status:
      title: Status
      description: The status of a commit.
      type: object
      properties:
        url:
          type: string
        avatar_url:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        description:
          type: string
          nullable: true
        target_url:
          type: string
          nullable: true
        context:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - url
      - avatar_url
      - id
      - node_id
      - state
      - description
      - target_url
      - context
      - created_at
      - updated_at
      - creator
    nullable-code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
      - url
      - key
      - name
      - html_url
      nullable: true
    nullable-community-health-file:
      title: Community Health File
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
      required:
      - url
      - html_url
      nullable: true
    community-profile:
      title: Community Profile
      description: Community Profile
      type: object
      properties:
        health_percentage:
          type: integer
          example: 100
        description:
          type: string
          example: My first repository on GitHub!
          nullable: true
        documentation:
          type: string
          example: example.com
          nullable: true
        files:
          type: object
          properties:
            code_of_conduct:
              "$ref": "#/components/schemas/nullable-code-of-conduct-simple"
            code_of_conduct_file:
              "$ref": "#/components/schemas/nullable-community-health-file"
            license:
              "$ref": "#/components/schemas/nullable-license-simple"
            contributing:
              "$ref": "#/components/schemas/nullable-community-health-file"
            readme:
              "$ref": "#/components/schemas/nullable-community-health-file"
            issue_template:
              "$ref": "#/components/schemas/nullable-community-health-file"
            pull_request_template:
              "$ref": "#/components/schemas/nullable-community-health-file"
          required:
          - code_of_conduct
          - code_of_conduct_file
          - license
          - contributing
          - readme
          - issue_template
          - pull_request_template
        updated_at:
          type: string
          format: date-time
          example: '2017-02-28T19:09:29Z'
          nullable: true
        content_reports_enabled:
          type: boolean
          example: true
      required:
      - health_percentage
      - description
      - documentation
      - files
      - updated_at
    commit-comparison:
      title: Commit Comparison
      description: Commit Comparison
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          "$ref": "#/components/schemas/commit"
        merge_base_commit:
          "$ref": "#/components/schemas/commit"
        status:
          type: string
          enum:
          - diverged
          - ahead
          - behind
          - identical
          example: ahead
        ahead_by:
          type: integer
          example: 4
        behind_by:
          type: integer
          example: 5
        total_commits:
          type: integer
          example: 6
        commits:
          type: array
          items:
            "$ref": "#/components/schemas/commit"
        files:
          type: array
          items:
            "$ref": "#/components/schemas/diff-entry"
      required:
      - url
      - html_url
      - permalink_url
      - diff_url
      - patch_url
      - base_commit
      - merge_base_commit
      - status
      - ahead_by
      - behind_by
      - total_commits
      - commits
    content-tree:
      title: Content Tree
      description: Content Tree
      type: object
      properties:
        type:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        entries:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              size:
                type: integer
              name:
                type: string
              path:
                type: string
              content:
                type: string
              sha:
                type: string
              url:
                type: string
                format: uri
              git_url:
                type: string
                format: uri
                nullable: true
              html_url:
                type: string
                format: uri
                nullable: true
              download_url:
                type: string
                format: uri
                nullable: true
              _links:
                type: object
                properties:
                  git:
                    type: string
                    format: uri
                    nullable: true
                  html:
                    type: string
                    format: uri
                    nullable: true
                  self:
                    type: string
                    format: uri
                required:
                - git
                - html
                - self
            required:
            - _links
            - git_url
            - html_url
            - download_url
            - name
            - path
            - sha
            - size
            - type
            - url
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-directory:
      title: Content Directory
      description: A list of directory items
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - dir
            - file
            - submodule
            - symlink
          size:
            type: integer
          name:
            type: string
          path:
            type: string
          content:
            type: string
          sha:
            type: string
          url:
            type: string
            format: uri
          git_url:
            type: string
            format: uri
            nullable: true
          html_url:
            type: string
            format: uri
            nullable: true
          download_url:
            type: string
            format: uri
            nullable: true
          _links:
            type: object
            properties:
              git:
                type: string
                format: uri
                nullable: true
              html:
                type: string
                format: uri
                nullable: true
              self:
                type: string
                format: uri
            required:
            - git
            - html
            - self
        required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
    content-file:
      title: Content File
      description: Content File
      type: object
      properties:
        type:
          type: string
          enum:
          - file
        encoding:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        content:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        target:
          type: string
          example: '"actual/actual.md"'
        submodule_git_url:
          type: string
          example: '"git://example.com/defunkt/dotjs.git"'
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-symlink:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
          enum:
          - symlink
        target:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - target
    content-submodule:
      title: Submodule Content
      description: An object describing a submodule
      type: object
      properties:
        type:
          type: string
          enum:
          - submodule
        submodule_git_url:
          type: string
          format: uri
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - submodule_git_url
    file-commit:
      title: File Commit
      description: File Commit
      type: object
      required:
      - content
      - commit
      properties:
        content:
          type: object
          properties:
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            size:
              type: integer
            url:
              type: string
            html_url:
              type: string
            git_url:
              type: string
            download_url:
              type: string
            type:
              type: string
            _links:
              type: object
              properties:
                self:
                  type: string
                git:
                  type: string
                html:
                  type: string
          nullable: true
        commit:
          type: object
          properties:
            sha:
              type: string
            node_id:
              type: string
            url:
              type: string
            html_url:
              type: string
            author:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            committer:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
            tree:
              type: object
              properties:
                url:
                  type: string
                sha:
                  type: string
            parents:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                  html_url:
                    type: string
                  sha:
                    type: string
            verification:
              type: object
              properties:
                verified:
                  type: boolean
                reason:
                  type: string
                signature:
                  type: string
                  nullable: true
                payload:
                  type: string
                  nullable: true
    contributor:
      title: Contributor
      description: Contributor
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        contributions:
          type: integer
        email:
          type: string
        name:
          type: string
      required:
      - contributions
      - type
    dependabot-alert:
      type: object
      description: A Dependabot alert.
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        state:
          type: string
          description: The state of the Dependabot alert.
          readOnly: true
          enum:
          - auto_dismissed
          - dismissed
          - fixed
          - open
        dependency:
          type: object
          description: Details for the vulnerable dependency.
          readOnly: true
          properties:
            package:
              "$ref": "#/components/schemas/dependabot-alert-package"
            manifest_path:
              type: string
              description: The full path to the dependency manifest file, relative
                to the root of the repository.
              readOnly: true
            scope:
              type: string
              description: The execution scope of the vulnerable dependency.
              readOnly: true
              nullable: true
              enum:
              - development
              - runtime
        security_advisory:
          "$ref": "#/components/schemas/dependabot-alert-security-advisory"
        security_vulnerability:
          "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_reason:
          type: string
          description: The reason that the alert was dismissed.
          nullable: true
          enum:
          - fix_started
          - inaccurate
          - no_bandwidth
          - not_used
          - tolerable_risk
        dismissed_comment:
          type: string
          description: An optional comment associated with the alert's dismissal.
          nullable: true
          maxLength: 280
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        auto_dismissed_at:
          "$ref": "#/components/schemas/alert-auto-dismissed-at"
      required:
      - number
      - state
      - dependency
      - security_advisory
      - security_vulnerability
      - url
      - html_url
      - created_at
      - updated_at
      - dismissed_at
      - dismissed_by
      - dismissed_reason
      - dismissed_comment
      - fixed_at
      additionalProperties: false
    dependabot-secret:
      title: Dependabot Secret
      description: Set secrets for Dependabot.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: MY_ARTIFACTORY_PASSWORD
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - name
      - created_at
      - updated_at
    dependency-graph-diff:
      title: Dependency Graph Diff
      description: A diff of the dependencies between two commits.
      type: array
      items:
        type: object
        properties:
          change_type:
            type: string
            enum:
            - added
            - removed
          manifest:
            type: string
            example: path/to/package-lock.json
          ecosystem:
            type: string
            example: npm
          name:
            type: string
            example: "@actions/core"
          version:
            type: string
            example: 1.0.0
          package_url:
            type: string
            nullable: true
            example: pkg:/npm/%40actions/core@1.1.0
          license:
            type: string
            nullable: true
            example: MIT
          source_repository_url:
            type: string
            nullable: true
            example: https://github.com/github/actions
          vulnerabilities:
            type: array
            items:
              type: object
              properties:
                severity:
                  type: string
                  example: critical
                advisory_ghsa_id:
                  type: string
                  example: GHSA-rf4j-j272-fj86
                advisory_summary:
                  type: string
                  example: A summary of the advisory.
                advisory_url:
                  type: string
                  example: https://github.com/advisories/GHSA-rf4j-j272-fj86
              required:
              - severity
              - advisory_ghsa_id
              - advisory_summary
              - advisory_url
          scope:
            description: Where the dependency is utilized. `development` means that
              the dependency is only utilized in the development environment. `runtime`
              means that the dependency is utilized at runtime and in the development
              environment.
            type: string
            enum:
            - unknown
            - runtime
            - development
        required:
        - change_type
        - manifest
        - ecosystem
        - name
        - version
        - package_url
        - license
        - source_repository_url
        - vulnerabilities
        - scope
    dependency-graph-spdx-sbom:
      title: Dependency Graph SPDX SBOM
      description: A schema for the SPDX JSON format returned by the Dependency Graph.
      type: object
      properties:
        sbom:
          type: object
          properties:
            SPDXID:
              type: string
              example: SPDXRef-DOCUMENT
              description: The SPDX identifier for the SPDX document.
            spdxVersion:
              type: string
              example: SPDX-2.3
              description: The version of the SPDX specification that this document
                conforms to.
            creationInfo:
              type: object
              properties:
                created:
                  type: string
                  example: '2021-11-03T00:00:00Z'
                  description: The date and time the SPDX document was created.
                creators:
                  type: array
                  items:
                    type: string
                    example: GitHub
                  description: The tools that were used to generate the SPDX document.
              required:
              - created
              - creators
            name:
              type: string
              example: github/github
              description: The name of the SPDX document.
            dataLicense:
              type: string
              example: CC0-1.0
              description: The license under which the SPDX document is licensed.
            documentDescribes:
              type: array
              items:
                type: string
                example: github/github
              description: The name of the repository that the SPDX document describes.
            documentNamespace:
              type: string
              example: https://github.com/example/dependency_graph/sbom-123
              description: The namespace for the SPDX document.
            packages:
              type: array
              items:
                type: object
                properties:
                  SPDXID:
                    type: string
                    example: SPDXRef-Package
                    description: A unique SPDX identifier for the package.
                  name:
                    type: string
                    example: rubygems:github/github
                    description: The name of the package.
                  versionInfo:
                    type: string
                    example: 1.0.0
                    description: |-
                      The version of the package. If the package does not have an exact version specified,
                      a version range is given.
                  downloadLocation:
                    type: string
                    example: NOASSERTION
                    description: |-
                      The location where the package can be downloaded,
                      or NOASSERTION if this has not been determined.
                  filesAnalyzed:
                    type: boolean
                    example: false
                    description: |-
                      Whether the package's file content has been subjected to
                      analysis during the creation of the SPDX document.
                  licenseConcluded:
                    type: string
                    example: MIT
                    description: The license of the package as determined while creating
                      the SPDX document.
                  licenseDeclared:
                    type: string
                    example: NOASSERTION
                    description: |-
                      The license of the package as declared by its author, or NOASSERTION if this information
                      was not available when the SPDX document was created.
                  supplier:
                    type: string
                    example: NOASSERTION
                    description: The distribution source of this package, or NOASSERTION
                      if this was not determined.
                  externalRefs:
                    type: array
                    items:
                      type: object
                      properties:
                        referenceCategory:
                          type: string
                          example: PACKAGE-MANAGER
                          description: The category of reference to an external resource
                            this reference refers to.
                        referenceLocator:
                          type: string
                          example: pkg:gem/rails@6.0.1
                          description: A locator for the particular external resource
                            this reference refers to.
                        referenceType:
                          type: string
                          example: purl
                          description: The category of reference to an external resource
                            this reference refers to.
                      required:
                      - referenceCategory
                      - referenceLocator
                      - referenceType
              required:
              - SPDXID
              - name
              - versionInfo
              - downloadLocation
              - filesAnalyzed
              - licenseConcluded
              - licenseDeclared
              - supplier
          required:
          - SPDXID
          - spdxVersion
          - creationInfo
          - name
          - dataLicense
          - documentDescribes
          - documentNamespace
          - packages
      required:
      - sbom
    metadata:
      title: metadata
      description: User-defined metadata to store domain-specific information limited
        to 8 keys with scalar values.
      type: object
      maxProperties: 8
      additionalProperties:
        nullable: true
        anyOf:
        - type: string
        - type: number
        - type: boolean
    dependency:
      type: object
      properties:
        package_url:
          type: string
          description: Package-url (PURL) of dependency. See https://github.com/package-url/purl-spec
            for more details.
          example: pkg:/npm/%40actions/http-client@1.0.11
          pattern: "^pkg"
        metadata:
          "$ref": "#/components/schemas/metadata"
        relationship:
          type: string
          description: A notation of whether a dependency is requested directly by
            this manifest or is a dependency of another dependency.
          example: direct
          enum:
          - direct
          - indirect
        scope:
          type: string
          description: A notation of whether the dependency is required for the primary
            build artifact (runtime) or is only used for development. Future versions
            of this specification may allow for more granular scopes.
          example: runtime
          enum:
          - runtime
          - development
        dependencies:
          type: array
          description: Array of package-url (PURLs) of direct child dependencies.
          example: "@actions/http-client"
          items:
            type: string
      additionalProperties: false
    manifest:
      type: object
      properties:
        name:
          type: string
          description: The name of the manifest.
          example: package-lock.json
        file:
          type: object
          properties:
            source_location:
              type: string
              description: The path of the manifest file relative to the root of the
                Git repository.
              example: "/src/build/package-lock.json"
          additionalProperties: false
        metadata:
          "$ref": "#/components/schemas/metadata"
        resolved:
          type: object
          description: A collection of resolved package dependencies.
          additionalProperties:
            "$ref": "#/components/schemas/dependency"
      required:
      - name
      additionalProperties: false
    snapshot:
      title: snapshot
      description: Create a new snapshot of a repository's dependencies.
      type: object
      properties:
        version:
          description: The version of the repository snapshot submission.
          type: integer
        job:
          type: object
          properties:
            id:
              type: string
              description: The external ID of the job.
              example: 5622a2b0-63f6-4732-8c34-a1ab27e102a11
            correlator:
              type: string
              description: Correlator provides a key that is used to group snapshots
                submitted over time. Only the "latest" submitted snapshot for a given
                combination of `job.correlator` and `detector.name` will be considered
                when calculating a repository's current dependencies. Correlator should
                be as unique as it takes to distinguish all detection runs for a given
                "wave" of CI workflow you run. If you're using GitHub Actions, a good
                default value for this could be the environment variables GITHUB_WORKFLOW
                and GITHUB_JOB concatenated together. If you're using a build matrix,
                then you'll also need to add additional key(s) to distinguish between
                each submission inside a matrix variation.
              example: yourworkflowname_yourjobname
            html_url:
              type: string
              description: The url for the job.
              example: http://example.com/build
          required:
          - id
          - correlator
          additionalProperties: false
        sha:
          description: 'The commit SHA associated with this dependency snapshot. Maximum
            length: 40 characters.'
          type: string
          example: ddc951f4b1293222421f2c8df679786153acf689
          minLength: 40
          maxLength: 40
        ref:
          description: The repository branch that triggered this snapshot.
          type: string
          pattern: "^refs/"
          example: refs/heads/main
        detector:
          type: object
          description: A description of the detector used.
          properties:
            name:
              type: string
              description: The name of the detector used.
              example: docker buildtime detector
            version:
              type: string
              description: The version of the detector used.
              example: 1.0.0
            url:
              type: string
              description: The url of the detector used.
              example: http://example.com/docker-buildtimer-detector
          required:
          - name
          - version
          - url
          additionalProperties: false
        metadata:
          "$ref": "#/components/schemas/metadata"
        manifests:
          type: object
          description: A collection of package manifests, which are a collection of
            related dependencies declared in a file or representing a logical group
            of dependencies.
          additionalProperties:
            "$ref": "#/components/schemas/manifest"
        scanned:
          type: string
          format: date-time
          description: The time at which the snapshot was scanned.
          example: '2020-06-13T14:52:50-05:00'
      required:
      - detector
      - version
      - ref
      - sha
      - job
      - scanned
      additionalProperties: false
    deployment-status:
      title: Deployment Status
      description: The status of a deployment.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state:
          description: The state of the status.
          enum:
          - error
          - failure
          - inactive
          - pending
          - success
          - queued
          - in_progress
          example: success
          type: string
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        description:
          description: A short description of the status.
          default: ''
          type: string
          maxLength: 140
          example: Deployment finished successfully.
        environment:
          description: The environment of the deployment that the status is for.
          default: ''
          type: string
          example: production
        target_url:
          description: 'Deprecated: the URL to associate with this status.'
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        deployment_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        environment_url:
          description: The URL for accessing your environment.
          default: ''
          type: string
          format: uri
          example: https://staging.example.com/
        log_url:
          description: The URL to associate with this status.
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - state
      - creator
      - description
      - deployment_url
      - target_url
      - repository_url
      - url
      - created_at
      - updated_at
    wait-timer:
      type: integer
      example: 30
      description: The amount of time to delay a job after the job is initially triggered.
        The time (in minutes) must be an integer between 0 and 43,200 (30 days).
    deployment-branch-policy-settings:
      type: object
      description: The type of deployment branch policy for this environment. To allow
        all branches to deploy, set to `null`.
      properties:
        protected_branches:
          type: boolean
          description: Whether only branches with branch protection rules can deploy
            to this environment. If `protected_branches` is `true`, `custom_branch_policies`
            must be `false`; if `protected_branches` is `false`, `custom_branch_policies`
            must be `true`.
        custom_branch_policies:
          type: boolean
          description: Whether only branches that match the specified name patterns
            can deploy to this environment.  If `custom_branch_policies` is `true`,
            `protected_branches` must be `false`; if `custom_branch_policies` is `false`,
            `protected_branches` must be `true`.
      nullable: true
      required:
      - protected_branches
      - custom_branch_policies
    environment:
      title: Environment
      description: Details of a deployment environment
      type: object
      properties:
        id:
          description: The id of the environment.
          example: 56780428
          type: integer
        node_id:
          type: string
          example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
        name:
          description: The name of the environment.
          example: staging
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/environments/staging
        html_url:
          type: string
          example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at:
          description: The time that the environment was created, in ISO 8601 format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        updated_at:
          description: The time that the environment was last updated, in ISO 8601
            format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        protection_rules:
          type: array
          description: Built-in deployment protection rules for the environment.
          items:
            anyOf:
            - type: object
              properties:
                id:
                  type: integer
                  example: 3515
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM1MTU=
                type:
                  type: string
                  example: wait_timer
                wait_timer:
                  "$ref": "#/components/schemas/wait-timer"
              required:
              - id
              - node_id
              - type
            - type: object
              properties:
                id:
                  type: integer
                  example: 3755
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM3NTU=
                type:
                  type: string
                  example: required_reviewers
                reviewers:
                  type: array
                  description: The people or teams that may approve jobs that reference
                    the environment. You can list up to six users or teams as reviewers.
                    The reviewers must have at least read access to the repository.
                    Only one of the required reviewers needs to approve the job for
                    it to proceed.
                  items:
                    type: object
                    properties:
                      type:
                        "$ref": "#/components/schemas/deployment-reviewer-type"
                      reviewer:
                        anyOf:
                        - "$ref": "#/components/schemas/simple-user"
                        - "$ref": "#/components/schemas/team"
              required:
              - id
              - node_id
              - type
            - type: object
              properties:
                id:
                  type: integer
                  example: 3515
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM1MTU=
                type:
                  type: string
                  example: branch_policy
              required:
              - id
              - node_id
              - type
        deployment_branch_policy:
          "$ref": "#/components/schemas/deployment-branch-policy-settings"
      required:
      - id
      - node_id
      - name
      - url
      - html_url
      - created_at
      - updated_at
    deployment-branch-policy:
      title: Deployment branch policy
      description: Details of a deployment branch policy.
      type: object
      properties:
        id:
          description: The unique identifier of the branch policy.
          type: integer
          example: 361471
        node_id:
          type: string
          example: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=
        name:
          description: The name pattern that branches must match in order to deploy
            to the environment.
          type: string
          example: release/*
    deployment-branch-policy-name-pattern:
      title: Deployment branch policy name pattern
      type: object
      properties:
        name:
          description: |-
            The name pattern that branches must match in order to deploy to the environment.

            Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.
            For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
          type: string
          example: release/*
      required:
      - name
    custom-deployment-rule-app:
      title: Custom deployment protection rule app
      description: A GitHub App that is providing a custom deployment protection rule.
      type: object
      properties:
        id:
          type: integer
          example: 3515
          description: The unique identifier of the deployment protection rule integration.
        slug:
          type: string
          example: my-custom-app
          description: The slugified name of the deployment protection rule integration.
        integration_url:
          type: string
          example: https://api.github.com/apps/custom-app-slug
          description: The URL for the endpoint to get details about the app.
        node_id:
          type: string
          example: MDQ6R2F0ZTM1MTU=
          description: The node ID for the deployment protection rule integration.
      required:
      - id
      - slug
      - integration_url
      - node_id
    deployment-protection-rule:
      title: Deployment protection rule
      description: Deployment protection rule
      type: object
      properties:
        id:
          type: integer
          example: 3515
          description: The unique identifier for the deployment protection rule.
        node_id:
          type: string
          example: MDQ6R2F0ZTM1MTU=
          description: The node ID for the deployment protection rule.
        enabled:
          type: boolean
          example: true
          description: Whether the deployment protection rule is enabled for the environment.
        app:
          "$ref": "#/components/schemas/custom-deployment-rule-app"
      required:
      - id
      - node_id
      - enabled
      - app
    short-blob:
      title: Short Blob
      description: Short Blob
      type: object
      properties:
        url:
          type: string
        sha:
          type: string
      required:
      - url
      - sha
    blob:
      title: Blob
      description: Blob
      type: object
      properties:
        content:
          type: string
        encoding:
          type: string
        url:
          type: string
          format: uri
        sha:
          type: string
        size:
          type: integer
          nullable: true
        node_id:
          type: string
        highlighted_content:
          type: string
      required:
      - sha
      - url
      - node_id
      - size
      - content
      - encoding
    git-commit:
      title: Git Commit
      description: Low-level Git commit operations within a repository
      type: object
      properties:
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        author:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        committer:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        tree:
          type: object
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                type: string
                format: uri
              html_url:
                type: string
                format: uri
            required:
            - sha
            - url
            - html_url
        verification:
          type: object
          properties:
            verified:
              type: boolean
            reason:
              type: string
            signature:
              type: string
              nullable: true
            payload:
              type: string
              nullable: true
          required:
          - verified
          - reason
          - signature
          - payload
        html_url:
          type: string
          format: uri
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - tree
      - message
      - parents
      - verification
    git-ref:
      title: Git Reference
      description: Git references within a repository
      type: object
      properties:
        ref:
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        object:
          type: object
          properties:
            type:
              type: string
            sha:
              description: SHA for the reference
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
              minLength: 40
              maxLength: 40
            url:
              type: string
              format: uri
          required:
          - type
          - sha
          - url
      required:
      - ref
      - node_id
      - url
      - object
    git-tag:
      title: Git Tag
      description: Metadata for a Git tag
      type: object
      properties:
        node_id:
          type: string
          example: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
        tag:
          description: Name of the tag
          example: v0.0.1
          type: string
        sha:
          type: string
          example: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
        url:
          description: URL for the tag
          example: https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
          type: string
          format: uri
        message:
          description: Message describing the purpose of the tag
          example: Initial public release
          type: string
        tagger:
          type: object
          properties:
            date:
              type: string
            email:
              type: string
            name:
              type: string
          required:
          - date
          - email
          - name
        object:
          type: object
          properties:
            sha:
              type: string
            type:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - type
          - url
        verification:
          "$ref": "#/components/schemas/verification"
      required:
      - sha
      - url
      - node_id
      - tagger
      - object
      - tag
      - message
    git-tree:
      title: Git Tree
      description: The hierarchy between files in a Git repository.
      type: object
      properties:
        sha:
          type: string
        url:
          type: string
          format: uri
        truncated:
          type: boolean
        tree:
          description: Objects specifying a tree structure
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                example: test/file.rb
              mode:
                type: string
                example: '040000'
              type:
                type: string
                example: tree
              sha:
                type: string
                example: 23f6827669e43831def8a7ad935069c8bd418261
              size:
                type: integer
                example: 12
              url:
                type: string
                example: https://api.github.com/repos/owner-482f3203ecf01f67e9deb18e/BBB_Private_Repo/git/blobs/23f6827669e43831def8a7ad935069c8bd418261
          example:
          - path: file.rb
            mode: '100644'
            type: blob
            size: 30
            sha: 44b4fc6d56897b048c772eb4087f854f46256132
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
            properties:
              path:
                type: string
              mode:
                type: string
              type:
                type: string
              size:
                type: integer
              sha:
                type: string
              url:
                type: string
            required:
            - path
            - mode
            - type
            - sha
            - url
            - size
      required:
      - sha
      - url
      - tree
      - truncated
    hook-response:
      title: Hook Response
      type: object
      properties:
        code:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
      - code
      - status
      - message
    hook:
      title: Webhook
      description: Webhooks for repositories.
      type: object
      properties:
        type:
          type: string
        id:
          description: Unique identifier of the webhook.
          example: 42
          type: integer
        name:
          description: The name of a valid service, use 'web' for a webhook.
          example: web
          type: string
        active:
          description: Determines whether the hook is actually triggered on pushes.
          type: boolean
          example: true
        events:
          description: 'Determines what events the hook is triggered for. Default:
            [''push''].'
          type: array
          items:
            type: string
          example:
          - push
          - pull_request
        config:
          type: object
          properties:
            email:
              type: string
              example: '"foo@bar.com"'
            password:
              type: string
              example: '"foo"'
            room:
              type: string
              example: '"roomer"'
            subdomain:
              type: string
              example: '"foo"'
            url:
              "$ref": "#/components/schemas/webhook-config-url"
            insecure_ssl:
              "$ref": "#/components/schemas/webhook-config-insecure-ssl"
            content_type:
              "$ref": "#/components/schemas/webhook-config-content-type"
            digest:
              type: string
              example: '"sha256"'
            secret:
              "$ref": "#/components/schemas/webhook-config-secret"
            token:
              type: string
              example: '"abc"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1
        test_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries
        last_response:
          "$ref": "#/components/schemas/hook-response"
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
      - last_response
      - test_url
    import:
      title: Import
      description: A repository import from an external source.
      type: object
      properties:
        vcs:
          type: string
          nullable: true
        use_lfs:
          type: boolean
        vcs_url:
          description: The URL of the originating repository.
          type: string
        svc_root:
          type: string
        tfvc_project:
          type: string
        status:
          type: string
          enum:
          - auth
          - error
          - none
          - detecting
          - choose
          - auth_failed
          - importing
          - mapping
          - waiting_to_push
          - pushing
          - complete
          - setup
          - unknown
          - detection_found_multiple
          - detection_found_nothing
          - detection_needs_auth
        status_text:
          type: string
          nullable: true
        failed_step:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        import_percent:
          type: integer
          nullable: true
        commit_count:
          type: integer
          nullable: true
        push_percent:
          type: integer
          nullable: true
        has_large_files:
          type: boolean
        large_files_size:
          type: integer
        large_files_count:
          type: integer
        project_choices:
          type: array
          items:
            type: object
            properties:
              vcs:
                type: string
              tfvc_project:
                type: string
              human_name:
                type: string
        message:
          type: string
        authors_count:
          type: integer
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        authors_url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        svn_root:
          type: string
      required:
      - vcs
      - vcs_url
      - status
      - url
      - repository_url
      - html_url
      - authors_url
    porter-author:
      title: Porter Author
      description: Porter Author
      type: object
      properties:
        id:
          type: integer
        remote_id:
          type: string
        remote_name:
          type: string
        email:
          type: string
        name:
          type: string
        url:
          type: string
          format: uri
        import_url:
          type: string
          format: uri
      required:
      - id
      - remote_id
      - remote_name
      - email
      - name
      - url
      - import_url
    porter-large-file:
      title: Porter Large File
      description: Porter Large File
      type: object
      properties:
        ref_name:
          type: string
        path:
          type: string
        oid:
          type: string
        size:
          type: integer
      required:
      - oid
      - path
      - ref_name
      - size
    nullable-issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      type: object
      properties:
        id:
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        state_reason:
          description: The reason for the current state
          example: not_planned
          type: string
          nullable: true
          enum:
          - completed
          - reopened
          - not_planned
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try
            and create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        labels:
          description: Labels to associate with this issue; pass one or more label
            names to replace the set of labels on this issue; send an empty array
            to clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
          - bug
          - registration
          type: array
          items:
            oneOf:
            - type: string
            - type: object
              properties:
                id:
                  type: integer
                  format: int64
                node_id:
                  type: string
                url:
                  type: string
                  format: uri
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                color:
                  type: string
                  nullable: true
                default:
                  type: boolean
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/repository"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        author_association:
          "$ref": "#/components/schemas/author-association"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
      nullable: true
    issue-event-label:
      title: Issue Event Label
      description: Issue Event Label
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      required:
      - name
      - color
    issue-event-dismissed-review:
      title: Issue Event Dismissed Review
      type: object
      properties:
        state:
          type: string
        review_id:
          type: integer
        dismissal_message:
          type: string
          nullable: true
        dismissal_commit_id:
          type: string
          nullable: true
      required:
      - state
      - review_id
      - dismissal_message
    issue-event-milestone:
      title: Issue Event Milestone
      description: Issue Event Milestone
      type: object
      properties:
        title:
          type: string
      required:
      - title
    issue-event-project-card:
      title: Issue Event Project Card
      description: Issue Event Project Card
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        project_url:
          type: string
          format: uri
        project_id:
          type: integer
        column_name:
          type: string
        previous_column_name:
          type: string
      required:
      - url
      - id
      - project_url
      - project_id
      - column_name
    issue-event-rename:
      title: Issue Event Rename
      description: Issue Event Rename
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
    issue-event:
      title: Issue Event
      description: Issue Event
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDEwOklzc3VlRXZlbnQx
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          "$ref": "#/components/schemas/nullable-simple-user"
        event:
          type: string
          example: closed
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        commit_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue:
          "$ref": "#/components/schemas/nullable-issue"
        label:
          "$ref": "#/components/schemas/issue-event-label"
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assigner:
          "$ref": "#/components/schemas/nullable-simple-user"
        review_requester:
          "$ref": "#/components/schemas/nullable-simple-user"
        requested_reviewer:
          "$ref": "#/components/schemas/nullable-simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        dismissed_review:
          "$ref": "#/components/schemas/issue-event-dismissed-review"
        milestone:
          "$ref": "#/components/schemas/issue-event-milestone"
        project_card:
          "$ref": "#/components/schemas/issue-event-project-card"
        rename:
          "$ref": "#/components/schemas/issue-event-rename"
        author_association:
          "$ref": "#/components/schemas/author-association"
        lock_reason:
          type: string
          nullable: true
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
    labeled-issue-event:
      title: Labeled Issue Event
      description: Labeled Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
          required:
          - name
          - color
      required:
      - label
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    unlabeled-issue-event:
      title: Unlabeled Issue Event
      description: Unlabeled Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
          required:
          - name
          - color
      required:
      - label
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    assigned-issue-event:
      title: Assigned Issue Event
      description: Assigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
        assigner:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
      - assigner
    unassigned-issue-event:
      title: Unassigned Issue Event
      description: Unassigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
        assigner:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
      - assigner
    milestoned-issue-event:
      title: Milestoned Issue Event
      description: Milestoned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        milestone:
          type: object
          properties:
            title:
              type: string
          required:
          - title
      required:
      - milestone
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    demilestoned-issue-event:
      title: Demilestoned Issue Event
      description: Demilestoned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        milestone:
          type: object
          properties:
            title:
              type: string
          required:
          - title
      required:
      - milestone
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    renamed-issue-event:
      title: Renamed Issue Event
      description: Renamed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        rename:
          type: object
          properties:
            from:
              type: string
            to:
              type: string
          required:
          - from
          - to
      required:
      - rename
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    review-requested-issue-event:
      title: Review Requested Issue Event
      description: Review Requested Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        review_requester:
          "$ref": "#/components/schemas/simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        requested_reviewer:
          "$ref": "#/components/schemas/simple-user"
      required:
      - review_requester
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    review-request-removed-issue-event:
      title: Review Request Removed Issue Event
      description: Review Request Removed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        review_requester:
          "$ref": "#/components/schemas/simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        requested_reviewer:
          "$ref": "#/components/schemas/simple-user"
      required:
      - review_requester
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    review-dismissed-issue-event:
      title: Review Dismissed Issue Event
      description: Review Dismissed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        dismissed_review:
          type: object
          properties:
            state:
              type: string
            review_id:
              type: integer
            dismissal_message:
              nullable: true
              type: string
            dismissal_commit_id:
              type: string
          required:
          - state
          - review_id
          - dismissal_message
      required:
      - dismissed_review
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    locked-issue-event:
      title: Locked Issue Event
      description: Locked Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        lock_reason:
          type: string
          example: '"off-topic"'
          nullable: true
      required:
      - lock_reason
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    added-to-project-issue-event:
      title: Added to Project Issue Event
      description: Added to Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    moved-column-in-project-issue-event:
      title: Moved Column in Project Issue Event
      description: Moved Column in Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    removed-from-project-issue-event:
      title: Removed from Project Issue Event
      description: Removed from Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    converted-note-to-issue-issue-event:
      title: Converted Note to Issue Issue Event
      description: Converted Note to Issue Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    issue-event-for-issue:
      title: Issue Event for Issue
      description: Issue Event for Issue
      anyOf:
      - "$ref": "#/components/schemas/labeled-issue-event"
      - "$ref": "#/components/schemas/unlabeled-issue-event"
      - "$ref": "#/components/schemas/assigned-issue-event"
      - "$ref": "#/components/schemas/unassigned-issue-event"
      - "$ref": "#/components/schemas/milestoned-issue-event"
      - "$ref": "#/components/schemas/demilestoned-issue-event"
      - "$ref": "#/components/schemas/renamed-issue-event"
      - "$ref": "#/components/schemas/review-requested-issue-event"
      - "$ref": "#/components/schemas/review-request-removed-issue-event"
      - "$ref": "#/components/schemas/review-dismissed-issue-event"
      - "$ref": "#/components/schemas/locked-issue-event"
      - "$ref": "#/components/schemas/added-to-project-issue-event"
      - "$ref": "#/components/schemas/moved-column-in-project-issue-event"
      - "$ref": "#/components/schemas/removed-from-project-issue-event"
      - "$ref": "#/components/schemas/converted-note-to-issue-issue-event"
    label:
      title: Label
      description: Color-coded labels help you categorize and filter your issues (just
        like labels in Gmail).
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 208045946
        node_id:
          type: string
          example: MDU6TGFiZWwyMDgwNDU5NDY=
        url:
          description: URL for the label
          example: https://api.github.com/repositories/42/labels/bug
          type: string
          format: uri
        name:
          description: The name of the label.
          example: bug
          type: string
        description:
          type: string
          example: Something isn't working
          nullable: true
        color:
          description: '6-character hex code, without the leading #, identifying the
            color'
          example: FFFFFF
          type: string
        default:
          type: boolean
          example: true
      required:
      - id
      - node_id
      - url
      - name
      - description
      - color
      - default
    timeline-comment-event:
      title: Timeline Comment Event
      description: Timeline Comment Event
      type: object
      properties:
        event:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          "$ref": "#/components/schemas/author-association"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - event
      - actor
      - id
      - node_id
      - html_url
      - issue_url
      - author_association
      - user
      - url
      - created_at
      - updated_at
    timeline-cross-referenced-event:
      title: Timeline Cross Referenced Event
      description: Timeline Cross Referenced Event
      type: object
      properties:
        event:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        source:
          type: object
          properties:
            type:
              type: string
            issue:
              "$ref": "#/components/schemas/issue"
      required:
      - event
      - created_at
      - updated_at
      - source
    timeline-committed-event:
      title: Timeline Committed Event
      description: Timeline Committed Event
      type: object
      properties:
        event:
          type: string
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        author:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        committer:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        tree:
          type: object
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                type: string
                format: uri
              html_url:
                type: string
                format: uri
            required:
            - sha
            - url
            - html_url
        verification:
          type: object
          properties:
            verified:
              type: boolean
            reason:
              type: string
            signature:
              type: string
              nullable: true
            payload:
              type: string
              nullable: true
          required:
          - verified
          - reason
          - signature
          - payload
        html_url:
          type: string
          format: uri
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - tree
      - message
      - parents
      - verification
    timeline-reviewed-event:
      title: Timeline Reviewed Event
      description: Timeline Reviewed Event
      type: object
      properties:
        event:
          type: string
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          nullable: true
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
          required:
          - html
          - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          "$ref": "#/components/schemas/author-association"
      required:
      - event
      - id
      - node_id
      - user
      - body
      - state
      - commit_id
      - html_url
      - pull_request_url
      - _links
      - author_association
    pull-request-review-comment:
      title: Pull Request Review Comment
      description: Pull Request Review Comments are comments on a portion of the Pull
        Request's diff.
      type: object
      properties:
        url:
          description: URL for the pull request review comment
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          type: string
        pull_request_review_id:
          description: The ID of the pull request review to which the comment belongs.
          example: 42
          type: integer
          nullable: true
        id:
          description: The ID of the pull request review comment.
          example: 1
          type: integer
        node_id:
          description: The node ID of the pull request review comment.
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          description: The diff of the line that the comment refers to.
          type: string
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path:
          description: The relative path of the file to which the comment applies.
          example: config/database.yaml
          type: string
        position:
          description: The line index in the diff to which the comment applies. This
            field is deprecated; use `line` instead.
          example: 1
          type: integer
        original_position:
          description: The index of the original line in the diff to which the comment
            applies. This field is deprecated; use `original_line` instead.
          example: 4
          type: integer
        commit_id:
          description: The SHA of the commit to which the comment applies.
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        original_commit_id:
          description: The SHA of the original commit to which the comment applies.
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        in_reply_to_id:
          description: The comment ID to reply to.
          example: 8
          type: integer
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          description: The text of the comment.
          example: We should probably include a check for null values here.
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          description: HTML URL for the pull request review comment.
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          description: URL for the pull request that the review comment belongs to.
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          "$ref": "#/components/schemas/author-association"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              required:
              - href
            html:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1
              required:
              - href
          required:
          - self
          - html
          - pull_request
        start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        original_start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        side:
          description: The side of the diff to which the comment applies. The side
            of the last line of the range for a multi-line comment
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        subject_type:
          description: The level at which the comment is targeted, can be a diff line
            or a file.
          type: string
          enum:
          - line
          - file
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
        body_html:
          type: string
          example: '"<p>comment body</p>"'
        body_text:
          type: string
          example: '"comment body"'
      required:
      - url
      - id
      - node_id
      - pull_request_review_id
      - diff_hunk
      - path
      - commit_id
      - original_commit_id
      - user
      - body
      - created_at
      - updated_at
      - html_url
      - pull_request_url
      - author_association
      - _links
    timeline-line-commented-event:
      title: Timeline Line Commented Event
      description: Timeline Line Commented Event
      type: object
      properties:
        event:
          type: string
        node_id:
          type: string
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-review-comment"
    timeline-commit-commented-event:
      title: Timeline Commit Commented Event
      description: Timeline Commit Commented Event
      type: object
      properties:
        event:
          type: string
        node_id:
          type: string
        commit_id:
          type: string
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/commit-comment"
    timeline-assigned-issue-event:
      title: Timeline Assigned Issue Event
      description: Timeline Assigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
    timeline-unassigned-issue-event:
      title: Timeline Unassigned Issue Event
      description: Timeline Unassigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
    state-change-issue-event:
      title: State Change Issue Event
      description: State Change Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        state_reason:
          type: string
          nullable: true
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    timeline-issue-events:
      title: Timeline Event
      description: Timeline Event
      type: object
      anyOf:
      - "$ref": "#/components/schemas/labeled-issue-event"
      - "$ref": "#/components/schemas/unlabeled-issue-event"
      - "$ref": "#/components/schemas/milestoned-issue-event"
      - "$ref": "#/components/schemas/demilestoned-issue-event"
      - "$ref": "#/components/schemas/renamed-issue-event"
      - "$ref": "#/components/schemas/review-requested-issue-event"
      - "$ref": "#/components/schemas/review-request-removed-issue-event"
      - "$ref": "#/components/schemas/review-dismissed-issue-event"
      - "$ref": "#/components/schemas/locked-issue-event"
      - "$ref": "#/components/schemas/added-to-project-issue-event"
      - "$ref": "#/components/schemas/moved-column-in-project-issue-event"
      - "$ref": "#/components/schemas/removed-from-project-issue-event"
      - "$ref": "#/components/schemas/converted-note-to-issue-issue-event"
      - "$ref": "#/components/schemas/timeline-comment-event"
      - "$ref": "#/components/schemas/timeline-cross-referenced-event"
      - "$ref": "#/components/schemas/timeline-committed-event"
      - "$ref": "#/components/schemas/timeline-reviewed-event"
      - "$ref": "#/components/schemas/timeline-line-commented-event"
      - "$ref": "#/components/schemas/timeline-commit-commented-event"
      - "$ref": "#/components/schemas/timeline-assigned-issue-event"
      - "$ref": "#/components/schemas/timeline-unassigned-issue-event"
      - "$ref": "#/components/schemas/state-change-issue-event"
    deploy-key:
      title: Deploy Key
      description: An SSH key granting access to a single repository.
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        url:
          type: string
        title:
          type: string
        verified:
          type: boolean
        created_at:
          type: string
        read_only:
          type: boolean
        added_by:
          type: string
          nullable: true
        last_used:
          type: string
          nullable: true
      required:
      - id
      - key
      - url
      - title
      - verified
      - created_at
      - read_only
    language:
      title: Language
      description: Language
      type: object
      additionalProperties:
        type: integer
    license-content:
      title: License Content
      description: License Content
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          nullable: true
        git_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        type:
          type: string
        content:
          type: string
        encoding:
          type: string
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
      - license
    merged-upstream:
      title: Merged upstream
      description: Results of a successful merge upstream request
      type: object
      properties:
        message:
          type: string
        merge_type:
          type: string
          enum:
          - merge
          - fast-forward
          - none
        base_branch:
          type: string
    milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
    pages-source-hash:
      title: Pages Source Hash
      type: object
      properties:
        branch:
          type: string
        path:
          type: string
      required:
      - branch
      - path
    pages-https-certificate:
      title: Pages Https Certificate
      type: object
      properties:
        state:
          type: string
          enum:
          - new
          - authorization_created
          - authorization_pending
          - authorized
          - authorization_revoked
          - issued
          - uploaded
          - approved
          - errored
          - bad_authz
          - destroy_pending
          - dns_changed
          example: approved
        description:
          type: string
          example: Certificate is approved
        domains:
          type: array
          items:
            type: string
          description: Array of the domain set and its alternate name (if it is configured)
          example:
          - example.com
          - www.example.com
        expires_at:
          type: string
          format: date
      required:
      - state
      - description
      - domains
    page:
      title: GitHub Pages
      description: The configuration for GitHub Pages for a repository.
      type: object
      properties:
        url:
          type: string
          description: The API address for accessing this Page resource.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages
        status:
          type: string
          description: The status of the most recent build of the Page.
          example: built
          enum:
          - built
          - building
          - errored
          nullable: true
        cname:
          description: The Pages site's custom domain
          example: example.com
          type: string
          nullable: true
        protected_domain_state:
          type: string
          description: The state if the domain is verified
          example: pending
          nullable: true
          enum:
          - pending
          - verified
          - unverified
        pending_domain_unverified_at:
          type: string
          description: The timestamp when a pending domain becomes unverified.
          nullable: true
          format: date-time
        custom_404:
          type: boolean
          description: Whether the Page has a custom 404 page.
          example: false
          default: false
        html_url:
          type: string
          description: The web address the Page can be accessed from.
          format: uri
          example: https://example.com
        build_type:
          type: string
          description: The process in which the Page will be built.
          example: legacy
          nullable: true
          enum:
          - legacy
          - workflow
        source:
          "$ref": "#/components/schemas/pages-source-hash"
        public:
          type: boolean
          description: Whether the GitHub Pages site is publicly visible. If set to
            `true`, the site is accessible to anyone on the internet. If set to `false`,
            the site will only be accessible to users who have at least `read` access
            to the repository that published the site.
          example: true
        https_certificate:
          "$ref": "#/components/schemas/pages-https-certificate"
        https_enforced:
          type: boolean
          description: Whether https is enabled on the domain
          example: true
      required:
      - url
      - status
      - cname
      - custom_404
      - public
    page-build:
      title: Page Build
      description: Page Build
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
        error:
          type: object
          properties:
            message:
              type: string
              nullable: true
          required:
          - message
        pusher:
          "$ref": "#/components/schemas/nullable-simple-user"
        commit:
          type: string
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - url
      - status
      - error
      - pusher
      - commit
      - duration
      - created_at
      - updated_at
    page-build-status:
      title: Page Build Status
      description: Page Build Status
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/builds/latest
        status:
          type: string
          example: queued
      required:
      - url
      - status
    page-deployment:
      title: GitHub Pages
      description: The GitHub Pages deployment status.
      type: object
      properties:
        status_url:
          type: string
          description: The URI to monitor GitHub Pages deployment status.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/deployments/4fd754f7e594640989b406850d0bc8f06a121251/status
        page_url:
          type: string
          description: The URI to the deployed GitHub Pages.
          format: uri
          example: hello-world.github.io
        preview_url:
          type: string
          description: The URI to the deployed GitHub Pages preview.
          format: uri
          example: monalisa-1231a2312sa32-23sda74.drafts.github.io
      required:
      - status_url
      - page_url
    pages-health-check:
      title: Pages Health Check Status
      description: Pages Health Check Status
      type: object
      properties:
        domain:
          type: object
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
        alt_domain:
          type: object
          nullable: true
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
    pull-request:
      type: object
      title: Pull Request
      description: Pull requests let you tell others about changes you've pushed to
        a repository on GitHub. Once a pull request is sent, interested parties can
        review the set of changes, discuss potential modifications, and even push
        follow-up commits if necessary.
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          description: Number uniquely identifying the pull request within its repository.
          example: 42
          type: integer
        state:
          description: State of this Pull Request. Either `open` or `closed`.
          enum:
          - open
          - closed
          example: open
          type: string
        locked:
          type: boolean
          example: true
        title:
          description: The title of the pull request.
          example: Amazing new feature
          type: string
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
                nullable: true
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_reviewers:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_teams:
          type: array
          items:
            "$ref": "#/components/schemas/team-simple"
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              type: object
              nullable: true
              properties:
                archive_url:
                  type: string
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  type: string
                  format: uri
                deployments_url:
                  type: string
                  format: uri
                description:
                  type: string
                  nullable: true
                downloads_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                  format: uri
                fork:
                  type: boolean
                forks_url:
                  type: string
                  format: uri
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                hooks_url:
                  type: string
                  format: uri
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                languages_url:
                  type: string
                  format: uri
                merges_url:
                  type: string
                  format: uri
                milestones_url:
                  type: string
                name:
                  type: string
                notifications_url:
                  type: string
                owner:
                  type: object
                  properties:
                    avatar_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      type: string
                      nullable: true
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    node_id:
                      type: string
                    login:
                      type: string
                    organizations_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    url:
                      type: string
                      format: uri
                  required:
                  - avatar_url
                  - events_url
                  - followers_url
                  - following_url
                  - gists_url
                  - gravatar_id
                  - html_url
                  - id
                  - node_id
                  - login
                  - organizations_url
                  - received_events_url
                  - repos_url
                  - site_admin
                  - starred_url
                  - subscriptions_url
                  - type
                  - url
                private:
                  type: boolean
                pulls_url:
                  type: string
                releases_url:
                  type: string
                stargazers_url:
                  type: string
                  format: uri
                statuses_url:
                  type: string
                subscribers_url:
                  type: string
                  format: uri
                subscription_url:
                  type: string
                  format: uri
                tags_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                trees_url:
                  type: string
                url:
                  type: string
                  format: uri
                clone_url:
                  type: string
                default_branch:
                  type: string
                forks:
                  type: integer
                forks_count:
                  type: integer
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                has_pages:
                  type: boolean
                has_discussions:
                  type: boolean
                homepage:
                  type: string
                  format: uri
                  nullable: true
                language:
                  type: string
                  nullable: true
                master_branch:
                  type: string
                archived:
                  type: boolean
                disabled:
                  type: boolean
                visibility:
                  description: 'The repository visibility: public, private, or internal.'
                  type: string
                mirror_url:
                  type: string
                  format: uri
                  nullable: true
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                permissions:
                  type: object
                  properties:
                    admin:
                      type: boolean
                    maintain:
                      type: boolean
                    push:
                      type: boolean
                    triage:
                      type: boolean
                    pull:
                      type: boolean
                  required:
                  - admin
                  - pull
                  - push
                temp_clone_token:
                  type: string
                allow_merge_commit:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                license:
                  type: object
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                      format: uri
                      nullable: true
                    spdx_id:
                      type: string
                      nullable: true
                    node_id:
                      type: string
                  required:
                  - key
                  - name
                  - url
                  - spdx_id
                  - node_id
                  nullable: true
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                svn_url:
                  type: string
                  format: uri
                topics:
                  type: array
                  items:
                    type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                allow_forking:
                  type: boolean
                is_template:
                  type: boolean
                web_commit_signoff_required:
                  type: boolean
              required:
              - archive_url
              - assignees_url
              - blobs_url
              - branches_url
              - collaborators_url
              - comments_url
              - commits_url
              - compare_url
              - contents_url
              - contributors_url
              - deployments_url
              - description
              - downloads_url
              - events_url
              - fork
              - forks_url
              - full_name
              - git_commits_url
              - git_refs_url
              - git_tags_url
              - hooks_url
              - html_url
              - id
              - node_id
              - issue_comment_url
              - issue_events_url
              - issues_url
              - keys_url
              - labels_url
              - languages_url
              - merges_url
              - milestones_url
              - name
              - notifications_url
              - owner
              - private
              - pulls_url
              - releases_url
              - stargazers_url
              - statuses_url
              - subscribers_url
              - subscription_url
              - tags_url
              - teams_url
              - trees_url
              - url
              - clone_url
              - default_branch
              - forks
              - forks_count
              - git_url
              - has_downloads
              - has_issues
              - has_projects
              - has_wiki
              - has_pages
              - has_discussions
              - homepage
              - language
              - archived
              - disabled
              - mirror_url
              - open_issues
              - open_issues_count
              - license
              - pushed_at
              - size
              - ssh_url
              - stargazers_count
              - svn_url
              - watchers
              - watchers_count
              - created_at
              - updated_at
            sha:
              type: string
            user:
              type: object
              properties:
                avatar_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                followers_url:
                  type: string
                  format: uri
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                  nullable: true
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                login:
                  type: string
                organizations_url:
                  type: string
                  format: uri
                received_events_url:
                  type: string
                  format: uri
                repos_url:
                  type: string
                  format: uri
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                  format: uri
                type:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - avatar_url
              - events_url
              - followers_url
              - following_url
              - gists_url
              - gravatar_id
              - html_url
              - id
              - node_id
              - login
              - organizations_url
              - received_events_url
              - repos_url
              - site_admin
              - starred_url
              - subscriptions_url
              - type
              - url
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              type: object
              properties:
                archive_url:
                  type: string
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  type: string
                  format: uri
                deployments_url:
                  type: string
                  format: uri
                description:
                  type: string
                  nullable: true
                downloads_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                  format: uri
                fork:
                  type: boolean
                forks_url:
                  type: string
                  format: uri
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                hooks_url:
                  type: string
                  format: uri
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                is_template:
                  type: boolean
                node_id:
                  type: string
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                languages_url:
                  type: string
                  format: uri
                merges_url:
                  type: string
                  format: uri
                milestones_url:
                  type: string
                name:
                  type: string
                notifications_url:
                  type: string
                owner:
                  type: object
                  properties:
                    avatar_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      type: string
                      nullable: true
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    node_id:
                      type: string
                    login:
                      type: string
                    organizations_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    url:
                      type: string
                      format: uri
                  required:
                  - avatar_url
                  - events_url
                  - followers_url
                  - following_url
                  - gists_url
                  - gravatar_id
                  - html_url
                  - id
                  - node_id
                  - login
                  - organizations_url
                  - received_events_url
                  - repos_url
                  - site_admin
                  - starred_url
                  - subscriptions_url
                  - type
                  - url
                private:
                  type: boolean
                pulls_url:
                  type: string
                releases_url:
                  type: string
                stargazers_url:
                  type: string
                  format: uri
                statuses_url:
                  type: string
                subscribers_url:
                  type: string
                  format: uri
                subscription_url:
                  type: string
                  format: uri
                tags_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                trees_url:
                  type: string
                url:
                  type: string
                  format: uri
                clone_url:
                  type: string
                default_branch:
                  type: string
                forks:
                  type: integer
                forks_count:
                  type: integer
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                has_pages:
                  type: boolean
                has_discussions:
                  type: boolean
                homepage:
                  type: string
                  format: uri
                  nullable: true
                language:
                  type: string
                  nullable: true
                master_branch:
                  type: string
                archived:
                  type: boolean
                disabled:
                  type: boolean
                visibility:
                  description: 'The repository visibility: public, private, or internal.'
                  type: string
                mirror_url:
                  type: string
                  format: uri
                  nullable: true
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                permissions:
                  type: object
                  properties:
                    admin:
                      type: boolean
                    maintain:
                      type: boolean
                    push:
                      type: boolean
                    triage:
                      type: boolean
                    pull:
                      type: boolean
                  required:
                  - admin
                  - pull
                  - push
                temp_clone_token:
                  type: string
                allow_merge_commit:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                license:
                  "$ref": "#/components/schemas/nullable-license-simple"
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                svn_url:
                  type: string
                  format: uri
                topics:
                  type: array
                  items:
                    type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                allow_forking:
                  type: boolean
                web_commit_signoff_required:
                  type: boolean
              required:
              - archive_url
              - assignees_url
              - blobs_url
              - branches_url
              - collaborators_url
              - comments_url
              - commits_url
              - compare_url
              - contents_url
              - contributors_url
              - deployments_url
              - description
              - downloads_url
              - events_url
              - fork
              - forks_url
              - full_name
              - git_commits_url
              - git_refs_url
              - git_tags_url
              - hooks_url
              - html_url
              - id
              - node_id
              - issue_comment_url
              - issue_events_url
              - issues_url
              - keys_url
              - labels_url
              - languages_url
              - merges_url
              - milestones_url
              - name
              - notifications_url
              - owner
              - private
              - pulls_url
              - releases_url
              - stargazers_url
              - statuses_url
              - subscribers_url
              - subscription_url
              - tags_url
              - teams_url
              - trees_url
              - url
              - clone_url
              - default_branch
              - forks
              - forks_count
              - git_url
              - has_downloads
              - has_issues
              - has_projects
              - has_wiki
              - has_pages
              - has_discussions
              - homepage
              - language
              - archived
              - disabled
              - mirror_url
              - open_issues
              - open_issues_count
              - license
              - pushed_at
              - size
              - ssh_url
              - stargazers_count
              - svn_url
              - watchers
              - watchers_count
              - created_at
              - updated_at
            sha:
              type: string
            user:
              type: object
              properties:
                avatar_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                followers_url:
                  type: string
                  format: uri
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                  nullable: true
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                login:
                  type: string
                organizations_url:
                  type: string
                  format: uri
                received_events_url:
                  type: string
                  format: uri
                repos_url:
                  type: string
                  format: uri
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                  format: uri
                type:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - avatar_url
              - events_url
              - followers_url
              - following_url
              - gists_url
              - gravatar_id
              - html_url
              - id
              - node_id
              - login
              - organizations_url
              - received_events_url
              - repos_url
              - site_admin
              - starred_url
              - subscriptions_url
              - type
              - url
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              "$ref": "#/components/schemas/link"
            commits:
              "$ref": "#/components/schemas/link"
            statuses:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            issue:
              "$ref": "#/components/schemas/link"
            review_comments:
              "$ref": "#/components/schemas/link"
            review_comment:
              "$ref": "#/components/schemas/link"
            self:
              "$ref": "#/components/schemas/link"
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          "$ref": "#/components/schemas/author-association"
        auto_merge:
          "$ref": "#/components/schemas/auto-merge"
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
        merged:
          type: boolean
        mergeable:
          type: boolean
          example: true
          nullable: true
        rebaseable:
          type: boolean
          example: true
          nullable: true
        mergeable_state:
          type: string
          example: clean
        merged_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        comments:
          type: integer
          example: 10
        review_comments:
          type: integer
          example: 0
        maintainer_can_modify:
          description: Indicates whether maintainers can modify the pull request.
          example: true
          type: boolean
        commits:
          type: integer
          example: 3
        additions:
          type: integer
          example: 100
        deletions:
          type: integer
          example: 3
        changed_files:
          type: integer
          example: 5
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
      - additions
      - changed_files
      - comments
      - commits
      - deletions
      - mergeable
      - mergeable_state
      - merged
      - maintainer_can_modify
      - merged_by
      - review_comments
    pull-request-merge-result:
      title: Pull Request Merge Result
      description: Pull Request Merge Result
      type: object
      properties:
        sha:
          type: string
        merged:
          type: boolean
        message:
          type: string
      required:
      - merged
      - message
      - sha
    pull-request-review-request:
      title: Pull Request Review Request
      description: Pull Request Review Request
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
        teams:
          type: array
          items:
            "$ref": "#/components/schemas/team"
      required:
      - users
      - teams
    pull-request-review:
      title: Pull Request Review
      description: Pull Request Reviews are reviews on pull requests.
      type: object
      properties:
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
          required:
          - html
          - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review. If the commit object was garbage
            collected or forcibly deleted, then it no longer exists in Git and this
            value will be `null`.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
          nullable: true
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          "$ref": "#/components/schemas/author-association"
      required:
      - id
      - node_id
      - user
      - body
      - state
      - commit_id
      - html_url
      - pull_request_url
      - _links
      - author_association
    review-comment:
      title: Legacy Review Comment
      description: Legacy Review Comment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id:
          type: integer
          example: 42
          nullable: true
        id:
          type: integer
          example: 10
        node_id:
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          type: string
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path:
          type: string
          example: file1.txt
        position:
          type: integer
          example: 1
          nullable: true
        original_position:
          type: integer
          example: 4
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id:
          type: string
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id:
          type: integer
          example: 8
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          type: string
          example: Great stuff
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          "$ref": "#/components/schemas/author-association"
        _links:
          type: object
          properties:
            self:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            pull_request:
              "$ref": "#/components/schemas/link"
          required:
          - self
          - html
          - pull_request
        body_text:
          type: string
        body_html:
          type: string
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
        side:
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The original line of the blob to which the comment applies.
            The last line of the range for a multi-line comment
          example: 2
          type: integer
        start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
        original_start_line:
          description: The original first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
      required:
      - id
      - node_id
      - url
      - body
      - diff_hunk
      - path
      - position
      - original_position
      - commit_id
      - original_commit_id
      - user
      - pull_request_review_id
      - html_url
      - pull_request_url
      - _links
      - author_association
      - created_at
      - updated_at
    release-asset:
      title: Release Asset
      description: Data related to a release.
      type: object
      properties:
        url:
          type: string
          format: uri
        browser_download_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          description: The file name of the asset.
          type: string
          example: Team Environment
        label:
          type: string
          nullable: true
        state:
          description: State of the release asset.
          type: string
          enum:
          - uploaded
          - open
        content_type:
          type: string
        size:
          type: integer
        download_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        uploader:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - id
      - name
      - content_type
      - size
      - state
      - url
      - node_id
      - download_count
      - label
      - uploader
      - browser_download_url
      - created_at
      - updated_at
    release:
      title: Release
      description: A release.
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        assets_url:
          type: string
          format: uri
        upload_url:
          type: string
        tarball_url:
          type: string
          format: uri
          nullable: true
        zipball_url:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        tag_name:
          description: The name of the tag.
          example: v1.0.0
          type: string
        target_commitish:
          description: Specifies the commitish value that determines where the Git
            tag is created from.
          example: master
          type: string
        name:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        draft:
          description: true to create a draft (unpublished) release, false to create
            a published one.
          example: false
          type: boolean
        prerelease:
          description: Whether to identify the release as a prerelease or a full release.
          example: false
          type: boolean
        created_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
          nullable: true
        author:
          "$ref": "#/components/schemas/simple-user"
        assets:
          type: array
          items:
            "$ref": "#/components/schemas/release-asset"
        body_html:
          type: string
        body_text:
          type: string
        mentions_count:
          type: integer
        discussion_url:
          description: The URL of the release discussion.
          type: string
          format: uri
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assets_url
      - upload_url
      - tarball_url
      - zipball_url
      - created_at
      - published_at
      - draft
      - id
      - node_id
      - author
      - html_url
      - name
      - prerelease
      - tag_name
      - target_commitish
      - assets
      - url
    release-notes-content:
      title: Generated Release Notes Content
      description: Generated name and body describing a release
      type: object
      properties:
        name:
          description: The generated name of the release
          type: string
          example: Release v1.0.0 is now available!
        body:
          description: The generated body describing the contents of the release supporting
            markdown formatting
          type: string
      required:
      - name
      - body
    secret-scanning-alert:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/nullable-alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        locations_url:
          type: string
          format: uri
          description: The REST API URL of the code locations for this alert.
        state:
          "$ref": "#/components/schemas/secret-scanning-alert-state"
        resolution:
          "$ref": "#/components/schemas/secret-scanning-alert-resolution"
        resolved_at:
          type: string
          format: date-time
          description: 'The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolved_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        resolution_comment:
          type: string
          description: An optional comment to resolve an alert.
          nullable: true
        secret_type:
          type: string
          description: The type of secret that secret scanning detected.
        secret_type_display_name:
          type: string
          description: |-
            User-friendly name for the detected secret, matching the `secret_type`.
            For a list of built-in patterns, see "[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)."
        secret:
          type: string
          description: The secret that was detected.
        push_protection_bypassed:
          type: boolean
          description: Whether push protection was bypassed for the detected secret.
          nullable: true
        push_protection_bypassed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        push_protection_bypassed_at:
          type: string
          format: date-time
          description: 'The time that push protection was bypassed in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
    secret-scanning-alert-resolution-comment:
      description: An optional comment when closing an alert. Cannot be updated or
        deleted. Must be `null` when changing `state` to `open`.
      type: string
      nullable: true
    secret-scanning-location-commit:
      description: Represents a 'commit' secret scanning location type. This location
        type shows that a secret was detected inside a commit to a repository.
      type: object
      properties:
        path:
          type: string
          description: The file path in the repository
          example: "/example/secrets.txt"
        start_line:
          type: number
          description: Line number at which the secret starts in the file
        end_line:
          type: number
          description: Line number at which the secret ends in the file
        start_column:
          type: number
          description: The column at which the secret starts within the start line
            when the file is interpreted as 8BIT ASCII
        end_column:
          type: number
          description: The column at which the secret ends within the end line when
            the file is interpreted as 8BIT ASCII
        blob_sha:
          type: string
          description: SHA-1 hash ID of the associated blob
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        blob_url:
          type: string
          description: The API URL to get the associated blob resource
        commit_sha:
          type: string
          description: SHA-1 hash ID of the associated commit
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        commit_url:
          type: string
          description: The API URL to get the associated commit resource
      required:
      - path
      - start_line
      - end_line
      - start_column
      - end_column
      - blob_sha
      - blob_url
      - commit_sha
      - commit_url
    secret-scanning-location-issue-title:
      description: Represents an 'issue_title' secret scanning location type. This
        location type shows that a secret was detected in the title of an issue.
      type: object
      properties:
        issue_title_url:
          type: string
          format: uri
          description: The API URL to get the issue where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
      required:
      - issue_title_url
    secret-scanning-location-issue-body:
      description: Represents an 'issue_body' secret scanning location type. This
        location type shows that a secret was detected in the body of an issue.
      type: object
      properties:
        issue_body_url:
          type: string
          format: uri
          description: The API URL to get the issue where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
      required:
      - issue_body_url
    secret-scanning-location-issue-comment:
      description: Represents an 'issue_comment' secret scanning location type. This
        location type shows that a secret was detected in a comment on an issue.
      type: object
      properties:
        issue_comment_url:
          type: string
          format: uri
          description: The API URL to get the issue comment where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451
      required:
      - issue_comment_url
    secret-scanning-location:
      type: object
      properties:
        type:
          type: string
          enum:
          - commit
          - issue_title
          - issue_body
          - issue_comment
          description: The location type. Because secrets may be found in different
            types of resources (ie. code, comments, issues), this field identifies
            the type of resource where the secret was found.
          example: commit
        details:
          oneOf:
          - "$ref": "#/components/schemas/secret-scanning-location-commit"
          - "$ref": "#/components/schemas/secret-scanning-location-issue-title"
          - "$ref": "#/components/schemas/secret-scanning-location-issue-body"
          - "$ref": "#/components/schemas/secret-scanning-location-issue-comment"
      required:
      - type
      - details
    security-advisory-ecosystems:
      type: string
      description: The package's language or package management ecosystem.
      enum:
      - rubygems
      - npm
      - pip
      - maven
      - nuget
      - composer
      - go
      - rust
      - erlang
      - actions
      - pub
      - other
    repository-advisory-vulnerability:
      description: A product affected by the vulnerability detailed in a repository
        security advisory.
      type: object
      properties:
        package:
          description: The name of the package affected by the vulnerability.
          type: object
          nullable: true
          properties:
            ecosystem:
              "$ref": "#/components/schemas/security-advisory-ecosystems"
            name:
              type: string
              description: The unique package name within its ecosystem.
              nullable: true
          required:
          - ecosystem
          - name
        vulnerable_version_range:
          type: string
          description: The range of the package versions affected by the vulnerability.
          nullable: true
        patched_versions:
          type: string
          description: The package version(s) that resolve the vulnerability.
          nullable: true
        vulnerable_functions:
          type: array
          description: The functions in the package that are affected.
          nullable: true
          items:
            type: string
      required:
      - package
      - vulnerable_version_range
      - patched_versions
      - vulnerable_functions
      additionalProperties: false
    security-advisory-credit-types:
      type: string
      description: The type of credit the user is receiving.
      enum:
      - analyst
      - finder
      - reporter
      - coordinator
      - remediation_developer
      - remediation_reviewer
      - remediation_verifier
      - tool
      - sponsor
      - other
    repository-advisory-credit:
      description: A credit given to a user for a repository security advisory.
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/simple-user"
        type:
          "$ref": "#/components/schemas/security-advisory-credit-types"
        state:
          type: string
          description: The state of the user's acceptance of the credit.
          enum:
          - accepted
          - declined
          - pending
      required:
      - user
      - type
      - state
      additionalProperties: false
    repository-advisory:
      description: A repository security advisory.
      type: object
      properties:
        ghsa_id:
          type: string
          description: The GitHub Security Advisory ID.
          readOnly: true
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
        url:
          type: string
          description: The API URL for the advisory.
        html_url:
          type: string
          format: uri
          description: The URL for the advisory.
          readOnly: true
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory entails.
          maxLength: 65535
          nullable: true
        severity:
          type: string
          description: The severity of the advisory.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        author:
          readOnly: true
          nullable: true
          description: The author of the advisory.
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        publisher:
          readOnly: true
          nullable: true
          description: The publisher of the advisory.
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        identifiers:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of identifier.
                enum:
                - CVE
                - GHSA
              value:
                type: string
                description: The identifier value.
            required:
            - type
            - value
          readOnly: true
        state:
          type: string
          description: The state of the advisory.
          enum:
          - published
          - closed
          - withdrawn
          - draft
          - triage
        created_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was created, in ISO
            8601 format.
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was last updated, in
            ISO 8601 format.
          readOnly: true
          nullable: true
        published_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was published, in ISO
            8601 format.
          readOnly: true
          nullable: true
        closed_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was closed, in ISO 8601
            format.
          readOnly: true
          nullable: true
        withdrawn_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was withdrawn, in ISO
            8601 format.
          readOnly: true
          nullable: true
        submission:
          type: object
          nullable: true
          readOnly: true
          properties:
            accepted:
              type: boolean
              description: Whether a private vulnerability report was accepted by
                the repository's administrators.
              readOnly: true
          required:
          - accepted
        vulnerabilities:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/repository-advisory-vulnerability"
        cvss:
          type: object
          nullable: true
          properties:
            vector_string:
              type: string
              description: The CVSS vector.
              nullable: true
            score:
              type: number
              description: The CVSS score.
              minimum: 0
              maximum: 10
              nullable: true
              readOnly: true
          required:
          - vector_string
          - score
        cwes:
          type: array
          nullable: true
          items:
            type: object
            properties:
              cwe_id:
                type: string
                description: The Common Weakness Enumeration (CWE) identifier.
              name:
                type: string
                description: The name of the CWE.
                readOnly: true
            required:
            - cwe_id
            - name
          readOnly: true
        cwe_ids:
          type: array
          description: A list of only the CWE IDs.
          nullable: true
          items:
            type: string
        credits:
          type: array
          nullable: true
          items:
            type: object
            properties:
              login:
                type: string
                description: The username of the user credited.
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
        credits_detailed:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/repository-advisory-credit"
          readOnly: true
      required:
      - ghsa_id
      - cve_id
      - url
      - html_url
      - summary
      - description
      - severity
      - author
      - publisher
      - identifiers
      - state
      - created_at
      - updated_at
      - published_at
      - closed_at
      - withdrawn_at
      - submission
      - vulnerabilities
      - cvss
      - cwes
      - cwe_ids
      - credits
      - credits_detailed
      additionalProperties: false
    repository-advisory-create:
      type: object
      properties:
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory impacts.
          maxLength: 65535
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
        vulnerabilities:
          type: array
          description: A product affected by the vulnerability detailed in a repository
            security advisory.
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              patched_versions:
                type: string
                description: The package version(s) that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected.
                nullable: true
                items:
                  type: string
            required:
            - package
            additionalProperties: false
        cwe_ids:
          type: array
          description: A list of Common Weakness Enumeration (CWE) IDs.
          nullable: true
          items:
            type: string
        credits:
          type: array
          description: A list of users receiving credit for their participation in
            the security advisory.
          nullable: true
          items:
            type: object
            properties:
              login:
                type: string
                description: The username of the user credited.
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
            required:
            - login
            - type
            additionalProperties: false
        severity:
          type: string
          description: The severity of the advisory. You must choose between setting
            this field or `cvss_vector_string`.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        cvss_vector_string:
          type: string
          description: The CVSS vector that calculates the severity of the advisory.
            You must choose between setting this field or `severity`.
          nullable: true
      required:
      - summary
      - description
      - vulnerabilities
      additionalProperties: false
    private-vulnerability-report-create:
      type: object
      properties:
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory impacts.
          maxLength: 65535
        vulnerabilities:
          type: array
          description: An array of products affected by the vulnerability detailed
            in a repository security advisory.
          nullable: true
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              patched_versions:
                type: string
                description: The package version(s) that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected.
                nullable: true
                items:
                  type: string
            required:
            - package
            additionalProperties: false
        cwe_ids:
          type: array
          description: A list of Common Weakness Enumeration (CWE) IDs.
          nullable: true
          items:
            type: string
        severity:
          type: string
          description: The severity of the advisory. You must choose between setting
            this field or `cvss_vector_string`.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        cvss_vector_string:
          type: string
          description: The CVSS vector that calculates the severity of the advisory.
            You must choose between setting this field or `severity`.
          nullable: true
      required:
      - summary
      - description
      additionalProperties: false
    repository-advisory-update:
      type: object
      properties:
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory impacts.
          maxLength: 65535
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
        vulnerabilities:
          type: array
          description: A product affected by the vulnerability detailed in a repository
            security advisory.
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              patched_versions:
                type: string
                description: The package version(s) that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected.
                nullable: true
                items:
                  type: string
            required:
            - package
            additionalProperties: false
        cwe_ids:
          type: array
          description: A list of Common Weakness Enumeration (CWE) IDs.
          nullable: true
          items:
            type: string
        credits:
          type: array
          description: A list of users receiving credit for their participation in
            the security advisory.
          nullable: true
          items:
            type: object
            properties:
              login:
                type: string
                description: The username of the user credited.
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
            required:
            - login
            - type
            additionalProperties: false
        severity:
          type: string
          description: The severity of the advisory. You must choose between setting
            this field or `cvss_vector_string`.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        cvss_vector_string:
          type: string
          description: The CVSS vector that calculates the severity of the advisory.
            You must choose between setting this field or `severity`.
          nullable: true
        state:
          type: string
          description: The state of the advisory.
          enum:
          - published
          - closed
          - draft
      additionalProperties: false
    stargazer:
      title: Stargazer
      description: Stargazer
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - starred_at
      - user
    code-frequency-stat:
      title: Code Frequency Stat
      description: Code Frequency Stat
      type: array
      items:
        type: integer
    commit-activity:
      title: Commit Activity
      description: Commit Activity
      type: object
      properties:
        days:
          type: array
          example:
          - 0
          - 3
          - 26
          - 20
          - 39
          - 1
          - 0
          items:
            type: integer
        total:
          type: integer
          example: 89
        week:
          type: integer
          example: 1336280400
      required:
      - days
      - total
      - week
    contributor-activity:
      title: Contributor Activity
      description: Contributor Activity
      type: object
      properties:
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        total:
          type: integer
          example: 135
        weeks:
          type: array
          example:
          - w: '1367712000'
            a: 6898
            d: 77
            c: 10
          items:
            type: object
            properties:
              w:
                type: integer
              a:
                type: integer
              d:
                type: integer
              c:
                type: integer
      required:
      - author
      - total
      - weeks
    participation-stats:
      title: Participation Stats
      type: object
      properties:
        all:
          type: array
          items:
            type: integer
        owner:
          type: array
          items:
            type: integer
      required:
      - all
      - owner
    repository-subscription:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        subscribed:
          description: Determines if notifications should be received from this repository.
          type: boolean
          example: true
        ignored:
          description: Determines if all notifications should be blocked from this
            repository.
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-10-06T21:34:12Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/subscription
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
      required:
      - created_at
      - ignored
      - reason
      - subscribed
      - url
      - repository_url
    tag:
      title: Tag
      description: Tag
      type: object
      properties:
        name:
          type: string
          example: v0.1
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        zipball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id:
          type: string
      required:
      - name
      - node_id
      - commit
      - zipball_url
      - tarball_url
    tag-protection:
      title: Tag protection
      description: Tag protection
      type: object
      properties:
        id:
          type: integer
          example: 2
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          example: '2011-01-26T19:01:12Z'
        enabled:
          type: boolean
          example: true
        pattern:
          type: string
          example: v1.*
      required:
      - pattern
    topic:
      title: Topic
      description: A topic aggregates entities that are related to a subject.
      type: object
      properties:
        names:
          type: array
          items:
            type: string
      required:
      - names
    traffic:
      title: Traffic
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        uniques:
          type: integer
        count:
          type: integer
      required:
      - timestamp
      - uniques
      - count
    clone-traffic:
      title: Clone Traffic
      description: Clone Traffic
      type: object
      properties:
        count:
          type: integer
          example: 173
        uniques:
          type: integer
          example: 128
        clones:
          type: array
          items:
            "$ref": "#/components/schemas/traffic"
      required:
      - uniques
      - count
      - clones
    content-traffic:
      title: Content Traffic
      description: Content Traffic
      type: object
      properties:
        path:
          type: string
          example: "/github/hubot"
        title:
          type: string
          example: 'github/hubot: A customizable life embetterment robot.'
        count:
          type: integer
          example: 3542
        uniques:
          type: integer
          example: 2225
      required:
      - path
      - title
      - uniques
      - count
    referrer-traffic:
      title: Referrer Traffic
      description: Referrer Traffic
      type: object
      properties:
        referrer:
          type: string
          example: Google
        count:
          type: integer
          example: 4
        uniques:
          type: integer
          example: 3
      required:
      - referrer
      - uniques
      - count
    view-traffic:
      title: View Traffic
      description: View Traffic
      type: object
      properties:
        count:
          type: integer
          example: 14850
        uniques:
          type: integer
          example: 3782
        views:
          type: array
          items:
            "$ref": "#/components/schemas/traffic"
      required:
      - uniques
      - count
      - views
    search-result-text-matches:
      title: Search Result Text Matches
      type: array
      items:
        type: object
        properties:
          object_url:
            type: string
          object_type:
            nullable: true
            type: string
          property:
            type: string
          fragment:
            type: string
          matches:
            type: array
            items:
              type: object
              properties:
                text:
                  type: string
                indices:
                  type: array
                  items:
                    type: integer
    code-search-result-item:
      title: Code Search Result Item
      description: Code Search Result Item
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        score:
          type: number
        file_size:
          type: integer
        language:
          type: string
          nullable: true
        last_modified_at:
          type: string
          format: date-time
        line_numbers:
          type: array
          items:
            type: string
          example:
          - 73..77
          - 77..78
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - score
      - name
      - path
      - sha
      - git_url
      - html_url
      - url
      - repository
    commit-search-result-item:
      title: Commit Search Result Item
      description: Commit Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        sha:
          type: string
        html_url:
          type: string
          format: uri
        comments_url:
          type: string
          format: uri
        commit:
          type: object
          properties:
            author:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                date:
                  type: string
                  format: date-time
              required:
              - name
              - email
              - date
            committer:
              "$ref": "#/components/schemas/nullable-git-user"
            comment_count:
              type: integer
            message:
              type: string
            tree:
              type: object
              properties:
                sha:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - sha
              - url
            url:
              type: string
              format: uri
            verification:
              "$ref": "#/components/schemas/verification"
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        committer:
          "$ref": "#/components/schemas/nullable-git-user"
        parents:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              html_url:
                type: string
              sha:
                type: string
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        score:
          type: number
        node_id:
          type: string
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - parents
      - comments_url
      - commit
      - repository
      - score
    issue-search-result-item:
      title: Issue Search Result Item
      description: Issue Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        id:
          type: integer
          format: int64
        node_id:
          type: string
        number:
          type: integer
        title:
          type: string
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              color:
                type: string
              default:
                type: boolean
              description:
                type: string
                nullable: true
        state:
          type: string
        state_reason:
          type: string
          nullable: true
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        body:
          type: string
        score:
          type: number
        author_association:
          "$ref": "#/components/schemas/author-association"
        draft:
          type: boolean
        repository:
          "$ref": "#/components/schemas/repository"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
      - score
    label-search-result-item:
      title: Label Search Result Item
      description: Label Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
          format: uri
        name:
          type: string
        color:
          type: string
        default:
          type: boolean
        description:
          type: string
          nullable: true
        score:
          type: number
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - id
      - node_id
      - url
      - name
      - color
      - default
      - description
      - score
    repo-search-result-item:
      title: Repo Search Result Item
      description: Repo Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        homepage:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        open_issues_count:
          type: integer
        master_branch:
          type: string
        default_branch:
          type: string
        score:
          type: number
        forks_url:
          type: string
          format: uri
        keys_url:
          type: string
        collaborators_url:
          type: string
        teams_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issue_events_url:
          type: string
        events_url:
          type: string
          format: uri
        assignees_url:
          type: string
        branches_url:
          type: string
        tags_url:
          type: string
          format: uri
        blobs_url:
          type: string
        git_tags_url:
          type: string
        git_refs_url:
          type: string
        trees_url:
          type: string
        statuses_url:
          type: string
        languages_url:
          type: string
          format: uri
        stargazers_url:
          type: string
          format: uri
        contributors_url:
          type: string
          format: uri
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        commits_url:
          type: string
        git_commits_url:
          type: string
        comments_url:
          type: string
        issue_comment_url:
          type: string
        contents_url:
          type: string
        compare_url:
          type: string
        merges_url:
          type: string
          format: uri
        archive_url:
          type: string
        downloads_url:
          type: string
          format: uri
        issues_url:
          type: string
        pulls_url:
          type: string
        milestones_url:
          type: string
        notifications_url:
          type: string
        labels_url:
          type: string
        releases_url:
          type: string
        deployments_url:
          type: string
          format: uri
        git_url:
          type: string
        ssh_url:
          type: string
        clone_url:
          type: string
        svn_url:
          type: string
          format: uri
        forks:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        topics:
          type: array
          items:
            type: string
        mirror_url:
          type: string
          format: uri
          nullable: true
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_pages:
          type: boolean
        has_wiki:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - pull
          - push
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        temp_clone_token:
          type: string
        allow_merge_commit:
          type: boolean
        allow_squash_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_auto_merge:
          type: boolean
        delete_branch_on_merge:
          type: boolean
        allow_forking:
          type: boolean
        is_template:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - score
    topic-search-result-item:
      title: Topic Search Result Item
      description: Topic Search Result Item
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
          nullable: true
        short_description:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        created_by:
          type: string
          nullable: true
        released:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        featured:
          type: boolean
        curated:
          type: boolean
        score:
          type: number
        repository_count:
          type: integer
          nullable: true
        logo_url:
          type: string
          format: uri
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        related:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
        aliases:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
      required:
      - name
      - display_name
      - short_description
      - description
      - created_by
      - released
      - created_at
      - updated_at
      - featured
      - curated
      - score
    user-search-result-item:
      title: User Search Result Item
      description: User Search Result Item
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        score:
          type: number
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        events_url:
          type: string
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        location:
          type: string
          nullable: true
        site_admin:
          type: boolean
        hireable:
          type: boolean
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        blog:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        suspended_at:
          type: string
          format: date-time
          nullable: true
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - score
    private-user:
      title: Private User
      description: Private User
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        name:
          type: string
          example: monalisa octocat
          nullable: true
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          example: https://github.com/blog
          nullable: true
        location:
          type: string
          example: San Francisco
          nullable: true
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          example: There once was...
          nullable: true
        twitter_username:
          type: string
          example: monalisa
          nullable: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        private_gists:
          type: integer
          example: 81
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        disk_usage:
          type: integer
          example: 10000
        collaborators:
          type: integer
          example: 8
        two_factor_authentication:
          type: boolean
          example: true
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        business_plus:
          type: boolean
        ldap_dn:
          type: string
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - bio
      - blog
      - company
      - email
      - followers
      - following
      - hireable
      - location
      - name
      - public_gists
      - public_repos
      - created_at
      - updated_at
      - collaborators
      - disk_usage
      - owned_private_repos
      - private_gists
      - total_private_repos
      - two_factor_authentication
    codespaces-secret:
      title: Codespaces Secret
      description: Secrets for a GitHub Codespace.
      type: object
      properties:
        name:
          description: The name of the secret
          example: SECRET_NAME
          type: string
        created_at:
          description: The date and time at which the secret was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the secret was last updated, in
            ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        visibility:
          description: The type of repositories in the organization that the secret
            is visible to
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          description: The API URL at which the list of repositories this secret is
            visible to can be retrieved
          type: string
          format: uri
          example: https://api.github.com/user/secrets/SECRET_NAME/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
      - selected_repositories_url
    codespaces-user-public-key:
      title: CodespacesUserPublicKey
      description: The public key used for setting user Codespaces' Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
      required:
      - key_id
      - key
    codespace-export-details:
      type: object
      title: Fetches information about an export of a codespace.
      description: An export of a codespace. Also, latest export details for a codespace
        can be fetched with id = latest
      properties:
        state:
          type: string
          description: State of the latest export
          nullable: true
          example: succeeded | failed | in_progress
        completed_at:
          description: Completion time of the last export operation
          type: string
          format: date-time
          nullable: true
          example: '2021-01-01T19:01:12Z'
        branch:
          type: string
          description: Name of the exported branch
          nullable: true
          example: codespace-monalisa-octocat-hello-world-g4wpq6h95q
        sha:
          type: string
          description: Git commit SHA of the exported branch
          nullable: true
          example: fd95a81ca01e48ede9f39c799ecbcef817b8a3b2
        id:
          type: string
          description: Id for the export details
          example: latest
        export_url:
          type: string
          description: Url for fetching export details
          example: https://api.github.com/user/codespaces/:name/exports/latest
        html_url:
          type: string
          nullable: true
          description: Web url for the exported branch
          example: https://github.com/octocat/hello-world/tree/:branch
    codespace-with-full-repository:
      type: object
      title: Codespace
      description: A codespace.
      properties:
        id:
          type: integer
          example: 1
        name:
          description: Automatically generated name of this codespace.
          type: string
          example: monalisa-octocat-hello-world-g4wpq6h95q
        display_name:
          description: Display name for this codespace.
          type: string
          example: bookish space pancake
          nullable: true
        environment_id:
          description: UUID identifying this codespace's environment.
          type: string
          example: 26a7c758-7299-4a73-b978-5a92a7ae98a0
          nullable: true
        owner:
          "$ref": "#/components/schemas/simple-user"
        billable_owner:
          "$ref": "#/components/schemas/simple-user"
        repository:
          "$ref": "#/components/schemas/full-repository"
        machine:
          "$ref": "#/components/schemas/nullable-codespace-machine"
        devcontainer_path:
          description: Path to devcontainer.json from repo root used to create Codespace.
          type: string
          example: ".devcontainer/example/devcontainer.json"
          nullable: true
        prebuild:
          description: Whether the codespace was created from a prebuild.
          type: boolean
          example: false
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        last_used_at:
          description: Last known time this codespace was started.
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        state:
          description: State of this codespace.
          enum:
          - Unknown
          - Created
          - Queued
          - Provisioning
          - Available
          - Awaiting
          - Unavailable
          - Deleted
          - Moved
          - Shutdown
          - Archived
          - Starting
          - ShuttingDown
          - Failed
          - Exporting
          - Updating
          - Rebuilding
          example: Available
          type: string
        url:
          description: API URL for this codespace.
          type: string
          format: uri
        git_status:
          description: Details about the codespace's git repository.
          type: object
          properties:
            ahead:
              description: The number of commits the local repository is ahead of
                the remote.
              type: integer
              example: 0
            behind:
              description: The number of commits the local repository is behind the
                remote.
              type: integer
              example: 0
            has_unpushed_changes:
              description: Whether the local repository has unpushed changes.
              type: boolean
            has_uncommitted_changes:
              description: Whether the local repository has uncommitted changes.
              type: boolean
            ref:
              description: The current branch (or SHA if in detached HEAD state) of
                the local repository.
              type: string
              example: main
        location:
          description: The initally assigned location of a new codespace.
          enum:
          - EastUs
          - SouthEastAsia
          - WestEurope
          - WestUs2
          example: WestUs2
          type: string
        idle_timeout_minutes:
          description: The number of minutes of inactivity after which this codespace
            will be automatically stopped.
          type: integer
          example: 60
          nullable: true
        web_url:
          description: URL to access this codespace on the web.
          type: string
          format: uri
        machines_url:
          description: API URL to access available alternate machine types for this
            codespace.
          type: string
          format: uri
        start_url:
          description: API URL to start this codespace.
          type: string
          format: uri
        stop_url:
          description: API URL to stop this codespace.
          type: string
          format: uri
        publish_url:
          description: API URL to publish this codespace to a new repository.
          type: string
          format: uri
          nullable: true
        pulls_url:
          description: API URL for the Pull Request associated with this codespace,
            if any.
          type: string
          format: uri
          nullable: true
        recent_folders:
          type: array
          items:
            type: string
        runtime_constraints:
          type: object
          properties:
            allowed_port_privacy_settings:
              description: The privacy settings a user can select from when forwarding
                a port.
              type: array
              items:
                type: string
              nullable: true
        pending_operation:
          description: Whether or not a codespace has a pending async operation. This
            would mean that the codespace is temporarily unavailable. The only thing
            that you can do with a codespace in this state is delete it.
          type: boolean
          nullable: true
        pending_operation_disabled_reason:
          description: Text to show user when codespace is disabled by a pending operation
          type: string
          nullable: true
        idle_timeout_notice:
          description: Text to show user when codespace idle timeout minutes has been
            overriden by an organization policy
          type: string
          nullable: true
        retention_period_minutes:
          description: Duration in minutes after codespace has gone idle in which
            it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
          type: integer
          example: 60
          nullable: true
        retention_expires_at:
          description: When a codespace will be auto-deleted based on the "retention_period_minutes"
            and "last_used_at"
          type: string
          format: date-time
          example: '2011-01-26T20:01:12Z'
          nullable: true
      required:
      - id
      - name
      - environment_id
      - owner
      - billable_owner
      - repository
      - machine
      - prebuild
      - created_at
      - updated_at
      - last_used_at
      - state
      - url
      - git_status
      - location
      - idle_timeout_minutes
      - web_url
      - machines_url
      - start_url
      - stop_url
      - pulls_url
      - recent_folders
    email:
      title: Email
      description: Email
      type: object
      properties:
        email:
          type: string
          format: email
          example: octocat@github.com
        primary:
          type: boolean
          example: true
        verified:
          type: boolean
          example: true
        visibility:
          type: string
          example: public
          nullable: true
      required:
      - email
      - primary
      - verified
      - visibility
    gpg-key:
      title: GPG Key
      description: A unique encryption key
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: Octocat's GPG Key
          nullable: true
        primary_key_id:
          type: integer
          nullable: true
        key_id:
          type: string
          example: 3262EFF25BA0D270
        public_key:
          type: string
          example: xsBNBFayYZ...
        emails:
          type: array
          example:
          - email: octocat@users.noreply.github.com
            verified: true
          items:
            type: object
            properties:
              email:
                type: string
              verified:
                type: boolean
        subkeys:
          type: array
          example:
          - id: 4
            primary_key_id: 3
            key_id: 4A595D4C72EE49C7
            public_key: zsBNBFayYZ...
            emails: []
            subkeys: []
            can_sign: false
            can_encrypt_comms: true
            can_encrypt_storage: true
            can_certify: false
            created_at: '2016-03-24T11:31:04-06:00'
            expires_at: 
            revoked: false
          items:
            type: object
            properties:
              id:
                type: integer
              primary_key_id:
                type: integer
              key_id:
                type: string
              public_key:
                type: string
              emails:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                    verified:
                      type: boolean
              subkeys:
                type: array
                items: {}
              can_sign:
                type: boolean
              can_encrypt_comms:
                type: boolean
              can_encrypt_storage:
                type: boolean
              can_certify:
                type: boolean
              created_at:
                type: string
              expires_at:
                type: string
                nullable: true
              raw_key:
                type: string
                nullable: true
              revoked:
                type: boolean
        can_sign:
          type: boolean
          example: true
        can_encrypt_comms:
          type: boolean
        can_encrypt_storage:
          type: boolean
        can_certify:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2016-03-24T11:31:04-06:00'
        expires_at:
          type: string
          format: date-time
          nullable: true
        revoked:
          type: boolean
          example: true
        raw_key:
          type: string
          nullable: true
      required:
      - id
      - primary_key_id
      - key_id
      - raw_key
      - public_key
      - created_at
      - expires_at
      - can_sign
      - can_encrypt_comms
      - can_encrypt_storage
      - can_certify
      - emails
      - subkeys
      - revoked
    key:
      title: Key
      description: Key
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        url:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        verified:
          type: boolean
        read_only:
          type: boolean
      required:
      - key
      - id
      - url
      - title
      - created_at
      - verified
      - read_only
    marketplace-account:
      title: Marketplace Account
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        type:
          type: string
        node_id:
          type: string
        login:
          type: string
        email:
          type: string
          nullable: true
          format: email
        organization_billing_email:
          type: string
          nullable: true
          format: email
      required:
      - url
      - id
      - type
      - login
    user-marketplace-purchase:
      title: User Marketplace Purchase
      description: User Marketplace Purchase
      type: object
      properties:
        billing_cycle:
          type: string
          example: monthly
        next_billing_date:
          type: string
          format: date-time
          example: '2017-11-11T00:00:00Z'
          nullable: true
        unit_count:
          type: integer
          nullable: true
        on_free_trial:
          type: boolean
          example: true
        free_trial_ends_on:
          type: string
          format: date-time
          example: '2017-11-11T00:00:00Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2017-11-02T01:12:12Z'
          nullable: true
        account:
          "$ref": "#/components/schemas/marketplace-account"
        plan:
          "$ref": "#/components/schemas/marketplace-listing-plan"
      required:
      - billing_cycle
      - next_billing_date
      - unit_count
      - updated_at
      - on_free_trial
      - free_trial_ends_on
      - account
      - plan
    social-account:
      title: Social account
      description: Social media account
      type: object
      properties:
        provider:
          type: string
          example: linkedin
        url:
          type: string
          example: https://www.linkedin.com/company/github/
      required:
      - provider
      - url
    ssh-signing-key:
      title: SSH Signing Key
      description: A public SSH key used to sign Git commits
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        title:
          type: string
        created_at:
          type: string
          format: date-time
      required:
      - key
      - id
      - title
      - created_at
    starred-repository:
      title: Starred Repository
      description: Starred Repository
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        repo:
          "$ref": "#/components/schemas/repository"
      required:
      - starred_at
      - repo
    hovercard:
      title: Hovercard
      description: Hovercard
      type: object
      properties:
        contexts:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              octicon:
                type: string
            required:
            - message
            - octicon
      required:
      - contexts
    key-simple:
      title: Key Simple
      description: Key Simple
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
      required:
      - key
      - id
    simple-installation:
      title: Simple Installation
      description: The GitHub App installation. This property is included when the
        event is configured for and sent to a GitHub App.
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        node_id:
          description: The global node ID of the installation.
          type: string
          example: MDQ6VXNlcjU4MzIzMQ==
      required:
      - id
      - node_id
    simple-check-suite:
      description: A suite of checks performed on the code of a given code change
      type: object
      properties:
        after:
          example: d6fde92930d4715a2b49857d24b940956b26d2d3
          type: string
          nullable: true
        app:
          "$ref": "#/components/schemas/integration"
        before:
          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          type: string
          nullable: true
        conclusion:
          example: neutral
          type: string
          nullable: true
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          - stale
          - startup_failure
        created_at:
          type: string
          format: date-time
        head_branch:
          example: master
          type: string
          nullable: true
        head_sha:
          description: The SHA of the head commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        id:
          example: 5
          type: integer
        node_id:
          example: MDEwOkNoZWNrU3VpdGU1
          type: string
        pull_requests:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        status:
          example: completed
          type: string
          enum:
          - queued
          - in_progress
          - completed
          - pending
          - waiting
        updated_at:
          type: string
          format: date-time
        url:
          example: https://api.github.com/repos/github/hello-world/check-suites/5
          type: string
    check-run-with-simple-check-suite:
      title: CheckRun
      description: A check performed on the code of a given code change
      type: object
      properties:
        app:
          "$ref": "#/components/schemas/nullable-integration"
        check_suite:
          "$ref": "#/components/schemas/simple-check-suite"
        completed_at:
          example: '2018-05-04T01:14:52Z'
          type: string
          nullable: true
          format: date-time
        conclusion:
          example: neutral
          type: string
          nullable: true
          enum:
          - waiting
          - pending
          - startup_failure
          - stale
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
        deployment:
          "$ref": "#/components/schemas/deployment-simple"
        details_url:
          example: https://example.com
          type: string
        external_id:
          example: '42'
          type: string
        head_sha:
          description: The SHA of the commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        html_url:
          example: https://github.com/github/hello-world/runs/4
          type: string
        id:
          description: The id of the check.
          example: 21
          type: integer
        name:
          description: The name of the check.
          example: test-coverage
          type: string
        node_id:
          example: MDg6Q2hlY2tSdW40
          type: string
        output:
          type: object
          properties:
            annotations_count:
              type: integer
            annotations_url:
              type: string
              format: uri
            summary:
              type: string
              nullable: true
            text:
              type: string
              nullable: true
            title:
              type: string
              nullable: true
          required:
          - title
          - summary
          - text
          - annotations_count
          - annotations_url
        pull_requests:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        started_at:
          example: '2018-05-04T01:14:52Z'
          type: string
          format: date-time
        status:
          description: The phase of the lifecycle that the check is currently in.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
          - pending
        url:
          example: https://api.github.com/repos/github/hello-world/check-runs/4
          type: string
      required:
      - id
      - node_id
      - head_sha
      - name
      - url
      - html_url
      - details_url
      - status
      - conclusion
      - started_at
      - completed_at
      - external_id
      - check_suite
      - output
      - app
      - pull_requests
    discussion:
      title: Discussion
      description: A Discussion in a repository.
      type: object
      properties:
        active_lock_reason:
          type: string
          nullable: true
        answer_chosen_at:
          type: string
          nullable: true
        answer_chosen_by:
          title: User
          type: object
          nullable: true
          properties:
            avatar_url:
              type: string
              format: uri
            deleted:
              type: boolean
            email:
              type: string
              nullable: true
            events_url:
              type: string
              format: uri-template
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            gravatar_id:
              type: string
            html_url:
              type: string
              format: uri
            id:
              type: integer
            login:
              type: string
            name:
              type: string
            node_id:
              type: string
            organizations_url:
              type: string
              format: uri
            received_events_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            site_admin:
              type: boolean
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            type:
              type: string
              enum:
              - Bot
              - User
              - Organization
            url:
              type: string
              format: uri
          required:
          - login
          - id
        answer_html_url:
          type: string
          nullable: true
        author_association:
          title: AuthorAssociation
          description: How the author is associated with the repository.
          type: string
          enum:
          - COLLABORATOR
          - CONTRIBUTOR
          - FIRST_TIMER
          - FIRST_TIME_CONTRIBUTOR
          - MANNEQUIN
          - MEMBER
          - NONE
          - OWNER
        body:
          type: string
        category:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
            description:
              type: string
            emoji:
              type: string
            id:
              type: integer
            is_answerable:
              type: boolean
            name:
              type: string
            node_id:
              type: string
            repository_id:
              type: integer
            slug:
              type: string
            updated_at:
              type: string
          required:
          - id
          - repository_id
          - emoji
          - name
          - description
          - created_at
          - updated_at
          - slug
          - is_answerable
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        html_url:
          type: string
        id:
          type: integer
        locked:
          type: boolean
        node_id:
          type: string
        number:
          type: integer
        reactions:
          title: Reactions
          type: object
          properties:
            "+1":
              type: integer
            "-1":
              type: integer
            confused:
              type: integer
            eyes:
              type: integer
            heart:
              type: integer
            hooray:
              type: integer
            laugh:
              type: integer
            rocket:
              type: integer
            total_count:
              type: integer
            url:
              type: string
              format: uri
          required:
          - url
          - total_count
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - eyes
          - rocket
        repository_url:
          type: string
        state:
          type: string
          description: |-
            The current state of the discussion.
            `converting` means that the discussion is being converted from an issue.
            `transferring` means that the discussion is being transferred from another repository.
          enum:
          - open
          - closed
          - locked
          - converting
          - transferring
        state_reason:
          description: The reason for the current state
          example: resolved
          type: string
          nullable: true
          enum:
          - resolved
          - outdated
          - duplicate
          - reopened
        timeline_url:
          type: string
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        user:
          title: User
          type: object
          nullable: true
          properties:
            avatar_url:
              type: string
              format: uri
            deleted:
              type: boolean
            email:
              type: string
              nullable: true
            events_url:
              type: string
              format: uri-template
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            gravatar_id:
              type: string
            html_url:
              type: string
              format: uri
            id:
              type: integer
            login:
              type: string
            name:
              type: string
            node_id:
              type: string
            organizations_url:
              type: string
              format: uri
            received_events_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            site_admin:
              type: boolean
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            type:
              type: string
              enum:
              - Bot
              - User
              - Organization
            url:
              type: string
              format: uri
          required:
          - login
          - id
      required:
      - repository_url
      - category
      - answer_html_url
      - answer_chosen_at
      - answer_chosen_by
      - html_url
      - id
      - node_id
      - number
      - title
      - user
      - state
      - state_reason
      - locked
      - comments
      - created_at
      - updated_at
      - author_association
      - active_lock_reason
      - body
    merge-group:
      type: object
      title: Merge Group
      description: 'A group of pull requests that the merge queue has grouped together
        to be merged.

'
  schemas:
    root:
      type: object
      properties:
        code-search-result-item:
          title: Code Search Result Item
          description: Code Search Result Item
          type: object
          properties:
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            url:
              type: string
              format: uri
            git_url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            repository:
              "$ref": "#/components/schemas/minimal-repository"
            score:
              type: number
            file_size:
              type: integer
            language:
              type: string
              nullable: true
            last_modified_at:
              type: string
              format: date-time
            line_numbers:
              type: array
              items:
                type: string
              example:
              - 73..77
              - 77..78
            text_matches:
              "$ref": "#/components/schemas/search-result-text-matches"
          required:
          - score
          - name
          - path
          - sha
          - git_url
          - html_url
          - url
          - repository
    